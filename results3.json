{
    "generationTime": "0001-01-01T00:00:00Z",
    "clusterAPIServerInfo": {
      "major": "1",
      "minor": "30",
      "gitVersion": "v1.30.2",
      "gitCommit": "39683505b630ff2121012f3c5b16215a1449d5ed",
      "gitTreeState": "clean",
      "buildDate": "2024-06-11T20:21:00Z",
      "goVersion": "go1.22.4",
      "compiler": "gc",
      "platform": "linux/amd64"
    },
    "clusterCloudProvider": "",
    "customerGUID": "",
    "clusterName": "",
    "reportGUID": "",
    "jobID": "",
    "summaryDetails": {
      "controls": {
        "C-0002": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0002",
          "name": "Prevent containers from allowing command execution",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 90,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 2
          },
          "score": 1.0989012,
          "complianceScore": 98.9011,
          "scoreFactor": 5,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0005": {
          "statusInfo": {
            "status": "passed"
          },
          "controlID": "C-0005",
          "name": "API server insecure port is enabled",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 1,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 9,
          "category": {
            "name": "Control plane",
            "id": "Cat-1"
          }
        },
        "C-0007": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0007",
          "name": "Roles with delete capabilities",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 84,
            "failedResources": 7,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 18
          },
          "score": 7.6923075,
          "complianceScore": 92.30769,
          "scoreFactor": 5,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0012": {
          "statusInfo": {
            "status": "passed"
          },
          "controlID": "C-0012",
          "name": "Applications credentials in configuration files",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 79,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 8,
          "category": {
            "name": "Secrets",
            "id": "Cat-3"
          }
        },
        "C-0013": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0013",
          "name": "Non-root containers",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 25,
            "failedResources": 17,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 7
          },
          "score": 38.288284,
          "complianceScore": 59.523808,
          "scoreFactor": 6,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Node escape",
              "id": "Cat-9"
            }
          }
        },
        "C-0014": {
          "statusInfo": {
            "status": "passed"
          },
          "controlID": "C-0014",
          "name": "Access Kubernetes dashboard",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 133,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 2,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0015": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0015",
          "name": "List Kubernetes secrets",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 83,
            "failedResources": 8,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 11
          },
          "score": 8.791209,
          "complianceScore": 91.20879,
          "scoreFactor": 7,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0016": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0016",
          "name": "Allow privilege escalation",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 32,
            "failedResources": 10,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 6
          },
          "score": 22.52252,
          "complianceScore": 76.190475,
          "scoreFactor": 6,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Node escape",
              "id": "Cat-9"
            }
          }
        },
        "C-0017": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0017",
          "name": "Immutable container filesystem",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 31,
            "failedResources": 11,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 6
          },
          "score": 24.774773,
          "complianceScore": 73.809525,
          "scoreFactor": 3,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Node escape",
              "id": "Cat-9"
            }
          }
        },
        "C-0020": {
          "statusInfo": {
            "status": "passed"
          },
          "controlID": "C-0020",
          "name": "Mount service principal",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 42,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 4,
          "category": {
            "name": "Workload",
            "id": "Cat-5"
          }
        },
        "C-0021": {
          "statusInfo": {
            "status": "passed",
            "subStatus": "irrelevant"
          },
          "controlID": "C-0021",
          "name": "Exposed sensitive interfaces",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 6,
          "category": {
            "name": "Workload",
            "id": "Cat-5"
          }
        },
        "C-0026": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0026",
          "name": "Kubernetes CronJob",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 2,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 100,
          "complianceScore": 0,
          "scoreFactor": 1,
          "category": {
            "name": "Workload",
            "id": "Cat-5"
          }
        },
        "C-0030": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0030",
          "name": "Ingress and Egress blocked",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 47,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 7
          },
          "score": 1.9841268,
          "complianceScore": 97.91667,
          "scoreFactor": 6,
          "category": {
            "name": "Network",
            "id": "Cat-4"
          }
        },
        "C-0031": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0031",
          "name": "Delete Kubernetes events",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 90,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 4
          },
          "score": 1.0989012,
          "complianceScore": 98.9011,
          "scoreFactor": 4,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0034": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0034",
          "name": "Automatic mapping of service account",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 73,
            "failedResources": 30,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 43
          },
          "score": 28.463,
          "complianceScore": 70.87379,
          "scoreFactor": 6,
          "category": {
            "name": "Secrets",
            "id": "Cat-3"
          }
        },
        "C-0035": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0035",
          "name": "Administrative Roles",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 90,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 2
          },
          "score": 1.0989012,
          "complianceScore": 98.9011,
          "scoreFactor": 6,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0036": {
          "statusInfo": {
            "status": "passed",
            "subStatus": "irrelevant"
          },
          "controlID": "C-0036",
          "name": "Validate admission controller (validating)",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 3,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0037": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0037",
          "name": "CoreDNS poisoning",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 88,
            "failedResources": 3,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 4
          },
          "score": 3.2967033,
          "complianceScore": 96.7033,
          "scoreFactor": 4,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0038": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0038",
          "name": "Host PID/IPC privileges",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 40,
            "failedResources": 2,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 4.504504,
          "complianceScore": 95.2381,
          "scoreFactor": 7,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Node escape",
              "id": "Cat-9"
            }
          }
        },
        "C-0039": {
          "statusInfo": {
            "status": "passed",
            "subStatus": "irrelevant"
          },
          "controlID": "C-0039",
          "name": "Validate admission controller (mutating)",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 4,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0041": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0041",
          "name": "HostNetwork access",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 41,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 5
          },
          "score": 2.252252,
          "complianceScore": 97.61904,
          "scoreFactor": 7,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Network",
              "id": "Cat-4"
            }
          }
        },
        "C-0042": {
          "statusInfo": {
            "status": "passed"
          },
          "controlID": "C-0042",
          "name": "SSH server running inside container",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 7,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 3,
          "category": {
            "name": "Workload",
            "id": "Cat-5"
          }
        },
        "C-0044": {
          "statusInfo": {
            "status": "passed"
          },
          "controlID": "C-0044",
          "name": "Container hostPort",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 42,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 4,
          "category": {
            "name": "Network",
            "id": "Cat-4"
          }
        },
        "C-0045": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0045",
          "name": "Writable hostPath mount",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 39,
            "failedResources": 3,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 4
          },
          "score": 6.7567563,
          "complianceScore": 92.85714,
          "scoreFactor": 8,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Storage",
              "id": "Cat-8"
            }
          }
        },
        "C-0046": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0046",
          "name": "Insecure capabilities",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 41,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 2.252252,
          "complianceScore": 97.61904,
          "scoreFactor": 7,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Node escape",
              "id": "Cat-9"
            }
          }
        },
        "C-0048": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0048",
          "name": "HostPath mount",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 38,
            "failedResources": 4,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 6
          },
          "score": 9.009008,
          "complianceScore": 90.47619,
          "scoreFactor": 7,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Storage",
              "id": "Cat-8"
            }
          }
        },
        "C-0053": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0053",
          "name": "Access container service account",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 43,
            "failedResources": 22,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 43
          },
          "score": 33.846153,
          "complianceScore": 66.15385,
          "scoreFactor": 6,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0054": {
          "statusInfo": {
            "status": "passed",
            "subStatus": "w/exceptions"
          },
          "controlID": "C-0054",
          "name": "Cluster internal networking",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 4,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 3
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 4,
          "category": {
            "name": "Network",
            "id": "Cat-4"
          }
        },
        "C-0055": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0055",
          "name": "Linux hardening",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 23,
            "failedResources": 19,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 2
          },
          "score": 42.79279,
          "complianceScore": 54.761906,
          "scoreFactor": 4,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Node escape",
              "id": "Cat-9"
            }
          }
        },
        "C-0057": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0057",
          "name": "Privileged container",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 41,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 1
          },
          "score": 2.252252,
          "complianceScore": 97.61904,
          "scoreFactor": 8,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Node escape",
              "id": "Cat-9"
            }
          }
        },
        "C-0058": {
          "statusInfo": {
            "status": "passed",
            "subStatus": "irrelevant"
          },
          "controlID": "C-0058",
          "name": "CVE-2021-25741 - Using symlink for arbitrary host file system access.",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 6,
          "category": {
            "name": "Workload",
            "id": "Cat-5"
          }
        },
        "C-0059": {
          "statusInfo": {
            "status": "passed",
            "subStatus": "irrelevant"
          },
          "controlID": "C-0059",
          "name": "CVE-2021-25742-nginx-ingress-snippet-annotation-vulnerability",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 8,
          "category": {
            "name": "Workload",
            "id": "Cat-5"
          }
        },
        "C-0063": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0063",
          "name": "Portforwarding privileges",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 90,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 2
          },
          "score": 1.0989012,
          "complianceScore": 98.9011,
          "scoreFactor": 5,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0066": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0066",
          "name": "Secret/etcd encryption enabled",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 100,
          "complianceScore": 0,
          "scoreFactor": 6,
          "category": {
            "name": "Control plane",
            "id": "Cat-1"
          }
        },
        "C-0067": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0067",
          "name": "Audit logs enabled",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 100,
          "complianceScore": 0,
          "scoreFactor": 5,
          "category": {
            "name": "Control plane",
            "id": "Cat-1"
          }
        },
        "C-0068": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0068",
          "name": "PSP enabled",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 100,
          "complianceScore": 0,
          "scoreFactor": 1,
          "category": {
            "name": "Control plane",
            "id": "Cat-1"
          }
        },
        "C-0069": {
          "statusInfo": {
            "status": "skipped",
            "info": "This control is scanned exclusively by the Kubescape operator, not the Kubescape CLI. Install the Kubescape operator:\n     https://kubescape.io/docs/install-operator/."
          },
          "controlID": "C-0069",
          "name": "Disable anonymous access to Kubelet service",
          "status": "skipped",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 0,
          "scoreFactor": 10,
          "category": {
            "name": "Control plane",
            "id": "Cat-1"
          }
        },
        "C-0070": {
          "statusInfo": {
            "status": "skipped",
            "info": "This control is scanned exclusively by the Kubescape operator, not the Kubescape CLI. Install the Kubescape operator:\n     https://kubescape.io/docs/install-operator/."
          },
          "controlID": "C-0070",
          "name": "Enforce Kubelet client TLS authentication",
          "status": "skipped",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 0,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 0,
          "scoreFactor": 9,
          "category": {
            "name": "Control plane",
            "id": "Cat-1"
          }
        },
        "C-0088": {
          "statusInfo": {
            "status": "passed"
          },
          "controlID": "C-0088",
          "name": "RBAC enabled",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 1,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 7,
          "category": {
            "name": "Control plane",
            "id": "Cat-1"
          }
        },
        "C-0187": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0187",
          "name": "Minimize wildcard use in Roles and ClusterRoles",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 90,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 2
          },
          "score": 1.0989012,
          "complianceScore": 98.9011,
          "scoreFactor": 7,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0188": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0188",
          "name": "Minimize access to create pods",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 90,
            "failedResources": 1,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 8
          },
          "score": 1.0989012,
          "complianceScore": 98.9011,
          "scoreFactor": 5,
          "category": {
            "name": "Access control",
            "id": "Cat-2"
          }
        },
        "C-0256": {
          "statusInfo": {
            "status": "passed"
          },
          "controlID": "C-0256",
          "name": "External facing",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 86,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 7
        },
        "C-0260": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0260",
          "name": "Missing network policy",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 83,
            "failedResources": 2,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 6
          },
          "score": 2.2883296,
          "complianceScore": 97.64706,
          "scoreFactor": 5,
          "category": {
            "name": "Network",
            "id": "Cat-4"
          }
        },
        "C-0262": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0262",
          "name": "Anonymous access enabled",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 82,
            "failedResources": 2,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 2.3809524,
          "complianceScore": 97.61904,
          "scoreFactor": 7,
          "category": {
            "name": "Control plane",
            "id": "Cat-1",
            "subCategory": {
              "name": "Supply chain",
              "id": "Cat-6"
            }
          }
        },
        "C-0265": {
          "statusInfo": {
            "status": "passed"
          },
          "controlID": "C-0265",
          "name": "Authenticated user has sensitive permissions",
          "status": "passed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 91,
            "failedResources": 0,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 0
          },
          "score": 0,
          "complianceScore": 100,
          "scoreFactor": 7,
          "category": {
            "name": "Control plane",
            "id": "Cat-1",
            "subCategory": {
              "name": "Supply chain",
              "id": "Cat-6"
            }
          }
        },
        "C-0270": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0270",
          "name": "Ensure CPU limits are set",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 20,
            "failedResources": 22,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 7
          },
          "score": 52.25225,
          "complianceScore": 47.61905,
          "scoreFactor": 8,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Resource management",
              "id": "Cat-7"
            }
          }
        },
        "C-0271": {
          "statusInfo": {
            "status": "failed"
          },
          "controlID": "C-0271",
          "name": "Ensure memory limits are set",
          "status": "failed",
          "resourceIDs": {},
          "ResourceCounters": {
            "passedResources": 20,
            "failedResources": 22,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "subStatusCounters": {
            "ignoredResources": 6
          },
          "score": 52.25225,
          "complianceScore": 47.61905,
          "scoreFactor": 8,
          "category": {
            "name": "Workload",
            "id": "Cat-5",
            "subCategory": {
              "name": "Resource management",
              "id": "Cat-7"
            }
          }
        }
      },
      "status": "failed",
      "frameworks": [
        {
          "controls": {
            "C-0002": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0002",
              "name": "Prevent containers from allowing command execution",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 90,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 2
              },
              "score": 1.0989012,
              "complianceScore": 98.9011,
              "scoreFactor": 5,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0005": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0005",
              "name": "API server insecure port is enabled",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 1,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 9,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0007": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0007",
              "name": "Roles with delete capabilities",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 84,
                "failedResources": 7,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 18
              },
              "score": 7.6923075,
              "complianceScore": 92.30769,
              "scoreFactor": 5,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0012": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0012",
              "name": "Applications credentials in configuration files",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 79,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 8,
              "category": {
                "name": "Secrets",
                "id": "Cat-3"
              }
            },
            "C-0013": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0013",
              "name": "Non-root containers",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 25,
                "failedResources": 17,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 7
              },
              "score": 38.288284,
              "complianceScore": 59.523808,
              "scoreFactor": 6,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0015": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0015",
              "name": "List Kubernetes secrets",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 83,
                "failedResources": 8,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 11
              },
              "score": 8.791209,
              "complianceScore": 91.20879,
              "scoreFactor": 7,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0035": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0035",
              "name": "Administrative Roles",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 90,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 2
              },
              "score": 1.0989012,
              "complianceScore": 98.9011,
              "scoreFactor": 6,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0036": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "irrelevant"
              },
              "controlID": "C-0036",
              "name": "Validate admission controller (validating)",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 3,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0038": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0038",
              "name": "Host PID/IPC privileges",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 40,
                "failedResources": 2,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 4.504504,
              "complianceScore": 95.2381,
              "scoreFactor": 7,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0039": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "irrelevant"
              },
              "controlID": "C-0039",
              "name": "Validate admission controller (mutating)",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 4,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0041": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0041",
              "name": "HostNetwork access",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 41,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 5
              },
              "score": 2.252252,
              "complianceScore": 97.61904,
              "scoreFactor": 7,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Network",
                  "id": "Cat-4"
                }
              }
            },
            "C-0048": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0048",
              "name": "HostPath mount",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 38,
                "failedResources": 4,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 6
              },
              "score": 9.009008,
              "complianceScore": 90.47619,
              "scoreFactor": 7,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Storage",
                  "id": "Cat-8"
                }
              }
            },
            "C-0057": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0057",
              "name": "Privileged container",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 41,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 1
              },
              "score": 2.252252,
              "complianceScore": 97.61904,
              "scoreFactor": 8,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0063": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0063",
              "name": "Portforwarding privileges",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 90,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 2
              },
              "score": 1.0989012,
              "complianceScore": 98.9011,
              "scoreFactor": 5,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0066": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0066",
              "name": "Secret/etcd encryption enabled",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 100,
              "complianceScore": 0,
              "scoreFactor": 6,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0067": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0067",
              "name": "Audit logs enabled",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 100,
              "complianceScore": 0,
              "scoreFactor": 5,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0088": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0088",
              "name": "RBAC enabled",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 1,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 7,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0187": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0187",
              "name": "Minimize wildcard use in Roles and ClusterRoles",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 90,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 2
              },
              "score": 1.0989012,
              "complianceScore": 98.9011,
              "scoreFactor": 7,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0188": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0188",
              "name": "Minimize access to create pods",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 90,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 8
              },
              "score": 1.0989012,
              "complianceScore": 98.9011,
              "scoreFactor": 5,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0256": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0256",
              "name": "External facing",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 86,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 7
            },
            "C-0260": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0260",
              "name": "Missing network policy",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 83,
                "failedResources": 2,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 6
              },
              "score": 2.2883296,
              "complianceScore": 97.64706,
              "scoreFactor": 5,
              "category": {
                "name": "Network",
                "id": "Cat-4"
              }
            },
            "C-0262": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0262",
              "name": "Anonymous access enabled",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 82,
                "failedResources": 2,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 2.3809524,
              "complianceScore": 97.61904,
              "scoreFactor": 7,
              "category": {
                "name": "Control plane",
                "id": "Cat-1",
                "subCategory": {
                  "name": "Supply chain",
                  "id": "Cat-6"
                }
              }
            },
            "C-0265": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0265",
              "name": "Authenticated user has sensitive permissions",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 91,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 7,
              "category": {
                "name": "Control plane",
                "id": "Cat-1",
                "subCategory": {
                  "name": "Supply chain",
                  "id": "Cat-6"
                }
              }
            }
          },
          "name": "ClusterScan",
          "status": "failed",
          "version": "",
          "ResourceCounters": {
            "passedResources": 272,
            "failedResources": 32,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "score": 3.839078,
          "complianceScore": 87.55497
        },
        {
          "controls": {
            "C-0002": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0002",
              "name": "Prevent containers from allowing command execution",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 90,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 2
              },
              "score": 1.0989012,
              "complianceScore": 98.9011,
              "scoreFactor": 5,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0007": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0007",
              "name": "Roles with delete capabilities",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 84,
                "failedResources": 7,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 18
              },
              "score": 7.6923075,
              "complianceScore": 92.30769,
              "scoreFactor": 5,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0012": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0012",
              "name": "Applications credentials in configuration files",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 79,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 8,
              "category": {
                "name": "Secrets",
                "id": "Cat-3"
              }
            },
            "C-0014": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0014",
              "name": "Access Kubernetes dashboard",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 133,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 2,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0015": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0015",
              "name": "List Kubernetes secrets",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 83,
                "failedResources": 8,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 11
              },
              "score": 8.791209,
              "complianceScore": 91.20879,
              "scoreFactor": 7,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0020": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0020",
              "name": "Mount service principal",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 42,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 4,
              "category": {
                "name": "Workload",
                "id": "Cat-5"
              }
            },
            "C-0021": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "irrelevant"
              },
              "controlID": "C-0021",
              "name": "Exposed sensitive interfaces",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 6,
              "category": {
                "name": "Workload",
                "id": "Cat-5"
              }
            },
            "C-0026": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0026",
              "name": "Kubernetes CronJob",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 2,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 100,
              "complianceScore": 0,
              "scoreFactor": 1,
              "category": {
                "name": "Workload",
                "id": "Cat-5"
              }
            },
            "C-0031": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0031",
              "name": "Delete Kubernetes events",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 90,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 4
              },
              "score": 1.0989012,
              "complianceScore": 98.9011,
              "scoreFactor": 4,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0035": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0035",
              "name": "Administrative Roles",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 90,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 2
              },
              "score": 1.0989012,
              "complianceScore": 98.9011,
              "scoreFactor": 6,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0036": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "irrelevant"
              },
              "controlID": "C-0036",
              "name": "Validate admission controller (validating)",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 3,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0037": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0037",
              "name": "CoreDNS poisoning",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 88,
                "failedResources": 3,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 4
              },
              "score": 3.2967033,
              "complianceScore": 96.7033,
              "scoreFactor": 4,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0039": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "irrelevant"
              },
              "controlID": "C-0039",
              "name": "Validate admission controller (mutating)",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 4,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0042": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0042",
              "name": "SSH server running inside container",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 7,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 3,
              "category": {
                "name": "Workload",
                "id": "Cat-5"
              }
            },
            "C-0045": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0045",
              "name": "Writable hostPath mount",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 39,
                "failedResources": 3,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 4
              },
              "score": 6.7567563,
              "complianceScore": 92.85714,
              "scoreFactor": 8,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Storage",
                  "id": "Cat-8"
                }
              }
            },
            "C-0048": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0048",
              "name": "HostPath mount",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 38,
                "failedResources": 4,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 6
              },
              "score": 9.009008,
              "complianceScore": 90.47619,
              "scoreFactor": 7,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Storage",
                  "id": "Cat-8"
                }
              }
            },
            "C-0053": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0053",
              "name": "Access container service account",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 43,
                "failedResources": 22,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 43
              },
              "score": 33.846153,
              "complianceScore": 66.15385,
              "scoreFactor": 6,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0054": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "w/exceptions"
              },
              "controlID": "C-0054",
              "name": "Cluster internal networking",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 4,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 3
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 4,
              "category": {
                "name": "Network",
                "id": "Cat-4"
              }
            },
            "C-0057": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0057",
              "name": "Privileged container",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 41,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 1
              },
              "score": 2.252252,
              "complianceScore": 97.61904,
              "scoreFactor": 8,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0058": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "irrelevant"
              },
              "controlID": "C-0058",
              "name": "CVE-2021-25741 - Using symlink for arbitrary host file system access.",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 6,
              "category": {
                "name": "Workload",
                "id": "Cat-5"
              }
            },
            "C-0059": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "irrelevant"
              },
              "controlID": "C-0059",
              "name": "CVE-2021-25742-nginx-ingress-snippet-annotation-vulnerability",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 8,
              "category": {
                "name": "Workload",
                "id": "Cat-5"
              }
            },
            "C-0066": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0066",
              "name": "Secret/etcd encryption enabled",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 100,
              "complianceScore": 0,
              "scoreFactor": 6,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0067": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0067",
              "name": "Audit logs enabled",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 100,
              "complianceScore": 0,
              "scoreFactor": 5,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0068": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0068",
              "name": "PSP enabled",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 100,
              "complianceScore": 0,
              "scoreFactor": 1,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0069": {
              "statusInfo": {
                "status": "skipped",
                "info": "This control is scanned exclusively by the Kubescape operator, not the Kubescape CLI. Install the Kubescape operator:\n     https://kubescape.io/docs/install-operator/."
              },
              "controlID": "C-0069",
              "name": "Disable anonymous access to Kubelet service",
              "status": "skipped",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 0,
              "scoreFactor": 10,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0070": {
              "statusInfo": {
                "status": "skipped",
                "info": "This control is scanned exclusively by the Kubescape operator, not the Kubescape CLI. Install the Kubescape operator:\n     https://kubescape.io/docs/install-operator/."
              },
              "controlID": "C-0070",
              "name": "Enforce Kubelet client TLS authentication",
              "status": "skipped",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 0,
              "scoreFactor": 9,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            }
          },
          "name": "MITRE",
          "status": "failed",
          "version": "",
          "ResourceCounters": {
            "passedResources": 151,
            "failedResources": 30,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "score": 6.019172,
          "complianceScore": 74.00113
        },
        {
          "controls": {
            "C-0002": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0002",
              "name": "Prevent containers from allowing command execution",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 90,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 2
              },
              "score": 1.0989012,
              "complianceScore": 98.9011,
              "scoreFactor": 5,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0005": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0005",
              "name": "API server insecure port is enabled",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 1,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 9,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0012": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0012",
              "name": "Applications credentials in configuration files",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 79,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 8,
              "category": {
                "name": "Secrets",
                "id": "Cat-3"
              }
            },
            "C-0013": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0013",
              "name": "Non-root containers",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 25,
                "failedResources": 17,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 7
              },
              "score": 38.288284,
              "complianceScore": 59.523808,
              "scoreFactor": 6,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0016": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0016",
              "name": "Allow privilege escalation",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 32,
                "failedResources": 10,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 6
              },
              "score": 22.52252,
              "complianceScore": 76.190475,
              "scoreFactor": 6,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0017": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0017",
              "name": "Immutable container filesystem",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 31,
                "failedResources": 11,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 6
              },
              "score": 24.774773,
              "complianceScore": 73.809525,
              "scoreFactor": 3,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0030": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0030",
              "name": "Ingress and Egress blocked",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 47,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 7
              },
              "score": 1.9841268,
              "complianceScore": 97.91667,
              "scoreFactor": 6,
              "category": {
                "name": "Network",
                "id": "Cat-4"
              }
            },
            "C-0034": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0034",
              "name": "Automatic mapping of service account",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 73,
                "failedResources": 30,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 43
              },
              "score": 28.463,
              "complianceScore": 70.87379,
              "scoreFactor": 6,
              "category": {
                "name": "Secrets",
                "id": "Cat-3"
              }
            },
            "C-0035": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0035",
              "name": "Administrative Roles",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 90,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 2
              },
              "score": 1.0989012,
              "complianceScore": 98.9011,
              "scoreFactor": 6,
              "category": {
                "name": "Access control",
                "id": "Cat-2"
              }
            },
            "C-0038": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0038",
              "name": "Host PID/IPC privileges",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 40,
                "failedResources": 2,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 4.504504,
              "complianceScore": 95.2381,
              "scoreFactor": 7,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0041": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0041",
              "name": "HostNetwork access",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 41,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 5
              },
              "score": 2.252252,
              "complianceScore": 97.61904,
              "scoreFactor": 7,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Network",
                  "id": "Cat-4"
                }
              }
            },
            "C-0044": {
              "statusInfo": {
                "status": "passed"
              },
              "controlID": "C-0044",
              "name": "Container hostPort",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 42,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 4,
              "category": {
                "name": "Network",
                "id": "Cat-4"
              }
            },
            "C-0046": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0046",
              "name": "Insecure capabilities",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 41,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 2.252252,
              "complianceScore": 97.61904,
              "scoreFactor": 7,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0054": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "w/exceptions"
              },
              "controlID": "C-0054",
              "name": "Cluster internal networking",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 4,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 3
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 4,
              "category": {
                "name": "Network",
                "id": "Cat-4"
              }
            },
            "C-0055": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0055",
              "name": "Linux hardening",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 23,
                "failedResources": 19,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 2
              },
              "score": 42.79279,
              "complianceScore": 54.761906,
              "scoreFactor": 4,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0057": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0057",
              "name": "Privileged container",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 41,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 1
              },
              "score": 2.252252,
              "complianceScore": 97.61904,
              "scoreFactor": 8,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Node escape",
                  "id": "Cat-9"
                }
              }
            },
            "C-0058": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "irrelevant"
              },
              "controlID": "C-0058",
              "name": "CVE-2021-25741 - Using symlink for arbitrary host file system access.",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 6,
              "category": {
                "name": "Workload",
                "id": "Cat-5"
              }
            },
            "C-0059": {
              "statusInfo": {
                "status": "passed",
                "subStatus": "irrelevant"
              },
              "controlID": "C-0059",
              "name": "CVE-2021-25742-nginx-ingress-snippet-annotation-vulnerability",
              "status": "passed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 100,
              "scoreFactor": 8,
              "category": {
                "name": "Workload",
                "id": "Cat-5"
              }
            },
            "C-0066": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0066",
              "name": "Secret/etcd encryption enabled",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 100,
              "complianceScore": 0,
              "scoreFactor": 6,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0067": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0067",
              "name": "Audit logs enabled",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 100,
              "complianceScore": 0,
              "scoreFactor": 5,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0068": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0068",
              "name": "PSP enabled",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 1,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 100,
              "complianceScore": 0,
              "scoreFactor": 1,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0069": {
              "statusInfo": {
                "status": "skipped",
                "info": "This control is scanned exclusively by the Kubescape operator, not the Kubescape CLI. Install the Kubescape operator:\n     https://kubescape.io/docs/install-operator/."
              },
              "controlID": "C-0069",
              "name": "Disable anonymous access to Kubelet service",
              "status": "skipped",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 0,
              "scoreFactor": 10,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0070": {
              "statusInfo": {
                "status": "skipped",
                "info": "This control is scanned exclusively by the Kubescape operator, not the Kubescape CLI. Install the Kubescape operator:\n     https://kubescape.io/docs/install-operator/."
              },
              "controlID": "C-0070",
              "name": "Enforce Kubelet client TLS authentication",
              "status": "skipped",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 0,
                "failedResources": 0,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 0
              },
              "score": 0,
              "complianceScore": 0,
              "scoreFactor": 9,
              "category": {
                "name": "Control plane",
                "id": "Cat-1"
              }
            },
            "C-0270": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0270",
              "name": "Ensure CPU limits are set",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 20,
                "failedResources": 22,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 7
              },
              "score": 52.25225,
              "complianceScore": 47.61905,
              "scoreFactor": 8,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Resource management",
                  "id": "Cat-7"
                }
              }
            },
            "C-0271": {
              "statusInfo": {
                "status": "failed"
              },
              "controlID": "C-0271",
              "name": "Ensure memory limits are set",
              "status": "failed",
              "resourceIDs": {},
              "ResourceCounters": {
                "passedResources": 20,
                "failedResources": 22,
                "skippedResources": 0,
                "excludedResources": 0
              },
              "subStatusCounters": {
                "ignoredResources": 6
              },
              "score": 52.25225,
              "complianceScore": 47.61905,
              "scoreFactor": 8,
              "category": {
                "name": "Workload",
                "id": "Cat-5",
                "subCategory": {
                  "name": "Resource management",
                  "id": "Cat-7"
                }
              }
            }
          },
          "name": "NSA",
          "status": "failed",
          "version": "",
          "ResourceCounters": {
            "passedResources": 191,
            "failedResources": 50,
            "skippedResources": 0,
            "excludedResources": 0
          },
          "score": 15.721576,
          "complianceScore": 68.56847
        }
      ],
      "resourcesSeverityCounters": {
        "criticalSeverity": 0,
        "highSeverity": 67,
        "mediumSeverity": 118,
        "lowSeverity": 14
      },
      "controlsSeverityCounters": {
        "criticalSeverity": 0,
        "highSeverity": 11,
        "mediumSeverity": 16,
        "lowSeverity": 3
      },
      "ResourceCounters": {
        "passedResources": 302,
        "failedResources": 74,
        "skippedResources": 0,
        "excludedResources": 0
      },
      "vulnerabilities": {
        "mapsSeverityToSummary": {},
        "CVEs": [],
        "packageScores": {},
        "images": null
      },
      "score": 9.521729,
      "complianceScore": 79.4636
    },
    "resources": [
      {
        "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
        "object": {
          "kind": "ServiceAccount",
          "name": "pod-garbage-collector",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pod-garbage-collector",
                "resourceVersion": "203",
                "uid": "70b42fb5-8769-4f55-9ca8-adefc63b3f15"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:pod-garbage-collector"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "pod-garbage-collector",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pod-garbage-collector",
                "resourceVersion": "158",
                "uid": "d0c1fef0-fe3f-4c42-8cfb-1330848c4861"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "delete",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "get",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods/status"
                  ],
                  "verbs": [
                    "patch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/vpnkit-controller/rbac.authorization.k8s.io/v1//ClusterRole/vpnkit-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/vpnkit-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "vpnkit-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {},
                "creationTimestamp": "2024-09-25T04:19:59Z",
                "name": "vpnkit-controller",
                "resourceVersion": "403",
                "uid": "33bfb3ef-f3a2-420a-8b02-1c4255d75418"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "vpnkit-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "vpnkit-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {},
                "creationTimestamp": "2024-09-25T04:19:59Z",
                "name": "vpnkit-controller",
                "resourceVersion": "400",
                "uid": "5100c768-ddab-4bf8-ad9a-cc5a3e623678"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "services",
                    "services/status"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "services/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/kube-root-ca.crt",
        "object": {
          "apiVersion": "v1",
          "data": {
            "ca.crt": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
            },
            "creationTimestamp": "2024-09-25T04:19:56Z",
            "name": "kube-root-ca.crt",
            "namespace": "default",
            "resourceVersion": "315",
            "uid": "fc590096-08fd-4aaf-8763-dea8ef113fa0"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/StatefulSet/loki-distributed-index-gateway",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "StatefulSet",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:58Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "index-gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-index-gateway",
            "namespace": "default",
            "resourceVersion": "1848267",
            "uid": "c904d4ac-4701-4d6c-9cc6-4ba63aa73745"
          },
          "spec": {
            "persistentVolumeClaimRetentionPolicy": {
              "whenDeleted": "Retain",
              "whenScaled": "Retain"
            },
            "podManagementPolicy": "OrderedReady",
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "index-gateway",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              }
            },
            "serviceName": "loki-distributed-index-gateway-headless",
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "3d2b043c06f24b69bffc86a7dc505b6da51eaf8dd861673ca393d411e8c73eab"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "index-gateway",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "loki-distributed",
                  "app.kubernetes.io/part-of": "memberlist"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "index-gateway",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "loki-distributed"
                            }
                          },
                          "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "index-gateway",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "loki-distributed"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "index-gateway",
                    "image": "docker.io/grafana/loki:2.9.10",
                    "args": [
                      "-config.file=/etc/loki/config/config.yaml",
                      "-target=index-gateway"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      },
                      {
                        "name": "grpc",
                        "containerPort": 9095,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-memberlist",
                        "containerPort": 7946,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/loki/config"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/var/loki-distributed-runtime"
                      },
                      {
                        "name": "data",
                        "mountPath": "/var/loki"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 300,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 10001,
                  "runAsGroup": 10001,
                  "runAsNonRoot": true,
                  "runAsUser": 10001
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 300,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed-runtime"
                    },
                    "name": "runtime-config"
                  },
                  {
                    "emptyDir": {
                      "medium": "Memory",
                      "sizeLimit": "10Gi"
                    },
                    "name": "data"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "partition": 0
              },
              "type": "RollingUpdate"
            }
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-index-gateway",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "index-gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-index-gateway",
            "namespace": "default",
            "resourceVersion": "1847284",
            "uid": "c0c3d3ee-9203-4e88-a3c4-6bc90183bd7e"
          },
          "spec": {
            "clusterIP": "10.101.103.206",
            "clusterIPs": [
              "10.101.103.206"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http"
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": "grpc"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "index-gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/kollector",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": false,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app": "kollector",
              "app.kubernetes.io/component": "kollector",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "kollector",
            "namespace": "default",
            "resourceVersion": "1847130",
            "uid": "1b54bfc2-6c27-4ca4-83d6-1c9522b12390"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/job-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:55Z",
            "name": "job-controller",
            "namespace": "kube-system",
            "resourceVersion": "307",
            "uid": "e640ff89-073b-408b-9e09-935e805e8f20"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/prometheus-server",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/part-of": "prometheus",
              "app.kubernetes.io/version": "v2.54.1",
              "helm.sh/chart": "prometheus-25.27.0"
            },
            "name": "prometheus-server",
            "namespace": "default",
            "resourceVersion": "1847142",
            "uid": "c44a0272-3934-44f6-a06b-814df63e5d6b"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/prometheus-exporter",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:54Z",
            "generation": 1,
            "labels": {
              "app": "prometheus-exporter",
              "app.kubernetes.io/component": "prometheus-exporter",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "prometheus-exporter",
            "namespace": "default",
            "resourceVersion": "1847932",
            "uid": "0c8ecbf3-4164-47cb-a82a-a87f8f04e6ba"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 2,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "prometheus-exporter",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kubescape-operator"
              }
            },
            "strategy": {
              "type": "Recreate"
            },
            "template": {
              "metadata": {
                "creationTimestamp": null,
                "labels": {
                  "app": "prometheus-exporter",
                  "app.kubernetes.io/component": "prometheus-exporter",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                }
              },
              "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "prometheus-exporter",
                    "image": "quay.io/kubescape/prometheus-exporter:v0.0.131",
                    "ports": [
                      {
                        "name": "metrics",
                        "containerPort": 8080,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "GOMEMLIMIT",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.memory",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOMAXPROCS",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.cpu",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "KS_LOGGER_LEVEL",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_LOGGER_NAME",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "50m",
                        "memory": "100Mi"
                      },
                      "requests": {
                        "cpu": "10m",
                        "memory": "10Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config"
                      }
                    ],
                    "livenessProbe": {
                      "tcpSocket": {
                        "port": 8080
                      },
                      "initialDelaySeconds": 3,
                      "timeoutSeconds": 1,
                      "periodSeconds": 3,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "tcpSocket": {
                        "port": 8080
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65532,
                  "runAsUser": 65532
                },
                "serviceAccount": "prometheus-exporter",
                "serviceAccountName": "prometheus-exporter",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "clusterData",
                          "path": "clusterData.json"
                        }
                      ],
                      "name": "ks-cloud-config"
                    },
                    "name": "ks-cloud-config"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:namespace-controller",
            "resourceVersion": "200",
            "uid": "59228777-76d4-4a84-a193-38606bffd66c"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:namespace-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "namespace-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:ttl-after-finished-controller",
            "resourceVersion": "215",
            "uid": "b10a7f9e-c52f-40a6-8f60-29ac0e65dd51"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:ttl-after-finished-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "ttl-after-finished-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "kubescape",
              "app.kubernetes.io/component": "kubescape",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "kubescape",
            "resourceVersion": "1847190",
            "uid": "ccd08f3f-31bc-49d0-9b5c-2d8180c1fc90"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "kubescape"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "kubescape",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "/v1//Namespace/kube-node-lease",
        "object": {
          "apiVersion": "v1",
          "kind": "Namespace",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:48Z",
            "labels": {
              "kubernetes.io/metadata.name": "kube-node-lease"
            },
            "name": "kube-node-lease",
            "resourceVersion": "31",
            "uid": "93162b68-2426-42c9-9086-f8da14cf47a7"
          },
          "spec": {
            "finalizers": [
              "kubernetes"
            ]
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "kollector",
              "app.kubernetes.io/component": "kollector",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "kollector",
            "resourceVersion": "1847189",
            "uid": "5231480c-3317-4239-aaa0-ea7df9a839ac"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "kollector"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "kollector",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "kubeadm:cluster-admins",
            "resourceVersion": "238",
            "uid": "d60505d4-3552-49de-b322-62918194cb6a"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "cluster-admin"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "kubeadm:cluster-admins"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/operator",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app": "operator",
              "app.kubernetes.io/component": "operator",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "operator",
            "namespace": "default",
            "resourceVersion": "1847249",
            "uid": "82dd37c6-6ba6-438f-a2a0-1cfa112b67f5"
          },
          "spec": {
            "clusterIP": "10.110.164.48",
            "clusterIPs": [
              "10.110.164.48"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "port": 4002,
                "protocol": "TCP",
                "targetPort": 4002
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "operator",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "kubescape-operator"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/kube-proxy/rbac.authorization.k8s.io/v1//ClusterRole/system:node-proxier/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-proxier",
        "object": {
          "kind": "ServiceAccount",
          "name": "kube-proxy",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:52Z",
                "name": "kubeadm:node-proxier",
                "resourceVersion": "278",
                "uid": "68e9da4c-3656-4282-ae35-84e8752483fe"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node-proxier"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "kube-proxy",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:node-proxier",
                "resourceVersion": "139",
                "uid": "a19b3797-5e66-4841-b09f-0c22da423e21"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints",
                    "services"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "discovery.k8s.io"
                  ],
                  "resources": [
                    "endpointslices"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1//ClusterRole/system:node-bootstrapper/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:kubelet-bootstrap",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:bootstrappers:kubeadm:default-node-token",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:kubelet-bootstrap",
                "resourceVersion": "250",
                "uid": "9bfa04fd-c6c6-4fa0-b55b-881f255345b5"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node-bootstrapper"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:bootstrappers:kubeadm:default-node-token"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:node-bootstrapper",
                "resourceVersion": "124",
                "uid": "289d901e-4628-4583-8f8d-32a10dc8dd33"
              },
              "rules": [
                {
                  "apiGroups": [
                    "certificates.k8s.io"
                  ],
                  "resources": [
                    "certificatesigningrequests"
                  ],
                  "verbs": [
                    "create",
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:token-cleaner",
            "namespace": "kube-system",
            "resourceVersion": "231",
            "uid": "e8eb7e61-f55b-4895-86a5-b7d1d414840e"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "system:controller:token-cleaner"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "token-cleaner",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:nodes-kubeadm-config",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "kubeadm:nodes-kubeadm-config",
            "namespace": "kube-system",
            "resourceVersion": "241",
            "uid": "f22116f9-52d8-4d6b-a601-64286fd7f823"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "kubeadm:nodes-kubeadm-config"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:bootstrappers:kubeadm:default-node-token"
            },
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:nodes"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system::extension-apiserver-authentication-reader",
            "namespace": "kube-system",
            "resourceVersion": "226",
            "uid": "5837a414-9d9e-4114-9d81-d1b943a0e12d"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "extension-apiserver-authentication-reader"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "User",
              "name": "system:kube-controller-manager"
            },
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "User",
              "name": "system:kube-scheduler"
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
        "object": {
          "kind": "ServiceAccount",
          "name": "token-cleaner",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:token-cleaner",
                "namespace": "kube-system",
                "resourceVersion": "231",
                "uid": "e8eb7e61-f55b-4895-86a5-b7d1d414840e"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system:controller:token-cleaner"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "token-cleaner",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:token-cleaner",
                "namespace": "kube-system",
                "resourceVersion": "223",
                "uid": "5c1fd310-257f-47f6-9349-0416e2b93cb8"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "secrets"
                  ],
                  "verbs": [
                    "delete",
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1//ClusterRole/kubeadm:get-nodes/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:get-nodes",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:bootstrappers:kubeadm:default-node-token",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:get-nodes",
                "resourceVersion": "249",
                "uid": "4d1e776b-eb33-49f8-b2d9-f7196e9b96f6"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "kubeadm:get-nodes"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:bootstrappers:kubeadm:default-node-token"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:get-nodes",
                "resourceVersion": "248",
                "uid": "8a80fc51-f7a4-4f17-a341-97e319f7232d"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:nodes/rbac.authorization.k8s.io/v1/kube-system/Role/kubeadm:nodes-kubeadm-config/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:nodes-kubeadm-config",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:nodes",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:nodes-kubeadm-config",
                "namespace": "kube-system",
                "resourceVersion": "241",
                "uid": "f22116f9-52d8-4d6b-a601-64286fd7f823"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kubeadm:nodes-kubeadm-config"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:bootstrappers:kubeadm:default-node-token"
                },
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:nodes"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:nodes-kubeadm-config",
                "namespace": "kube-system",
                "resourceVersion": "240",
                "uid": "0a7bfd15-6e49-4883-93e7-987b04c33bd6"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "kubeadm-config"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "statefulset-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:statefulset-controller",
                "resourceVersion": "210",
                "uid": "8969d46a-531f-4072-bfe8-6f28527d9756"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:statefulset-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "statefulset-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:statefulset-controller",
                "resourceVersion": "165",
                "uid": "d8468e0c-e897-4932-9e72-83e76c1c103d"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "statefulsets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "statefulsets/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "statefulsets/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "controllerrevisions"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims"
                  ],
                  "verbs": [
                    "create",
                    "get"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims"
                  ],
                  "verbs": [
                    "delete",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/node-agent",
        "object": {
          "apiVersion": "v1",
          "data": {
            "config.json": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "node-agent",
              "app.kubernetes.io/component": "node-agent",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "node-agent",
            "namespace": "default",
            "resourceVersion": "1847157",
            "uid": "382d564f-993b-4278-bad5-b73b10c73bf8"
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/alertmanager",
        "object": {
          "apiVersion": "v1",
          "data": {
            "alertmanager.yml": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alertmanager",
              "app.kubernetes.io/version": "v0.27.0",
              "helm.sh/chart": "alertmanager-1.13.1"
            },
            "name": "alertmanager",
            "namespace": "default",
            "resourceVersion": "1847146",
            "uid": "dbbba852-a8b9-45d3-a947-1e8a12296b54"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/replication-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:53Z",
            "name": "replication-controller",
            "namespace": "kube-system",
            "resourceVersion": "291",
            "uid": "de5e55db-2b6e-449b-967f-4a3102199e45"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "deployment-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:deployment-controller",
                "resourceVersion": "190",
                "uid": "7ce7fdf7-63be-4763-ba52-81cfe985e3ee"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:deployment-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "deployment-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:deployment-controller",
                "resourceVersion": "145",
                "uid": "2c19fc2b-55f9-40c8-a3d9-b7cde01d40c0"
              },
              "rules": [
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "deployments"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "deployments/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "deployments/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "replicasets"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/endpoint-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "endpoint-controller",
            "namespace": "kube-system",
            "resourceVersion": "264",
            "uid": "f773e303-177e-41b5-906e-b6ea4d091f4a"
          }
        }
      },
      {
        "resourceID": "/v1/kube-public/ServiceAccount/default",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:56Z",
            "name": "default",
            "namespace": "kube-public",
            "resourceVersion": "327",
            "uid": "cbc2716d-7010-4477-bcb0-86c3540de10f"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/kubelet-config",
        "object": {
          "apiVersion": "v1",
          "data": {
            "kubelet": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "kubeadm.kubernetes.io/component-config.hash": "sha256:8efaecc85bd6590935190e0184b0cb5a8b15a043edac7476a5f2c9d7c2290d3b"
            },
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "kubelet-config",
            "namespace": "kube-system",
            "resourceVersion": "242",
            "uid": "df90a58d-1bc7-4df8-af25-890189bf00d5"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/loki-distributed-gateway",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:55Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-gateway",
            "namespace": "default",
            "resourceVersion": "1848154",
            "uid": "b9699832-bc27-42b7-90f7-e49485b53b40"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "gateway",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": "25%",
                "maxUnavailable": "25%"
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "8ef7205a66d50af225564b23b6f901862ff41d23e636946624fb579e82cebfd0"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "gateway",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "loki-distributed"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "gateway",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "loki-distributed"
                            }
                          },
                          "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "gateway",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "loki-distributed"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "nginx",
                    "image": "docker.io/nginxinc/nginx-unprivileged:1.20.2-alpine",
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 8080,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/nginx"
                      },
                      {
                        "name": "tmp",
                        "mountPath": "/tmp"
                      },
                      {
                        "name": "docker-entrypoint-d-override",
                        "mountPath": "/docker-entrypoint.d"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 15,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": true
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 101,
                  "runAsGroup": 101,
                  "runAsNonRoot": true,
                  "runAsUser": 101
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed-gateway"
                    },
                    "name": "config"
                  },
                  {
                    "emptyDir": {},
                    "name": "tmp"
                  },
                  {
                    "emptyDir": {},
                    "name": "docker-entrypoint-d-override"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:bootstrap-signer",
            "namespace": "kube-system",
            "resourceVersion": "229",
            "uid": "968514ee-35e3-4bc4-ae9d-4f206121ac2c"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "system:controller:bootstrap-signer"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "bootstrap-signer",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/prometheus-server",
        "object": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "NetworkPolicy",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/part-of": "prometheus",
              "app.kubernetes.io/version": "v2.54.1",
              "helm.sh/chart": "prometheus-25.27.0"
            },
            "name": "prometheus-server",
            "namespace": "default",
            "resourceVersion": "1847120",
            "uid": "e165bdd1-e1e7-41c7-aacf-1705254a72df"
          },
          "spec": {
            "ingress": [
              {
                "ports": [
                  {
                    "port": 9090,
                    "protocol": "TCP"
                  }
                ]
              }
            ],
            "podSelector": {
              "matchLabels": {
                "app.kubernetes.io/component": "server",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "prometheus"
              }
            },
            "policyTypes": [
              "Ingress"
            ]
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-ingester",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "ingester",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-ingester",
            "namespace": "default",
            "resourceVersion": "1847291",
            "uid": "26e31562-c7bf-4cc2-99c3-37faa4d091de"
          },
          "spec": {
            "clusterIP": "10.100.16.143",
            "clusterIPs": [
              "10.100.16.143"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http"
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": "grpc"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "ingester",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/default/ServiceAccount/storage/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/storage-auth-reader",
        "object": {
          "kind": "ServiceAccount",
          "name": "storage",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "storage",
                  "app.kubernetes.io/component": "storage",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "storage-auth-reader",
                "namespace": "kube-system",
                "resourceVersion": "1847208",
                "uid": "71a6f4f5-a1ea-45ef-943f-1fe725d529b2"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "extension-apiserver-authentication-reader"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "storage",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "extension-apiserver-authentication-reader",
                "namespace": "kube-system",
                "resourceVersion": "220",
                "uid": "b0f2ed4f-ed43-4072-9d13-13ff6f54f42a"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "extension-apiserver-authentication"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "DaemonSet",
          "metadata": {
            "annotations": {
              "deprecated.daemonset.template.generation": "1"
            },
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "generation": 1,
            "labels": {
              "k8s-app": "kube-proxy"
            },
            "name": "kube-proxy",
            "namespace": "kube-system",
            "resourceVersion": "1827181",
            "uid": "206579c1-cdc0-46c0-ba25-74a225b2ad63"
          },
          "spec": {
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "k8s-app": "kube-proxy"
              }
            },
            "template": {
              "metadata": {
                "creationTimestamp": null,
                "labels": {
                  "k8s-app": "kube-proxy"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kube-proxy",
                    "image": "registry.k8s.io/kube-proxy:v1.30.2",
                    "command": [
                      "/usr/local/bin/kube-proxy",
                      "--config=/var/lib/kube-proxy/config.conf",
                      "--hostname-override=$(NODE_NAME)"
                    ],
                    "env": [
                      {
                        "name": "NODE_NAME",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "fieldRef": {
                            "apiVersion": "v1",
                            "fieldPath": "spec.nodeName"
                          }
                        }
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "kube-proxy",
                        "mountPath": "/var/lib/kube-proxy"
                      },
                      {
                        "name": "xtables-lock",
                        "mountPath": "/run/xtables.lock"
                      },
                      {
                        "name": "lib-modules",
                        "readOnly": true,
                        "mountPath": "/lib/modules"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": true
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "hostNetwork": true,
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kube-proxy",
                "serviceAccountName": "kube-proxy",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                  {
                    "operator": "Exists"
                  }
                ],
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "kube-proxy"
                    },
                    "name": "kube-proxy"
                  },
                  {
                    "hostPath": {
                      "path": "/run/xtables.lock",
                      "type": "FileOrCreate"
                    },
                    "name": "xtables-lock"
                  },
                  {
                    "hostPath": {
                      "path": "/lib/modules",
                      "type": ""
                    },
                    "name": "lib-modules"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/storage-auth-reader",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "storage",
              "app.kubernetes.io/component": "storage",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "storage-auth-reader",
            "namespace": "kube-system",
            "resourceVersion": "1847208",
            "uid": "71a6f4f5-a1ea-45ef-943f-1fe725d529b2"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "extension-apiserver-authentication-reader"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "storage",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-query-frontend-headless",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "query-frontend",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4",
              "prometheus.io/service-monitor": "false"
            },
            "name": "loki-distributed-query-frontend-headless",
            "namespace": "default",
            "resourceVersion": "1847298",
            "uid": "b34a47fb-693e-467a-be3c-4cb47d06ef22"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http"
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": "grpc"
              },
              {
                "name": "grpclb",
                "port": 9096,
                "protocol": "TCP",
                "targetPort": "grpc"
              }
            ],
            "publishNotReadyAddresses": true,
            "selector": {
              "app.kubernetes.io/component": "query-frontend",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/daemon-set-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:53Z",
            "name": "daemon-set-controller",
            "namespace": "kube-system",
            "resourceVersion": "293",
            "uid": "48f0924d-0700-47f8-be7c-793ef089e340"
          }
        }
      },
      {
        "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
        "object": {
          "kind": "ServiceAccount",
          "name": "node-agent",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "node-agent",
                  "app.kubernetes.io/component": "node-agent",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "node-agent",
                "resourceVersion": "1847192",
                "uid": "371badf5-9b9a-462e-acc9-2383f3ff613c"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "node-agent"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "node-agent",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "node-agent",
                  "app.kubernetes.io/component": "node-agent",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "node-agent",
                "resourceVersion": "1847179",
                "uid": "d20ec52b-00c2-4733-aba7-cd8d9d4410ea"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes",
                    "nodes/proxy",
                    "services",
                    "endpoints",
                    "namespaces"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list",
                    "delete"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs",
                    "cronjobs"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "deployments",
                    "daemonsets",
                    "statefulsets",
                    "replicasets"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "spdx.softwarecomposition.kubescape.io"
                  ],
                  "resources": [
                    "sbomsyfts",
                    "seccompprofiles"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "spdx.softwarecomposition.kubescape.io"
                  ],
                  "resources": [
                    "applicationactivities",
                    "applicationprofiles",
                    "networkneighborses",
                    "networkneighborhoods",
                    "sbomsyftfiltereds"
                  ],
                  "verbs": [
                    "create",
                    "get",
                    "update",
                    "watch",
                    "list",
                    "patch"
                  ]
                },
                {
                  "apiGroups": [
                    "kubescape.io"
                  ],
                  "resources": [
                    "runtimerulealertbindings"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "kubescape.io"
                  ],
                  "resources": [
                    "operatorcommands"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "kubescape.io"
                  ],
                  "resources": [
                    "operatorcommands/status"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list",
                    "update",
                    "patch"
                  ]
                },
                {
                  "apiGroups": [
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:masters",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "cluster-admin",
                "resourceVersion": "174",
                "uid": "0b519371-b385-4b61-b91f-8f69e1f3b00c"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "cluster-admin"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:masters"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "cluster-admin",
                "resourceVersion": "109",
                "uid": "f9250132-7693-4fc1-8142-6a333a91d25d"
              },
              "rules": [
                {
                  "apiGroups": [
                    "*"
                  ],
                  "resources": [
                    "*"
                  ],
                  "verbs": [
                    "*"
                  ]
                },
                {
                  "nonResourceURLs": [
                    "*"
                  ],
                  "verbs": [
                    "*"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/kube-proxy",
        "object": {
          "apiVersion": "v1",
          "data": {
            "config.conf": "XXXXXX",
            "kubeconfig.conf": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "labels": {
              "app": "kube-proxy"
            },
            "name": "kube-proxy",
            "namespace": "kube-system",
            "resourceVersion": "274",
            "uid": "648e74ad-34a8-4d43-9c27-05aef45ac4db"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:basic-user",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:basic-user",
            "resourceVersion": "177",
            "uid": "82caec66-4105-4770-8dbd-1b6bc793baaa"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:basic-user"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:authenticated"
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/grafana/rbac.authorization.k8s.io/v1/default/Role/grafana/rbac.authorization.k8s.io/v1/default/RoleBinding/grafana",
        "object": {
          "kind": "ServiceAccount",
          "name": "grafana",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "grafana",
                  "app.kubernetes.io/version": "11.2.1",
                  "helm.sh/chart": "grafana-8.5.2"
                },
                "name": "grafana",
                "namespace": "default",
                "resourceVersion": "1847205",
                "uid": "420f449d-f2c5-4496-a083-8e2e529043e4"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "grafana"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "grafana",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "grafana",
                  "app.kubernetes.io/version": "11.2.1",
                  "helm.sh/chart": "grafana-8.5.2"
                },
                "name": "grafana",
                "namespace": "default",
                "resourceVersion": "1847201",
                "uid": "30fc2cf1-a456-4d86-a8c5-11d85898c564"
              },
              "rules": null
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:anonymous/rbac.authorization.k8s.io/v1/kube-public/Role/kubeadm:bootstrap-signer-clusterinfo/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/kubeadm:bootstrap-signer-clusterinfo",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "User",
          "name": "system:anonymous",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:bootstrap-signer-clusterinfo",
                "namespace": "kube-public",
                "resourceVersion": "257",
                "uid": "84232e9c-83c0-4827-aa43-f237b71b897c"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kubeadm:bootstrap-signer-clusterinfo"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:anonymous"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:bootstrap-signer-clusterinfo",
                "namespace": "kube-public",
                "resourceVersion": "254",
                "uid": "7384e3e5-2001-4946-af9e-cb7ce125af16"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "cluster-info"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/pvc-protection-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pvc-protection-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pvc-protection-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "pvc-protection-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pvc-protection-controller",
                "resourceVersion": "213",
                "uid": "96ac58c2-6d2a-4cb7-a62b-e52737969595"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:pvc-protection-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "pvc-protection-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pvc-protection-controller",
                "resourceVersion": "168",
                "uid": "08c3132a-350e-43b6-bef7-d2704b9b29c2"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/horizontal-pod-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:horizontal-pod-autoscaler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:horizontal-pod-autoscaler",
        "object": {
          "kind": "ServiceAccount",
          "name": "horizontal-pod-autoscaler",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:horizontal-pod-autoscaler",
                "resourceVersion": "198",
                "uid": "65b906fd-9bd4-4bf8-81c3-d4c11c326006"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:horizontal-pod-autoscaler"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "horizontal-pod-autoscaler",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:horizontal-pod-autoscaler",
                "resourceVersion": "153",
                "uid": "80786495-e733-40c6-8dd1-88e5cd212680"
              },
              "rules": [
                {
                  "apiGroups": [
                    "autoscaling"
                  ],
                  "resources": [
                    "horizontalpodautoscalers"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "autoscaling"
                  ],
                  "resources": [
                    "horizontalpodautoscalers/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "*"
                  ],
                  "resources": [
                    "*/scale"
                  ],
                  "verbs": [
                    "get",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "metrics.k8s.io"
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "custom.metrics.k8s.io"
                  ],
                  "resources": [
                    "*"
                  ],
                  "verbs": [
                    "get",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "external.metrics.k8s.io"
                  ],
                  "resources": [
                    "*"
                  ],
                  "verbs": [
                    "get",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/default/RoleBinding/grafana",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "grafana",
              "app.kubernetes.io/version": "11.2.1",
              "helm.sh/chart": "grafana-8.5.2"
            },
            "name": "grafana",
            "namespace": "default",
            "resourceVersion": "1847205",
            "uid": "420f449d-f2c5-4496-a083-8e2e529043e4"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "grafana"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "grafana",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "kubeadm:cluster-admins",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:cluster-admins",
                "resourceVersion": "238",
                "uid": "d60505d4-3552-49de-b322-62918194cb6a"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "cluster-admin"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "kubeadm:cluster-admins"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "cluster-admin",
                "resourceVersion": "109",
                "uid": "f9250132-7693-4fc1-8142-6a333a91d25d"
              },
              "rules": [
                {
                  "apiGroups": [
                    "*"
                  ],
                  "resources": [
                    "*"
                  ],
                  "verbs": [
                    "*"
                  ]
                },
                {
                  "nonResourceURLs": [
                    "*"
                  ],
                  "verbs": [
                    "*"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1/kube-system/Role/kubeadm:kubelet-config/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:kubelet-config",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:bootstrappers:kubeadm:default-node-token",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:kubelet-config",
                "namespace": "kube-system",
                "resourceVersion": "244",
                "uid": "e6413dbf-18cb-4645-a061-cb3e989cdb47"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kubeadm:kubelet-config"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:nodes"
                },
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:bootstrappers:kubeadm:default-node-token"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:kubelet-config",
                "namespace": "kube-system",
                "resourceVersion": "243",
                "uid": "9cb7a180-31f3-4817-8725-60ef09173f33"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "kubelet-config"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/pv-protection-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pv-protection-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pv-protection-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "pv-protection-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pv-protection-controller",
                "resourceVersion": "214",
                "uid": "4ccbb3df-40c9-4eb1-9ca2-097f64ec64a5"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:pv-protection-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "pv-protection-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pv-protection-controller",
                "resourceVersion": "169",
                "uid": "55179862-8d88-4b30-acef-523ba3bfce27"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/prometheus-msteams-config",
        "object": {
          "apiVersion": "v1",
          "data": {
            "connectors.yaml": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/managed-by": "Helm"
            },
            "name": "prometheus-msteams-config",
            "namespace": "default",
            "resourceVersion": "1847168",
            "uid": "59385585-0310-48da-9507-32eb99e959eb"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/attachdetach-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "attachdetach-controller",
            "namespace": "kube-system",
            "resourceVersion": "256",
            "uid": "d372d0a1-013e-4f55-8382-cd7d40090b0c"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
        "object": {
          "kind": "ServiceAccount",
          "name": "bootstrap-signer",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-public",
                "resourceVersion": "232",
                "uid": "d137bd34-5d36-465c-8431-90d5dcb903d9"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system:controller:bootstrap-signer"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "bootstrap-signer",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-system",
                "resourceVersion": "221",
                "uid": "a981496f-9d97-4eb9-932a-83483e6e1555"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "secrets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
        "object": {
          "kind": "ServiceAccount",
          "name": "alloy",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/component": "rbac",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "alloy",
                  "app.kubernetes.io/part-of": "alloy",
                  "app.kubernetes.io/version": "v1.4.2",
                  "helm.sh/chart": "alloy-0.9.1"
                },
                "name": "alloy",
                "resourceVersion": "1847186",
                "uid": "90fd14e6-8547-470b-a5e7-3484052331df"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "alloy"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "alloy",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/component": "rbac",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "alloy",
                  "app.kubernetes.io/part-of": "alloy",
                  "app.kubernetes.io/version": "v1.4.2",
                  "helm.sh/chart": "alloy-0.9.1"
                },
                "name": "alloy",
                "resourceVersion": "1847173",
                "uid": "c6405a85-b115-41b5-9934-44ff1abe1e3c"
              },
              "rules": [
                {
                  "apiGroups": [
                    "",
                    "discovery.k8s.io",
                    "networking.k8s.io"
                  ],
                  "resources": [
                    "endpoints",
                    "endpointslices",
                    "ingresses",
                    "nodes",
                    "nodes/proxy",
                    "nodes/metrics",
                    "pods",
                    "services"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods",
                    "pods/log",
                    "namespaces"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "monitoring.grafana.com"
                  ],
                  "resources": [
                    "podlogs"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "monitoring.coreos.com"
                  ],
                  "resources": [
                    "prometheusrules"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "nonResourceURLs": [
                    "/metrics"
                  ],
                  "verbs": [
                    "get"
                  ]
                },
                {
                  "apiGroups": [
                    "monitoring.coreos.com"
                  ],
                  "resources": [
                    "podmonitors",
                    "servicemonitors",
                    "probes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps",
                    "secrets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "replicasets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "extensions"
                  ],
                  "resources": [
                    "replicasets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/component": "metrics",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kube-state-metrics",
              "app.kubernetes.io/part-of": "kube-state-metrics",
              "app.kubernetes.io/version": "2.13.0",
              "helm.sh/chart": "kube-state-metrics-5.25.1"
            },
            "name": "prometheus-kube-state-metrics",
            "resourceVersion": "1847198",
            "uid": "9e2c5a19-59f6-42f4-93e8-9ee60ddf9840"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "prometheus-kube-state-metrics"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "prometheus-kube-state-metrics",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "/v1//Namespace/default",
        "object": {
          "apiVersion": "v1",
          "kind": "Namespace",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:48Z",
            "labels": {
              "kubernetes.io/metadata.name": "default"
            },
            "name": "default",
            "resourceVersion": "37",
            "uid": "fa437b83-4bfc-456b-ab3d-498687c0a424"
          },
          "spec": {
            "finalizers": [
              "kubernetes"
            ]
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/tempo-compactor",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:55Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "compactor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/part-of": "memberlist",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-compactor",
            "namespace": "default",
            "resourceVersion": "1848141",
            "uid": "03abe7c4-50ec-4d4e-bb09-2aa289427412"
          },
          "spec": {
            "minReadySeconds": 10,
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "compactor",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "tempo"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "9d41dbb2e1e83f92fb6f56997bd79a1cb538e23a39fe246d44cfd878ca8114c7"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "compactor",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "tempo",
                  "app.kubernetes.io/part-of": "memberlist",
                  "app.kubernetes.io/version": "2.6.0",
                  "helm.sh/chart": "tempo-distributed-1.18.5"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "compactor",
                    "image": "docker.io/grafana/tempo:2.6.0",
                    "args": [
                      "-target=compactor",
                      "-config.file=/conf/tempo.yaml",
                      "-mem-ballast-size-mbs=1024"
                    ],
                    "ports": [
                      {
                        "name": "http-metrics",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-memberlist",
                        "containerPort": 7946,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/conf"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/runtime-config"
                      },
                      {
                        "name": "tempo-compactor-store",
                        "mountPath": "/var/tempo"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "runAsUser": 1000,
                      "runAsGroup": 1000,
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": false,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 1000
                },
                "serviceAccount": "tempo",
                "serviceAccountName": "tempo",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "tempo.yaml",
                          "path": "tempo.yaml"
                        }
                      ],
                      "name": "tempo-config"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "overrides.yaml",
                          "path": "overrides.yaml"
                        }
                      ],
                      "name": "tempo-runtime"
                    },
                    "name": "runtime-config"
                  },
                  {
                    "emptyDir": {},
                    "name": "tempo-compactor-store"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:public-info-viewer",
            "resourceVersion": "178",
            "uid": "d0f17149-e027-4f1f-8b9d-b1f62923d9b0"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:public-info-viewer"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:authenticated"
            },
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:unauthenticated"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubevuln",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "kubevuln",
              "app.kubernetes.io/component": "kubevuln",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "kubevuln",
            "resourceVersion": "1847191",
            "uid": "fbdc7aa8-6d85-41c5-9477-92b99562fb87"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "kubevuln"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "kubevuln",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:get-nodes",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "kubeadm:get-nodes",
            "resourceVersion": "249",
            "uid": "4d1e776b-eb33-49f8-b2d9-f7196e9b96f6"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "kubeadm:get-nodes"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:bootstrappers:kubeadm:default-node-token"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/kubevuln",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app": "kubevuln",
              "app.kubernetes.io/component": "kubevuln",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "kubevuln",
            "namespace": "default",
            "resourceVersion": "1847241",
            "uid": "12eb646b-bf3d-445b-8959-3899afad711c"
          },
          "spec": {
            "clusterIP": "10.109.144.211",
            "clusterIPs": [
              "10.109.144.211"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "port": 8080,
                "protocol": "TCP",
                "targetPort": 8080
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "kubevuln",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "kubescape-operator"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/default",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:56Z",
            "name": "default",
            "namespace": "default",
            "resourceVersion": "325",
            "uid": "98656cd9-0006-4ed0-b2ae-c1fef63a4a0b"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "daemon-set-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:daemon-set-controller",
                "resourceVersion": "189",
                "uid": "b504c70b-4507-43b8-93a3-5a13fb9cddb5"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:daemon-set-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "daemon-set-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:daemon-set-controller",
                "resourceVersion": "144",
                "uid": "d616fa0f-ff95-4c92-acf3-1f55ce074ae7"
              },
              "rules": [
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "daemonsets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "daemonsets/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "daemonsets/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "list",
                    "patch",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods/binding"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "controllerrevisions"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpoint-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:endpoint-controller",
            "resourceVersion": "192",
            "uid": "6aa91415-da63-4553-8f6c-82f47e231960"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:endpoint-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "endpoint-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {},
            "creationTimestamp": "2024-09-25T04:19:59Z",
            "name": "storage-provisioner",
            "resourceVersion": "394",
            "uid": "65705bbc-0c6b-4bce-a0ed-96cb9fe5c622"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "storage-provisioner"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "storage-provisioner",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/storage-provisioner",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {},
            "creationTimestamp": "2024-09-25T04:20:00Z",
            "name": "storage-provisioner",
            "namespace": "kube-system",
            "resourceVersion": "393",
            "uid": "2d736bf1-d322-49e3-b600-15c6f9d2317a"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/cloud-provider/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:cloud-provider/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:cloud-provider",
        "object": {
          "kind": "ServiceAccount",
          "name": "cloud-provider",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:cloud-provider",
                "namespace": "kube-system",
                "resourceVersion": "230",
                "uid": "9571c000-d32e-4ad0-b2f4-cbb8714cd886"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system:controller:cloud-provider"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "cloud-provider",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:cloud-provider",
                "namespace": "kube-system",
                "resourceVersion": "222",
                "uid": "3ba9b1c1-b8a8-44ff-8757-444fcffe9605"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "create",
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:node-proxier",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:node-proxier",
            "resourceVersion": "179",
            "uid": "97a3bc0c-de2c-4f25-a079-0b2c45e2b995"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:node-proxier"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "User",
              "name": "system:kube-proxy"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/synchronizer",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "synchronizer",
              "app.kubernetes.io/component": "synchronizer",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "synchronizer",
            "resourceVersion": "1847197",
            "uid": "77c0846c-76e1-4326-8143-b8f8f257cf9b"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "synchronizer"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "synchronizer",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "operator",
              "app.kubernetes.io/component": "operator",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "operator",
            "resourceVersion": "1847193",
            "uid": "37faa711-c948-4788-9b26-8c2332fd93c0"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "operator"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "operator",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:replication-controller",
            "resourceVersion": "205",
            "uid": "cf4cab4c-72cf-4299-ac75-5004c5c4257b"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:replication-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "replication-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/Deployment/coredns",
        "object": {
          "kind": "Deployment",
          "name": "coredns",
          "namespace": "kube-system",
          "relatedObjects": {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
              "annotations": {
                "prometheus.io/port": "9153",
                "prometheus.io/scrape": "true"
              },
              "creationTimestamp": "2024-09-25T04:19:51Z",
              "labels": {
                "k8s-app": "kube-dns",
                "kubernetes.io/cluster-service": "true",
                "kubernetes.io/name": "CoreDNS"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:prometheus.io/port": {},
                        "f:prometheus.io/scrape": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:k8s-app": {},
                        "f:kubernetes.io/cluster-service": {},
                        "f:kubernetes.io/name": {}
                      }
                    },
                    "f:spec": {
                      "f:clusterIP": {},
                      "f:internalTrafficPolicy": {},
                      "f:ports": {
                        ".": {},
                        "k:{\"port\":53,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        },
                        "k:{\"port\":53,\"protocol\":\"UDP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        },
                        "k:{\"port\":9153,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        }
                      },
                      "f:selector": {},
                      "f:sessionAffinity": {},
                      "f:type": {}
                    }
                  },
                  "manager": "kubeadm",
                  "operation": "Update",
                  "time": "2024-09-25T04:19:51Z"
                }
              ],
              "name": "kube-dns",
              "namespace": "kube-system",
              "resourceVersion": "273",
              "uid": "8c4114ae-de82-4683-b7db-9b14a6dca119"
            },
            "spec": {
              "clusterIP": "10.96.0.10",
              "clusterIPs": [
                "10.96.0.10"
              ],
              "internalTrafficPolicy": "Cluster",
              "ipFamilies": [
                "IPv4"
              ],
              "ipFamilyPolicy": "SingleStack",
              "ports": [
                {
                  "name": "dns",
                  "port": 53,
                  "protocol": "UDP",
                  "targetPort": 53
                },
                {
                  "name": "dns-tcp",
                  "port": 53,
                  "protocol": "TCP",
                  "targetPort": 53
                },
                {
                  "name": "metrics",
                  "port": 9153,
                  "protocol": "TCP",
                  "targetPort": 9153
                }
              ],
              "selector": {
                "k8s-app": "kube-dns"
              },
              "sessionAffinity": "None",
              "type": "ClusterIP"
            },
            "status": {
              "loadBalancer": {}
            }
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/prometheus-msteams",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app": "prometheus-msteams",
              "app.kubernetes.io/managed-by": "Helm",
              "chart": "prometheus-msteams-1.3.4",
              "heritage": "Helm",
              "release": "obs"
            },
            "name": "prometheus-msteams",
            "namespace": "default",
            "resourceVersion": "1847309",
            "uid": "8b83a2f9-14e3-4abf-ad70-29d5fd0a8587"
          },
          "spec": {
            "clusterIP": "10.100.174.252",
            "clusterIPs": [
              "10.100.174.252"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "port": 2000,
                "protocol": "TCP",
                "targetPort": "http"
              }
            ],
            "selector": {
              "app": "prometheus-msteams",
              "release": "obs"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
        "object": {
          "kind": "ServiceAccount",
          "name": "kube-controller-manager",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-controller-manager",
                "namespace": "kube-system",
                "resourceVersion": "227",
                "uid": "d5941298-4440-48db-a629-5b0809ddf30d"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system::leader-locking-kube-controller-manager"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-controller-manager"
                },
                {
                  "kind": "ServiceAccount",
                  "name": "kube-controller-manager",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-controller-manager",
                "namespace": "kube-system",
                "resourceVersion": "224",
                "uid": "8c56a5fe-7435-4078-b6ec-6e8d524502f9"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "kube-controller-manager"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:discovery/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:discovery",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:authenticated",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:discovery",
                "resourceVersion": "176",
                "uid": "4e0f9121-d54c-449a-aa38-dc7e295a0870"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:discovery"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:authenticated"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:discovery",
                "resourceVersion": "110",
                "uid": "463ee354-deb6-4b53-8cd5-22212a152bcb"
              },
              "rules": [
                {
                  "nonResourceURLs": [
                    "/api",
                    "/api/*",
                    "/apis",
                    "/apis/*",
                    "/healthz",
                    "/livez",
                    "/openapi",
                    "/openapi/*",
                    "/readyz",
                    "/version",
                    "/version/"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:nodes/rbac.authorization.k8s.io/v1/kube-system/Role/kubeadm:kubelet-config/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:kubelet-config",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:nodes",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:kubelet-config",
                "namespace": "kube-system",
                "resourceVersion": "244",
                "uid": "e6413dbf-18cb-4645-a061-cb3e989cdb47"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kubeadm:kubelet-config"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:nodes"
                },
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:bootstrappers:kubeadm:default-node-token"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:kubelet-config",
                "namespace": "kube-system",
                "resourceVersion": "243",
                "uid": "9cb7a180-31f3-4817-8725-60ef09173f33"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "kubelet-config"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/host-scanner-definition",
        "object": {
          "apiVersion": "v1",
          "data": {
            "host-scanner-yaml": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "ks-cloud-config",
              "app.kubernetes.io/component": "ks-cloud-config",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "host-scanner-definition",
            "namespace": "default",
            "resourceVersion": "1847155",
            "uid": "9a200f02-7b7e-4ff9-9795-fb99da1b3fb8"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/grafana",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "grafana",
              "app.kubernetes.io/version": "11.2.1",
              "helm.sh/chart": "grafana-8.5.2"
            },
            "name": "grafana",
            "namespace": "default",
            "resourceVersion": "1848175",
            "uid": "9bf93474-e468-42f8-bbe2-e47db0e07ad2"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "grafana"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": "25%",
                "maxUnavailable": "25%"
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "e8497eb3f60cdfab29ba639a1cfe33565a0a3ca6f55338dfbde87401a515c7c7",
                  "checksum/dashboards-json-config": "960d52315de6659243a4d4f031fa9d9fed6ba81c8126b78ea5dddcc0c8e2ac86",
                  "checksum/sc-dashboard-provider-config": "e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24",
                  "checksum/secret": "848081a006b08aff6a71674c5dcf536e238bea356bd63ac9c501261dddc1e642",
                  "kubectl.kubernetes.io/default-container": "grafana"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "grafana"
                }
              },
              "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "grafana",
                    "image": "docker.io/grafana/grafana:11.2.1",
                    "ports": [
                      {
                        "name": "grafana",
                        "containerPort": 3000,
                        "protocol": "TCP"
                      },
                      {
                        "name": "gossip-tcp",
                        "containerPort": 9094,
                        "protocol": "TCP"
                      },
                      {
                        "name": "gossip-udp",
                        "containerPort": 9094,
                        "protocol": "UDP"
                      }
                    ],
                    "env": [
                      {
                        "name": "POD_IP",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "fieldRef": {
                            "apiVersion": "v1",
                            "fieldPath": "status.podIP"
                          }
                        }
                      },
                      {
                        "name": "GF_SECURITY_ADMIN_USER",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "grafana",
                            "key": "admin-user"
                          }
                        }
                      },
                      {
                        "name": "GF_SECURITY_ADMIN_PASSWORD",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "grafana",
                            "key": "admin-password"
                          }
                        }
                      },
                      {
                        "name": "GF_PATHS_DATA",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "GF_PATHS_LOGS",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "GF_PATHS_PLUGINS",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "GF_PATHS_PROVISIONING",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/grafana/grafana.ini",
                        "subPath": "grafana.ini"
                      },
                      {
                        "name": "storage",
                        "mountPath": "/var/lib/grafana"
                      },
                      {
                        "name": "dashboards-default",
                        "mountPath": "/var/lib/grafana/dashboards/default/some-dashboard.json",
                        "subPath": "some-dashboard.json"
                      },
                      {
                        "name": "config",
                        "mountPath": "/etc/grafana/provisioning/datasources/datasources.yaml",
                        "subPath": "datasources.yaml"
                      },
                      {
                        "name": "config",
                        "mountPath": "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml",
                        "subPath": "dashboardproviders.yaml"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/api/health",
                        "port": 3000,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 60,
                      "timeoutSeconds": 30,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 10
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/api/health",
                        "port": 3000,
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "allowPrivilegeEscalation": false,
                      "seccompProfile": {
                        "type": "RuntimeDefault"
                      }
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                  {
                    "name": "download-dashboards",
                    "image": "docker.io/curlimages/curl:7.85.0",
                    "command": [
                      "/bin/sh"
                    ],
                    "args": [
                      "-c",
                      "mkdir -p /var/lib/grafana/dashboards/default && /bin/sh -x /etc/grafana/download_dashboards.sh"
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/grafana/download_dashboards.sh",
                        "subPath": "download_dashboards.sh"
                      },
                      {
                        "name": "storage",
                        "mountPath": "/var/lib/grafana"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "allowPrivilegeEscalation": false,
                      "seccompProfile": {
                        "type": "RuntimeDefault"
                      }
                    }
                  }
                ],
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 472,
                  "runAsGroup": 472,
                  "runAsNonRoot": true,
                  "runAsUser": 472
                },
                "serviceAccount": "grafana",
                "serviceAccountName": "grafana",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "grafana"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "grafana-dashboards-default"
                    },
                    "name": "dashboards-default"
                  },
                  {
                    "emptyDir": {},
                    "name": "storage"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:discovery",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:discovery",
            "resourceVersion": "176",
            "uid": "4e0f9121-d54c-449a-aa38-dc7e295a0870"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:discovery"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:authenticated"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:service-account-issuer-discovery",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:service-account-issuer-discovery",
            "resourceVersion": "185",
            "uid": "b0386a5d-7fbc-44c8-a8e5-6c7259b767a0"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:service-account-issuer-discovery"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:serviceaccounts"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/replicaset-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:52Z",
            "name": "replicaset-controller",
            "namespace": "kube-system",
            "resourceVersion": "284",
            "uid": "8ca9ce05-1b8c-4918-b748-ee9f409d03cf"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "cronjob-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:cronjob-controller",
                "resourceVersion": "188",
                "uid": "f80e98a5-afdb-418a-8c14-9e018a7a0d59"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:cronjob-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "cronjob-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:cronjob-controller",
                "resourceVersion": "143",
                "uid": "82f1d8df-a2b3-4247-9d5f-f03fd181a9a6"
              },
              "rules": [
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "cronjobs"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "cronjobs/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "cronjobs/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "delete",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/kubeadm-config",
        "object": {
          "apiVersion": "v1",
          "data": {
            "ClusterConfiguration": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "kubeadm-config",
            "namespace": "kube-system",
            "resourceVersion": "239",
            "uid": "f263acf7-656c-45b0-891f-a1ca5c044006"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/gateway",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "generation": 1,
            "labels": {
              "app": "gateway",
              "app.kubernetes.io/component": "gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "gateway",
            "namespace": "default",
            "resourceVersion": "1858544",
            "uid": "15e22ed4-aaf5-4533-80a0-f268ffd6955a"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 2,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "gateway",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kubescape-operator"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": "0%",
                "maxUnavailable": "100%"
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/cloud-config": "88e74b1cdcc9075461153f9aa4ab5da3ad67280c46f317c599b4121b694e5c93",
                  "checksum/cloud-secret": "36b7ef21453a679289d8e51039f840d6c88d703464bc85df56f53c43682e07a9"
                },
                "creationTimestamp": null,
                "labels": {
                  "app": "gateway",
                  "app.kubernetes.io/component": "gateway",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "kubescape.io/tier": "core",
                  "tier": "ks-control-plane"
                }
              },
              "spec": {
                "automountServiceAccountToken": false,
                "containers": [
                  {
                    "name": "gateway",
                    "image": "quay.io/kubescape/gateway:v0.1.32",
                    "args": [
                      "-alsologtostderr",
                      "-v=4",
                      "2>&1"
                    ],
                    "ports": [
                      {
                        "name": "readiness-port",
                        "containerPort": 8000,
                        "protocol": "TCP"
                      },
                      {
                        "name": "websocket",
                        "containerPort": 8001,
                        "protocol": "TCP"
                      },
                      {
                        "name": "rest-api",
                        "containerPort": 8002,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "GOMEMLIMIT",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.memory",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOMAXPROCS",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.cpu",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "KS_LOGGER_LEVEL",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_LOGGER_NAME",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "WEBSOCKET_PORT",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "HTTP_PORT",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "ACCOUNT_ID",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "cloud-secret",
                            "key": "account"
                          }
                        }
                      },
                      {
                        "name": "OTEL_COLLECTOR_SVC",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "100m",
                        "memory": "50Mi"
                      },
                      "requests": {
                        "cpu": "10m",
                        "memory": "30Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "cloud-secret",
                        "readOnly": true,
                        "mountPath": "/etc/credentials"
                      },
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/v1/liveness",
                        "port": "readiness-port",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 3,
                      "timeoutSeconds": 1,
                      "periodSeconds": 3,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/v1/readiness",
                        "port": "readiness-port",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 1,
                      "periodSeconds": 5,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65532,
                  "runAsUser": 65532
                },
                "serviceAccount": "gateway",
                "serviceAccountName": "gateway",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "name": "cloud-secret",
                    "secret": {
                      "defaultMode": 420,
                      "secretName": "cloud-secret"
                    }
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "clusterData",
                          "path": "clusterData.json"
                        },
                        {
                          "key": "services",
                          "path": "services.json"
                        }
                      ],
                      "name": "ks-cloud-config"
                    },
                    "name": "ks-cloud-config"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "apps/v1/default/StatefulSet/loki-distributed-compactor",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "StatefulSet",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:58Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "compactor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/part-of": "memberlist",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-compactor",
            "namespace": "default",
            "resourceVersion": "1847712",
            "uid": "cf43f38a-84fc-4732-86c9-4282dbde87bb"
          },
          "spec": {
            "persistentVolumeClaimRetentionPolicy": {
              "whenDeleted": "Retain",
              "whenScaled": "Retain"
            },
            "podManagementPolicy": "Parallel",
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "compactor",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              }
            },
            "serviceName": "loki-distributed-compactor-headless",
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "3d2b043c06f24b69bffc86a7dc505b6da51eaf8dd861673ca393d411e8c73eab"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "compactor",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "loki-distributed",
                  "app.kubernetes.io/part-of": "memberlist"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "compactor",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "loki-distributed"
                            }
                          },
                          "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "compactor",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "loki-distributed"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "compactor",
                    "image": "docker.io/grafana/loki:2.9.10",
                    "args": [
                      "-config.file=/etc/loki/config/config.yaml",
                      "-target=compactor"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      },
                      {
                        "name": "grpc",
                        "containerPort": 9095,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-memberlist",
                        "containerPort": 7946,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "temp",
                        "mountPath": "/tmp"
                      },
                      {
                        "name": "config",
                        "mountPath": "/etc/loki/config"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/var/loki-distributed-runtime"
                      },
                      {
                        "name": "data",
                        "mountPath": "/var/loki"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 300,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 10001,
                  "runAsGroup": 10001,
                  "runAsNonRoot": true,
                  "runAsUser": 10001
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "emptyDir": {},
                    "name": "temp"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed-runtime"
                    },
                    "name": "runtime-config"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "partition": 0
              },
              "type": "RollingUpdate"
            },
            "volumeClaimTemplates": [
              {
                "apiVersion": "v1",
                "kind": "PersistentVolumeClaim",
                "metadata": {
                  "creationTimestamp": null,
                  "name": "data"
                },
                "spec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "10Gi"
                    }
                  },
                  "storageClassName": "helm-storage",
                  "volumeMode": "Filesystem"
                },
                "status": {
                  "phase": "Pending"
                }
              }
            ]
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/kube-apiserver-legacy-service-account-token-tracking",
        "object": {
          "apiVersion": "v1",
          "data": {
            "since": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:48Z",
            "name": "kube-apiserver-legacy-service-account-token-tracking",
            "namespace": "kube-system",
            "resourceVersion": "22",
            "uid": "6a3645da-9bd5-4de8-91cb-e8e79e82b17a"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kube-proxy",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:52Z",
            "name": "kube-proxy",
            "namespace": "kube-system",
            "resourceVersion": "282",
            "uid": "5b5ef0a6-5a62-46ed-b189-be4d9853b6a4"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "kube-proxy"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:bootstrappers:kubeadm:default-node-token"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/component": "rbac",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alloy",
              "app.kubernetes.io/part-of": "alloy",
              "app.kubernetes.io/version": "v1.4.2",
              "helm.sh/chart": "alloy-0.9.1"
            },
            "name": "alloy",
            "resourceVersion": "1847186",
            "uid": "90fd14e6-8547-470b-a5e7-3484052331df"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "alloy"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "alloy",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/tempo-ingester-discovery",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "ingester",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5",
              "prometheus.io/service-monitor": "false"
            },
            "name": "tempo-ingester-discovery",
            "namespace": "default",
            "resourceVersion": "1847347",
            "uid": "d6a49a78-c709-4d83-9500-558ca14b0128"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http-metrics",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": 3100
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": 9095
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "ingester",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "tempo"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/tempo-query-frontend-discovery",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "query-frontend",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-query-frontend-discovery",
            "namespace": "default",
            "resourceVersion": "1847363",
            "uid": "34373b8c-6c9a-4026-a354-2bfe01add4c7"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": 3100
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": 9095
              },
              {
                "name": "grpclb",
                "port": 9096,
                "protocol": "TCP",
                "targetPort": "grpc"
              }
            ],
            "publishNotReadyAddresses": true,
            "selector": {
              "app.kubernetes.io/component": "query-frontend",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "tempo"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/prometheus-node-exporter",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default",
              "prometheus.io/scrape": "true"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "metrics",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/part-of": "prometheus",
              "app.kubernetes.io/version": "1.8.2",
              "helm.sh/chart": "prometheus-node-exporter-4.39.0"
            },
            "name": "prometheus-node-exporter",
            "namespace": "default",
            "resourceVersion": "1847317",
            "uid": "83d7e368-c932-4054-a8a0-be98907e9491"
          },
          "spec": {
            "clusterIP": "10.100.153.89",
            "clusterIPs": [
              "10.100.153.89"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "metrics",
                "port": 9100,
                "protocol": "TCP",
                "targetPort": 9100
              }
            ],
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "prometheus"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:monitoring/rbac.authorization.k8s.io/v1//ClusterRole/system:monitoring/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:monitoring",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:monitoring",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:monitoring",
                "resourceVersion": "175",
                "uid": "53e55a98-1b52-4f72-8fac-7f5dd9304639"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:monitoring"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:monitoring"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:monitoring",
                "resourceVersion": "111",
                "uid": "dcb5f797-beea-444a-8d65-9240db756d01"
              },
              "rules": [
                {
                  "nonResourceURLs": [
                    "/healthz",
                    "/healthz/*",
                    "/livez",
                    "/livez/*",
                    "/metrics",
                    "/metrics/slis",
                    "/readyz",
                    "/readyz/*"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/kubevuln-scheduler",
        "object": {
          "apiVersion": "v1",
          "data": {
            "request-body.json": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "kubevuln-scheduler",
              "app.kubernetes.io/component": "kubevuln-scheduler",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "kubevuln-scheduler",
            "namespace": "default",
            "resourceVersion": "1847156",
            "uid": "6e9ed6b5-b823-4586-8093-1de7ba44b64b"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system::leader-locking-kube-controller-manager",
            "namespace": "kube-system",
            "resourceVersion": "227",
            "uid": "d5941298-4440-48db-a629-5b0809ddf30d"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "system::leader-locking-kube-controller-manager"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "User",
              "name": "system:kube-controller-manager"
            },
            {
              "kind": "ServiceAccount",
              "name": "kube-controller-manager",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/vpnkit-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {},
            "creationTimestamp": "2024-09-25T04:19:59Z",
            "name": "vpnkit-controller",
            "resourceVersion": "403",
            "uid": "33bfb3ef-f3a2-420a-8b02-1c4255d75418"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "vpnkit-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "vpnkit-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:expand-controller",
            "resourceVersion": "195",
            "uid": "62f14abb-4a78-450c-aef4-cdc1825f4f0d"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:expand-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "expand-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1//Namespace/kube-public",
        "object": {
          "apiVersion": "v1",
          "kind": "Namespace",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:48Z",
            "labels": {
              "kubernetes.io/metadata.name": "kube-public"
            },
            "name": "kube-public",
            "resourceVersion": "17",
            "uid": "b4a9db6c-8cff-4ead-922f-84c6057603c9"
          },
          "spec": {
            "finalizers": [
              "kubernetes"
            ]
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/validatingadmissionpolicy-status-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:55Z",
            "name": "validatingadmissionpolicy-status-controller",
            "namespace": "kube-system",
            "resourceVersion": "310",
            "uid": "3e9f970f-7f0f-4323-b9c1-641f944eea01"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/ephemeral-volume-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:55Z",
            "name": "ephemeral-volume-controller",
            "namespace": "kube-system",
            "resourceVersion": "309",
            "uid": "e368bac8-e9f1-469c-aeda-d3fa1aa94083"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/alloy",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/component": "rbac",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alloy",
              "app.kubernetes.io/part-of": "alloy",
              "app.kubernetes.io/version": "v1.4.2",
              "helm.sh/chart": "alloy-0.9.1"
            },
            "name": "alloy",
            "namespace": "default",
            "resourceVersion": "1847126",
            "uid": "db9540fb-1d81-476b-a965-8b4ac2b1fc7e"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/pod-garbage-collector",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "pod-garbage-collector",
            "namespace": "kube-system",
            "resourceVersion": "261",
            "uid": "a812a0dc-adaa-4bf1-8fbd-b8a7e84cfdd2"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer",
        "object": {
          "kind": "ServiceAccount",
          "name": "bootstrap-signer",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-public",
                "resourceVersion": "232",
                "uid": "d137bd34-5d36-465c-8431-90d5dcb903d9"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system:controller:bootstrap-signer"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "bootstrap-signer",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-public",
                "resourceVersion": "219",
                "uid": "6564c546-ceb3-416e-b685-94a093891f76"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "cluster-info"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
        "object": {
          "kind": "ServiceAccount",
          "name": "legacy-service-account-token-cleaner",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:legacy-service-account-token-cleaner",
                "resourceVersion": "218",
                "uid": "b91b24f5-81c0-4a68-a332-114682e48a16"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:legacy-service-account-token-cleaner"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "legacy-service-account-token-cleaner",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:legacy-service-account-token-cleaner",
                "resourceVersion": "173",
                "uid": "23a5730b-85fb-440c-933d-86299e21f6e2"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "kube-apiserver-legacy-service-account-token-tracking"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "secrets"
                  ],
                  "verbs": [
                    "delete",
                    "patch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/loki-distributed-gateway",
        "object": {
          "apiVersion": "v1",
          "data": {
            "nginx.conf": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/component": "gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-gateway",
            "namespace": "default",
            "resourceVersion": "1847166",
            "uid": "4f0516b6-54fd-4fbf-8c64-69b1a07d04fa"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/StatefulSet/tempo-memcached",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "StatefulSet",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:59Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "memcached",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-memcached",
            "namespace": "default",
            "resourceVersion": "1847968",
            "uid": "4442e16f-bdce-4d3c-be45-f3bdfe5b0312"
          },
          "spec": {
            "persistentVolumeClaimRetentionPolicy": {
              "whenDeleted": "Retain",
              "whenScaled": "Retain"
            },
            "podManagementPolicy": "OrderedReady",
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "memcached",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "tempo"
              }
            },
            "serviceName": "memcached",
            "template": {
              "metadata": {
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "memcached",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "tempo",
                  "app.kubernetes.io/version": "2.6.0",
                  "helm.sh/chart": "tempo-distributed-1.18.5"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "memcached",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "tempo"
                            }
                          },
                          "topologyKey": "topology.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "memcached",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "tempo"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "memcached",
                    "image": "docker.io/memcached:1.6.29-alpine",
                    "ports": [
                      {
                        "name": "client",
                        "containerPort": 11211,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "runAsUser": 1000,
                      "runAsGroup": 1000,
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": false,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 1000
                },
                "serviceAccount": "tempo",
                "serviceAccountName": "tempo",
                "terminationGracePeriodSeconds": 30,
                "topologySpreadConstraints": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/component": "memcached",
                        "app.kubernetes.io/instance": "obs",
                        "app.kubernetes.io/name": "tempo"
                      }
                    },
                    "maxSkew": 1,
                    "topologyKey": "topology.kubernetes.io/zone",
                    "whenUnsatisfiable": "ScheduleAnyway"
                  }
                ]
              }
            },
            "updateStrategy": {
              "type": "RollingUpdate"
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-autoapprove-bootstrap",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "kubeadm:node-autoapprove-bootstrap",
            "resourceVersion": "251",
            "uid": "651bc68e-a930-4be3-97b2-c3d3cd489d7c"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:bootstrappers:kubeadm:default-node-token"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/prometheus-kube-state-metrics",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": true,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/component": "metrics",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kube-state-metrics",
              "app.kubernetes.io/part-of": "kube-state-metrics",
              "app.kubernetes.io/version": "2.13.0",
              "helm.sh/chart": "kube-state-metrics-5.25.1"
            },
            "name": "prometheus-kube-state-metrics",
            "namespace": "default",
            "resourceVersion": "1847139",
            "uid": "2ffb8043-85c5-4f96-94b3-bb09774b164e"
          }
        }
      },
      {
        "resourceID": "/default/ServiceAccount/prometheus-server/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-server/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-server",
        "object": {
          "kind": "ServiceAccount",
          "name": "prometheus-server",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/component": "server",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "prometheus",
                  "app.kubernetes.io/part-of": "prometheus",
                  "app.kubernetes.io/version": "v2.54.1",
                  "helm.sh/chart": "prometheus-25.27.0"
                },
                "name": "prometheus-server",
                "resourceVersion": "1847199",
                "uid": "82554dbb-89db-4a25-9d04-59455b168d1b"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "prometheus-server"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "prometheus-server",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/component": "server",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "prometheus",
                  "app.kubernetes.io/part-of": "prometheus",
                  "app.kubernetes.io/version": "v2.54.1",
                  "helm.sh/chart": "prometheus-25.27.0"
                },
                "name": "prometheus-server",
                "resourceVersion": "1847185",
                "uid": "ce42ec6d-ceae-4705-946f-9fe8489a49fc"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes",
                    "nodes/proxy",
                    "nodes/metrics",
                    "services",
                    "endpoints",
                    "pods",
                    "ingresses",
                    "configmaps"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "extensions",
                    "networking.k8s.io"
                  ],
                  "resources": [
                    "ingresses/status",
                    "ingresses"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "discovery.k8s.io"
                  ],
                  "resources": [
                    "endpointslices"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "nonResourceURLs": [
                    "/metrics"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:ttl-controller",
            "resourceVersion": "211",
            "uid": "52722ead-b0d7-46e4-b120-b9dce5070527"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:ttl-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "ttl-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-ingester-headless",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "ingester",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "prometheus.io/service-monitor": "false"
            },
            "name": "loki-distributed-ingester-headless",
            "namespace": "default",
            "resourceVersion": "1847287",
            "uid": "0a74c77f-13a7-4e5a-ad63-0dbd46279f24"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http"
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": "grpc"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "ingester",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/kubevuln",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": false,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app": "kubevuln",
              "app.kubernetes.io/component": "kubevuln",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "kubevuln",
            "namespace": "default",
            "resourceVersion": "1847132",
            "uid": "1e579560-eaf4-4a3e-a11f-95ac8fe7778d"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/endpointslice-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpointslice-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslice-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "endpointslice-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpointslice-controller",
                "resourceVersion": "193",
                "uid": "e6aa454f-788c-4257-b9b0-7289d5e69a5b"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:endpointslice-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "endpointslice-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpointslice-controller",
                "resourceVersion": "148",
                "uid": "ab19988a-c8a6-44e0-b248-a10cd2ea99da"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes",
                    "pods",
                    "services"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "services/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "discovery.k8s.io"
                  ],
                  "resources": [
                    "endpointslices"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
        "object": {
          "kind": "ServiceAccount",
          "name": "persistent-volume-binder",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:persistent-volume-binder",
                "resourceVersion": "202",
                "uid": "b961a2c8-1e44-4f4f-b777-173d78414408"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:persistent-volume-binder"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "persistent-volume-binder",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:persistent-volume-binder",
                "resourceVersion": "157",
                "uid": "39f9591e-f351-46ca-88aa-4a8b95525d14"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumes"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumes/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "storageclasses"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "services"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "secrets"
                  ],
                  "verbs": [
                    "get"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "get",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/endpoint-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpoint-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpoint-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "endpoint-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpoint-controller",
                "resourceVersion": "192",
                "uid": "6aa91415-da63-4553-8f6c-82f47e231960"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:endpoint-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "endpoint-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpoint-controller",
                "resourceVersion": "147",
                "uid": "da3a2903-991c-4bc2-807b-542c47cdcea2"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods",
                    "services"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints/restricted"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/loki-distributed-query-frontend",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:55Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "query-frontend",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-query-frontend",
            "namespace": "default",
            "resourceVersion": "1848223",
            "uid": "c10bfe66-19a4-4453-909f-1e5e009b5a10"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "query-frontend",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "3d2b043c06f24b69bffc86a7dc505b6da51eaf8dd861673ca393d411e8c73eab"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "query-frontend",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "loki-distributed",
                  "app.kubernetes.io/part-of": "memberlist"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "query-frontend",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "loki-distributed"
                            }
                          },
                          "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "query-frontend",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "loki-distributed"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "query-frontend",
                    "image": "docker.io/grafana/loki:2.9.10",
                    "args": [
                      "-config.file=/etc/loki/config/config.yaml",
                      "-target=query-frontend"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      },
                      {
                        "name": "grpc",
                        "containerPort": 9095,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-memberlist",
                        "containerPort": 7946,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/loki/config"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/var/loki-distributed-runtime"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 300,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 10001,
                  "runAsGroup": 10001,
                  "runAsNonRoot": true,
                  "runAsUser": 10001
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed-runtime"
                    },
                    "name": "runtime-config"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/coredns",
        "object": {
          "apiVersion": "v1",
          "data": {
            "Corefile": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "coredns",
            "namespace": "kube-system",
            "resourceVersion": "259",
            "uid": "fcdb4664-b791-4bce-961b-b5d29dcd968a"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:volume-scheduler",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:volume-scheduler",
            "resourceVersion": "183",
            "uid": "1bb5ebd6-287d-402b-a36d-f831e62023ef"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:volume-scheduler"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "User",
              "name": "system:kube-scheduler"
            }
          ]
        }
      },
      {
        "resourceID": "/default/Deployment/grafana",
        "object": {
          "kind": "Deployment",
          "name": "grafana",
          "namespace": "default",
          "relatedObjects": {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
              "annotations": {
                "meta.helm.sh/release-name": "obs",
                "meta.helm.sh/release-namespace": "default"
              },
              "creationTimestamp": "2024-11-29T06:19:52Z",
              "labels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "grafana",
                "app.kubernetes.io/version": "11.2.1",
                "helm.sh/chart": "grafana-8.5.2"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:meta.helm.sh/release-name": {},
                        "f:meta.helm.sh/release-namespace": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:app.kubernetes.io/instance": {},
                        "f:app.kubernetes.io/managed-by": {},
                        "f:app.kubernetes.io/name": {},
                        "f:app.kubernetes.io/version": {},
                        "f:helm.sh/chart": {}
                      }
                    },
                    "f:spec": {
                      "f:internalTrafficPolicy": {},
                      "f:ports": {
                        ".": {},
                        "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        }
                      },
                      "f:selector": {},
                      "f:sessionAffinity": {},
                      "f:type": {}
                    }
                  },
                  "manager": "helm",
                  "operation": "Update",
                  "time": "2024-11-29T06:19:52Z"
                }
              ],
              "name": "grafana",
              "namespace": "default",
              "resourceVersion": "1847229",
              "uid": "55641b8e-8051-4844-bd4a-6b2e041e1e83"
            },
            "spec": {
              "clusterIP": "10.111.104.89",
              "clusterIPs": [
                "10.111.104.89"
              ],
              "internalTrafficPolicy": "Cluster",
              "ipFamilies": [
                "IPv4"
              ],
              "ipFamilyPolicy": "SingleStack",
              "ports": [
                {
                  "name": "service",
                  "port": 80,
                  "protocol": "TCP",
                  "targetPort": 3000
                }
              ],
              "selector": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "grafana"
              },
              "sessionAffinity": "None",
              "type": "ClusterIP"
            },
            "status": {
              "loadBalancer": {}
            }
          }
        }
      },
      {
        "resourceID": "/default/StatefulSet/alertmanager",
        "object": {
          "kind": "StatefulSet",
          "name": "alertmanager",
          "namespace": "default",
          "relatedObjects": {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
              "annotations": {
                "meta.helm.sh/release-name": "obs",
                "meta.helm.sh/release-namespace": "default"
              },
              "creationTimestamp": "2024-11-29T06:19:52Z",
              "labels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "alertmanager",
                "app.kubernetes.io/version": "v0.27.0",
                "helm.sh/chart": "alertmanager-1.13.1"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:meta.helm.sh/release-name": {},
                        "f:meta.helm.sh/release-namespace": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:app.kubernetes.io/instance": {},
                        "f:app.kubernetes.io/managed-by": {},
                        "f:app.kubernetes.io/name": {},
                        "f:app.kubernetes.io/version": {},
                        "f:helm.sh/chart": {}
                      }
                    },
                    "f:spec": {
                      "f:internalTrafficPolicy": {},
                      "f:ports": {
                        ".": {},
                        "k:{\"port\":9093,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        }
                      },
                      "f:selector": {},
                      "f:sessionAffinity": {},
                      "f:type": {}
                    }
                  },
                  "manager": "helm",
                  "operation": "Update",
                  "time": "2024-11-29T06:19:52Z"
                }
              ],
              "name": "alertmanager",
              "namespace": "default",
              "resourceVersion": "1847211",
              "uid": "057a3310-8673-4830-b6ac-2138fb1315a3"
            },
            "spec": {
              "clusterIP": "10.111.11.3",
              "clusterIPs": [
                "10.111.11.3"
              ],
              "internalTrafficPolicy": "Cluster",
              "ipFamilies": [
                "IPv4"
              ],
              "ipFamilyPolicy": "SingleStack",
              "ports": [
                {
                  "name": "http",
                  "port": 9093,
                  "protocol": "TCP",
                  "targetPort": "http"
                }
              ],
              "selector": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "alertmanager"
              },
              "sessionAffinity": "None",
              "type": "ClusterIP"
            },
            "status": {
              "loadBalancer": {}
            }
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/synchronizer",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app": "synchronizer",
              "app.kubernetes.io/component": "synchronizer",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "synchronizer",
            "namespace": "default",
            "resourceVersion": "1847265",
            "uid": "e9a0c792-5f4b-4706-bb22-df22caf4d720"
          },
          "spec": {
            "clusterIP": "10.96.65.76",
            "clusterIPs": [
              "10.96.65.76"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "port": 8089,
                "protocol": "TCP",
                "targetPort": 8089
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "synchronizer",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "kubescape-operator"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/legacy-service-account-token-cleaner",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "legacy-service-account-token-cleaner",
            "namespace": "kube-system",
            "resourceVersion": "260",
            "uid": "88f6e99b-d8da-4e6b-863c-471d773ffa86"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/kube-proxy",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:52Z",
            "name": "kube-proxy",
            "namespace": "kube-system",
            "resourceVersion": "277",
            "uid": "0985cb63-8cf7-423a-a055-7429ef25ff91"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
        "object": {
          "kind": "ServiceAccount",
          "name": "bootstrap-signer",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-system",
                "resourceVersion": "229",
                "uid": "968514ee-35e3-4bc4-ae9d-4f206121ac2c"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system:controller:bootstrap-signer"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "bootstrap-signer",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-public",
                "resourceVersion": "219",
                "uid": "6564c546-ceb3-416e-b685-94a093891f76"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "cluster-info"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
        "object": {
          "apiVersion": "v1",
          "kind": "Pod",
          "metadata": {
            "annotations": {
              "kubernetes.io/config.hash": "2d884e49e38d30ded4b72cbfd8a93ca9",
              "kubernetes.io/config.mirror": "2d884e49e38d30ded4b72cbfd8a93ca9",
              "kubernetes.io/config.seen": "2024-09-25T04:19:43.733230376Z",
              "kubernetes.io/config.source": "file"
            },
            "creationTimestamp": "2024-09-25T04:19:53Z",
            "labels": {
              "component": "kube-controller-manager",
              "tier": "control-plane"
            },
            "name": "kube-controller-manager-docker-desktop",
            "namespace": "kube-system",
            "ownerReferences": [
              {
                "apiVersion": "v1",
                "controller": true,
                "kind": "Node",
                "name": "docker-desktop",
                "uid": "5bdfe2a9-b3e5-4af4-8da8-dc5d668b7959"
              }
            ],
            "resourceVersion": "1826957",
            "uid": "2acbbe6f-a65c-484d-bb4b-a32d028c37f5"
          },
          "spec": {
            "containers": [
              {
                "name": "kube-controller-manager",
                "image": "registry.k8s.io/kube-controller-manager:v1.30.2",
                "command": [
                  "kube-controller-manager",
                  "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                  "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                  "--bind-address=127.0.0.1",
                  "--client-ca-file=/run/config/pki/ca.crt",
                  "--cluster-name=kubernetes",
                  "--cluster-signing-cert-file=/run/config/pki/ca.crt",
                  "--cluster-signing-key-file=/run/config/pki/ca.key",
                  "--controllers=*,bootstrapsigner,tokencleaner",
                  "--horizontal-pod-autoscaler-sync-period=60s",
                  "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                  "--leader-elect=false",
                  "--node-monitor-grace-period=180s",
                  "--node-monitor-period=30s",
                  "--pvclaimbinder-sync-period=60s",
                  "--requestheader-client-ca-file=/run/config/pki/front-proxy-ca.crt",
                  "--root-ca-file=/run/config/pki/ca.crt",
                  "--service-account-private-key-file=/run/config/pki/sa.key",
                  "--use-service-account-credentials=true"
                ],
                "resources": {
                  "requests": {
                    "cpu": "200m"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "ca-certs",
                    "readOnly": true,
                    "mountPath": "/etc/ssl/certs"
                  },
                  {
                    "name": "etc-ca-certificates",
                    "readOnly": true,
                    "mountPath": "/etc/ca-certificates"
                  },
                  {
                    "name": "flexvolume-dir",
                    "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                  },
                  {
                    "name": "k8s-certs",
                    "readOnly": true,
                    "mountPath": "/run/config/pki"
                  },
                  {
                    "name": "kubeconfig",
                    "readOnly": true,
                    "mountPath": "/etc/kubernetes/controller-manager.conf"
                  },
                  {
                    "name": "usr-local-share-ca-certificates",
                    "readOnly": true,
                    "mountPath": "/usr/local/share/ca-certificates"
                  },
                  {
                    "name": "usr-share-ca-certificates",
                    "readOnly": true,
                    "mountPath": "/usr/share/ca-certificates"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 10257,
                    "host": "127.0.0.1",
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 15,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 8
                },
                "startupProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 10257,
                    "host": "127.0.0.1",
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 15,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 24
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "enableServiceLinks": true,
            "hostNetwork": true,
            "nodeName": "docker-desktop",
            "preemptionPolicy": "PreemptLowerPriority",
            "priority": 2000001000,
            "priorityClassName": "system-node-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoExecute",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/etc/ssl/certs",
                  "type": "DirectoryOrCreate"
                },
                "name": "ca-certs"
              },
              {
                "hostPath": {
                  "path": "/etc/ca-certificates",
                  "type": "DirectoryOrCreate"
                },
                "name": "etc-ca-certificates"
              },
              {
                "hostPath": {
                  "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                  "type": "DirectoryOrCreate"
                },
                "name": "flexvolume-dir"
              },
              {
                "hostPath": {
                  "path": "/run/config/pki",
                  "type": "DirectoryOrCreate"
                },
                "name": "k8s-certs"
              },
              {
                "hostPath": {
                  "path": "/etc/kubernetes/controller-manager.conf",
                  "type": "FileOrCreate"
                },
                "name": "kubeconfig"
              },
              {
                "hostPath": {
                  "path": "/usr/local/share/ca-certificates",
                  "type": "DirectoryOrCreate"
                },
                "name": "usr-local-share-ca-certificates"
              },
              {
                "hostPath": {
                  "path": "/usr/share/ca-certificates",
                  "type": "DirectoryOrCreate"
                },
                "name": "usr-share-ca-certificates"
              }
            ]
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:certificate-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:certificate-controller",
            "resourceVersion": "212",
            "uid": "aa16d070-fd15-4856-9ad9-573cb29f975a"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:certificate-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "certificate-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:daemon-set-controller",
            "resourceVersion": "189",
            "uid": "b504c70b-4507-43b8-93a3-5a13fb9cddb5"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:daemon-set-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "daemon-set-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:kube-controller-manager",
            "resourceVersion": "180",
            "uid": "778c4202-b2f8-4beb-94f9-fd8c04f5001b"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:kube-controller-manager"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "User",
              "name": "system:kube-controller-manager"
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
        "object": {
          "kind": "ServiceAccount",
          "name": "kube-scheduler",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-scheduler",
                "namespace": "kube-system",
                "resourceVersion": "228",
                "uid": "03939fbe-2fcc-40b3-848d-7d2caecd0593"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system::leader-locking-kube-scheduler"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-scheduler"
                },
                {
                  "kind": "ServiceAccount",
                  "name": "kube-scheduler",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-scheduler",
                "namespace": "kube-system",
                "resourceVersion": "225",
                "uid": "5f5bc832-7f45-47ba-a1ef-00cca2848990"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "kube-scheduler"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/kubevuln-cronjob-template",
        "object": {
          "apiVersion": "v1",
          "data": {
            "cronjobTemplate": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "ks-cloud-config",
              "app.kubernetes.io/component": "ks-cloud-config",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "kubevuln-cronjob-template",
            "namespace": "default",
            "resourceVersion": "1847161",
            "uid": "8cac2036-6d06-453e-ab6f-8f323c2f90d7"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/operator",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:54Z",
            "generation": 1,
            "labels": {
              "app": "operator",
              "app.kubernetes.io/component": "operator",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "operator",
            "namespace": "default",
            "resourceVersion": "1848018",
            "uid": "870f0615-1d2c-480f-bcf2-20eae32cc6c0"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 2,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "operator",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kubescape-operator"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": "0%",
                "maxUnavailable": "100%"
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/capabilities-config": "82c8f39bb99570f2e4e886ab5adbe260349275ec533f85addca5599a3d0ae7a1",
                  "checksum/cloud-config": "88e74b1cdcc9075461153f9aa4ab5da3ad67280c46f317c599b4121b694e5c93",
                  "checksum/cloud-secret": "36b7ef21453a679289d8e51039f840d6c88d703464bc85df56f53c43682e07a9",
                  "checksum/matching-rules-config": "beff150a84161dc420f3931f700851ca2a01ff059e29844be69d2ef22585d53f",
                  "checksum/operator-config": "941a6c3b30f6845e05b4e1cb5ec3b5e4a5a6cd97c3b44f109ce73122957aa489"
                },
                "creationTimestamp": null,
                "labels": {
                  "app": "operator",
                  "app.kubernetes.io/component": "operator",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "kubescape.io/tier": "core",
                  "otel": "enabled",
                  "tier": "ks-control-plane"
                }
              },
              "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "operator",
                    "image": "quay.io/kubescape/operator:v0.2.41",
                    "args": [
                      "-alsologtostderr",
                      "-v=4",
                      "2>&1"
                    ],
                    "ports": [
                      {
                        "name": "trigger-port",
                        "containerPort": 4002,
                        "protocol": "TCP"
                      },
                      {
                        "name": "readiness-port",
                        "containerPort": 8000,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "HELM_RELEASE",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "GOMEMLIMIT",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.memory",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOMAXPROCS",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.cpu",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "KS_LOGGER_LEVEL",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_LOGGER_NAME",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "OTEL_COLLECTOR_SVC",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "300m",
                        "memory": "300Mi"
                      },
                      "requests": {
                        "cpu": "50m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "cloud-secret",
                        "readOnly": true,
                        "mountPath": "/etc/credentials"
                      },
                      {
                        "name": "tmp-dir",
                        "mountPath": "/tmp"
                      },
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config/clusterData.json",
                        "subPath": "clusterData.json"
                      },
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config/services.json",
                        "subPath": "services.json"
                      },
                      {
                        "name": "ks-capabilities",
                        "readOnly": true,
                        "mountPath": "/etc/config/capabilities.json",
                        "subPath": "capabilities.json"
                      },
                      {
                        "name": "cs-matching-rules",
                        "readOnly": true,
                        "mountPath": "/etc/config/matchingRules.json",
                        "subPath": "matchingRules.json"
                      },
                      {
                        "name": "config",
                        "readOnly": true,
                        "mountPath": "/etc/config/config.json",
                        "subPath": "config.json"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/v1/liveness",
                        "port": "readiness-port",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 3,
                      "timeoutSeconds": 1,
                      "periodSeconds": 3,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/v1/readiness",
                        "port": "readiness-port",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 1,
                      "periodSeconds": 5,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65532,
                  "runAsUser": 65532
                },
                "serviceAccount": "operator",
                "serviceAccountName": "operator",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "name": "cloud-secret",
                    "secret": {
                      "defaultMode": 420,
                      "secretName": "cloud-secret"
                    }
                  },
                  {
                    "emptyDir": {},
                    "name": "tmp-dir"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "clusterData",
                          "path": "clusterData.json"
                        },
                        {
                          "key": "services",
                          "path": "services.json"
                        }
                      ],
                      "name": "ks-cloud-config"
                    },
                    "name": "ks-cloud-config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "capabilities",
                          "path": "capabilities.json"
                        }
                      ],
                      "name": "ks-capabilities"
                    },
                    "name": "ks-capabilities"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "config.json",
                          "path": "config.json"
                        }
                      ],
                      "name": "operator"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "matchingRules.json",
                          "path": "matchingRules.json"
                        }
                      ],
                      "name": "cs-matching-rules"
                    },
                    "name": "cs-matching-rules"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/loki-distributed-distributor",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:54Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "distributor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/part-of": "memberlist",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-distributor",
            "namespace": "default",
            "resourceVersion": "1848244",
            "uid": "ece5ef7d-97ee-427d-8322-128886005dc4"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "distributor",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "3d2b043c06f24b69bffc86a7dc505b6da51eaf8dd861673ca393d411e8c73eab"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "distributor",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "loki-distributed",
                  "app.kubernetes.io/part-of": "memberlist"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "distributor",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "loki-distributed"
                            }
                          },
                          "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "distributor",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "loki-distributed"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "distributor",
                    "image": "docker.io/grafana/loki:2.9.10",
                    "args": [
                      "-config.file=/etc/loki/config/config.yaml",
                      "-target=distributor"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      },
                      {
                        "name": "grpc",
                        "containerPort": 9095,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-memberlist",
                        "containerPort": 7946,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/loki/config"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/var/loki-distributed-runtime"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 300,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 10001,
                  "runAsGroup": 10001,
                  "runAsNonRoot": true,
                  "runAsUser": 10001
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed-runtime"
                    },
                    "name": "runtime-config"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-server",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/part-of": "prometheus",
              "app.kubernetes.io/version": "v2.54.1",
              "helm.sh/chart": "prometheus-25.27.0"
            },
            "name": "prometheus-server",
            "resourceVersion": "1847199",
            "uid": "82554dbb-89db-4a25-9d04-59455b168d1b"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "prometheus-server"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "prometheus-server",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/loki-distributed-namespace-only",
        "object": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "NetworkPolicy",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-namespace-only",
            "namespace": "default",
            "resourceVersion": "1847116",
            "uid": "097bbf81-702f-4467-ac74-2c4a9fafaa68"
          },
          "spec": {
            "egress": [
              {
                "to": [
                  {
                    "podSelector": {}
                  }
                ]
              }
            ],
            "ingress": [
              {
                "from": [
                  {
                    "podSelector": {}
                  }
                ]
              }
            ],
            "podSelector": {},
            "policyTypes": [
              "Ingress",
              "Egress"
            ]
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/alertmanager-headless",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alertmanager",
              "app.kubernetes.io/version": "v0.27.0",
              "helm.sh/chart": "alertmanager-1.13.1"
            },
            "name": "alertmanager-headless",
            "namespace": "default",
            "resourceVersion": "1847214",
            "uid": "6798120e-55b8-4db7-a372-4d8de181bdc4"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 9093,
                "protocol": "TCP",
                "targetPort": "http"
              }
            ],
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "alertmanager"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "replication-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:replication-controller",
                "resourceVersion": "205",
                "uid": "cf4cab4c-72cf-4299-ac75-5004c5c4257b"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:replication-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "replication-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:replication-controller",
                "resourceVersion": "160",
                "uid": "1449db28-cabc-4ebf-8f93-50834158b615"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "replicationcontrollers"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "replicationcontrollers/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "replicationcontrollers/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "list",
                    "patch",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/tempo-distributor",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:55Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "distributor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/part-of": "memberlist",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-distributor",
            "namespace": "default",
            "resourceVersion": "1848347",
            "uid": "19894b30-d010-4787-8bfb-c3a68a2018fb"
          },
          "spec": {
            "minReadySeconds": 10,
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "distributor",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "tempo"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": "25%",
                "maxUnavailable": "25%"
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "9d41dbb2e1e83f92fb6f56997bd79a1cb538e23a39fe246d44cfd878ca8114c7"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "distributor",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "tempo",
                  "app.kubernetes.io/part-of": "memberlist",
                  "app.kubernetes.io/version": "2.6.0",
                  "helm.sh/chart": "tempo-distributed-1.18.5"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "distributor",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "tempo"
                            }
                          },
                          "topologyKey": "topology.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "distributor",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "tempo"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "distributor",
                    "image": "docker.io/grafana/tempo:2.6.0",
                    "args": [
                      "-target=distributor",
                      "-config.file=/conf/tempo.yaml",
                      "-mem-ballast-size-mbs=1024"
                    ],
                    "ports": [
                      {
                        "name": "http-memberlist",
                        "containerPort": 7946,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-metrics",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      },
                      {
                        "name": "otlp-http",
                        "containerPort": 4318,
                        "protocol": "TCP"
                      },
                      {
                        "name": "grpc-otlp",
                        "containerPort": 4317,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/conf"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/runtime-config"
                      },
                      {
                        "name": "tempo-distributor-store",
                        "mountPath": "/var/tempo"
                      }
                    ],
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http-metrics",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "runAsUser": 1000,
                      "runAsGroup": 1000,
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": false,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 1000
                },
                "serviceAccount": "tempo",
                "serviceAccountName": "tempo",
                "terminationGracePeriodSeconds": 30,
                "topologySpreadConstraints": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/component": "distributor",
                        "app.kubernetes.io/instance": "obs",
                        "app.kubernetes.io/name": "tempo"
                      }
                    },
                    "maxSkew": 1,
                    "topologyKey": "topology.kubernetes.io/zone",
                    "whenUnsatisfiable": "ScheduleAnyway"
                  }
                ],
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "tempo.yaml",
                          "path": "tempo.yaml"
                        }
                      ],
                      "name": "tempo-config"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "overrides.yaml",
                          "path": "overrides.yaml"
                        }
                      ],
                      "name": "tempo-runtime"
                    },
                    "name": "runtime-config"
                  },
                  {
                    "emptyDir": {},
                    "name": "tempo-distributor-store"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/loki-distributed",
        "object": {
          "apiVersion": "v1",
          "data": {
            "config.yaml": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed",
            "namespace": "default",
            "resourceVersion": "1847165",
            "uid": "507af829-d5d8-45e0-bbcb-1a339421028a"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-gateway",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-gateway",
            "namespace": "default",
            "resourceVersion": "1847277",
            "uid": "ef95784d-d25f-4b40-bf5c-08dafeb30f43"
          },
          "spec": {
            "clusterIP": "10.96.16.11",
            "clusterIPs": [
              "10.96.16.11"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 80,
                "protocol": "TCP",
                "targetPort": "http"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/tempo-gossip-ring",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "gossip-ring",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-gossip-ring",
            "namespace": "default",
            "resourceVersion": "1847344",
            "uid": "cddf19f4-7d03-42e5-a042-ffb1fb0f3acf"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "gossip-ring",
                "port": 7946,
                "protocol": "TCP",
                "targetPort": 7946
              }
            ],
            "publishNotReadyAddresses": true,
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/part-of": "memberlist"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/Service/kube-dns",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "prometheus.io/port": "9153",
              "prometheus.io/scrape": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "labels": {
              "k8s-app": "kube-dns",
              "kubernetes.io/cluster-service": "true",
              "kubernetes.io/name": "CoreDNS"
            },
            "name": "kube-dns",
            "namespace": "kube-system",
            "resourceVersion": "273",
            "uid": "8c4114ae-de82-4683-b7db-9b14a6dca119"
          },
          "spec": {
            "clusterIP": "10.96.0.10",
            "clusterIPs": [
              "10.96.0.10"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "dns",
                "port": 53,
                "protocol": "UDP",
                "targetPort": 53
              },
              {
                "name": "dns-tcp",
                "port": 53,
                "protocol": "TCP",
                "targetPort": 53
              },
              {
                "name": "metrics",
                "port": 9153,
                "protocol": "TCP",
                "targetPort": 9153
              }
            ],
            "selector": {
              "k8s-app": "kube-dns"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/namespace-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "namespace-controller",
            "namespace": "kube-system",
            "resourceVersion": "262",
            "uid": "f231b655-a7f6-452e-900e-278d507d3bc8"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "resourcequota-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:resourcequota-controller",
                "resourceVersion": "206",
                "uid": "bfa7d12f-b88b-4163-abd4-43c22b827395"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:resourcequota-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "resourcequota-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:resourcequota-controller",
                "resourceVersion": "161",
                "uid": "c9420d18-8782-4d06-86a3-8bb147608232"
              },
              "rules": [
                {
                  "apiGroups": [
                    "*"
                  ],
                  "resources": [
                    "*"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "resourcequotas/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/service-account-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:service-account-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-account-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "service-account-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:service-account-controller",
                "resourceVersion": "208",
                "uid": "d010bf16-04ab-40df-a882-e8117b32feba"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:service-account-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "service-account-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:service-account-controller",
                "resourceVersion": "163",
                "uid": "8f8513c6-84b9-4aa0-9cde-706ae205f5b5"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "serviceaccounts"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "DaemonSet",
          "metadata": {
            "annotations": {
              "deprecated.daemonset.template.generation": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "fluent-bit",
              "app.kubernetes.io/version": "3.1.9",
              "helm.sh/chart": "fluent-bit-0.47.10"
            },
            "name": "fluent-bit",
            "namespace": "default",
            "resourceVersion": "1848439",
            "uid": "97f722c5-99c3-487f-a568-6e563a8cf503"
          },
          "spec": {
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "fluent-bit"
              }
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "9e90bb5ba38d6b3ed7dd1ac74d23934d8e8882426e398855024cc322788632c9"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "fluent-bit"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "fluent-bit",
                    "image": "cr.fluentbit.io/fluent/fluent-bit:3.1.9",
                    "command": [
                      "/fluent-bit/bin/fluent-bit"
                    ],
                    "args": [
                      "--workdir=/fluent-bit/etc",
                      "--config=/fluent-bit/etc/conf/fluent-bit.conf"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 2020,
                        "protocol": "TCP"
                      },
                      {
                        "name": "tcp",
                        "containerPort": 5170,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "100m",
                        "memory": "200Mi"
                      },
                      "requests": {
                        "cpu": "50m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/fluent-bit/etc/conf"
                      },
                      {
                        "name": "varlog",
                        "mountPath": "/var/log"
                      },
                      {
                        "name": "varlibdockercontainers",
                        "readOnly": true,
                        "mountPath": "/var/lib/docker/containers"
                      },
                      {
                        "name": "etcmachineid",
                        "readOnly": true,
                        "mountPath": "/etc/machine-id"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/api/v1/health",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "Always"
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "fluent-bit",
                "serviceAccountName": "fluent-bit",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "fluent-bit"
                    },
                    "name": "config"
                  },
                  {
                    "hostPath": {
                      "path": "/var/log",
                      "type": ""
                    },
                    "name": "varlog"
                  },
                  {
                    "hostPath": {
                      "path": "/var/lib/docker/containers",
                      "type": ""
                    },
                    "name": "varlibdockercontainers"
                  },
                  {
                    "hostPath": {
                      "path": "/etc/machine-id",
                      "type": "File"
                    },
                    "name": "etcmachineid"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            }
          }
        }
      },
      {
        "resourceID": "apps/v1/default/DaemonSet/node-agent",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "DaemonSet",
          "metadata": {
            "annotations": {
              "deprecated.daemonset.template.generation": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "generation": 1,
            "labels": {
              "app": "node-agent",
              "app.kubernetes.io/component": "node-agent",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "node-agent",
            "namespace": "default",
            "resourceVersion": "1847394",
            "uid": "0febdbc3-d6dc-4c24-bb81-30935ddad222"
          },
          "spec": {
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "node-agent",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kubescape-operator"
              }
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/cloud-config": "88e74b1cdcc9075461153f9aa4ab5da3ad67280c46f317c599b4121b694e5c93",
                  "checksum/cloud-secret": "36b7ef21453a679289d8e51039f840d6c88d703464bc85df56f53c43682e07a9",
                  "checksum/node-agent-config": "e2d3d201e973a83d9476078cd28b2a3cbda89510a0057ef1b2b485835c754490",
                  "container.apparmor.security.beta.kubernetes.io/node-agent": "unconfined",
                  "prometheus.io/path": "/metrics",
                  "prometheus.io/port": "8080",
                  "prometheus.io/scrape": "true"
                },
                "creationTimestamp": null,
                "labels": {
                  "app": "node-agent",
                  "app.kubernetes.io/component": "node-agent",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "kubescape.io/tier": "core",
                  "otel": "enabled",
                  "tier": "ks-control-plane"
                }
              },
              "spec": {
                "affinity": {
                  "nodeAffinity": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "nodeSelectorTerms": [
                        {
                          "matchExpressions": [
                            {
                              "key": "kubernetes.io/os",
                              "operator": "In",
                              "values": [
                                "linux"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "node-agent",
                    "image": "quay.io/kubescape/node-agent:v0.2.178",
                    "env": [
                      {
                        "name": "GOMEMLIMIT",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.memory",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOMAXPROCS",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.cpu",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "HOST_ROOT",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_LOGGER_LEVEL",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_LOGGER_NAME",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "OTEL_COLLECTOR_SVC",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "NODE_NAME",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "fieldRef": {
                            "apiVersion": "v1",
                            "fieldPath": "spec.nodeName"
                          }
                        }
                      },
                      {
                        "name": "POD_NAME",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "fieldRef": {
                            "apiVersion": "v1",
                            "fieldPath": "metadata.name"
                          }
                        }
                      },
                      {
                        "name": "NAMESPACE_NAME",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "fieldRef": {
                            "apiVersion": "v1",
                            "fieldPath": "metadata.namespace"
                          }
                        }
                      },
                      {
                        "name": "NodeName",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "500m",
                        "memory": "700Mi"
                      },
                      "requests": {
                        "cpu": "100m",
                        "memory": "180Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "host",
                        "mountPath": "/host"
                      },
                      {
                        "name": "run",
                        "mountPath": "/run"
                      },
                      {
                        "name": "modules",
                        "mountPath": "/lib/modules"
                      },
                      {
                        "name": "debugfs",
                        "mountPath": "/sys/kernel/debug"
                      },
                      {
                        "name": "cgroup",
                        "mountPath": "/sys/fs/cgroup"
                      },
                      {
                        "name": "bpffs",
                        "mountPath": "/sys/fs/bpf"
                      },
                      {
                        "name": "data",
                        "mountPath": "/data"
                      },
                      {
                        "name": "clamrun",
                        "mountPath": "/clamav"
                      },
                      {
                        "name": "cloud-secret",
                        "readOnly": true,
                        "mountPath": "/etc/credentials"
                      },
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config/clusterData.json",
                        "subPath": "clusterData.json"
                      },
                      {
                        "name": "config",
                        "readOnly": true,
                        "mountPath": "/etc/config/config.json",
                        "subPath": "config.json"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/livez",
                        "port": 7888,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 60,
                      "timeoutSeconds": 1,
                      "periodSeconds": 3,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/readyz",
                        "port": 7888,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 3,
                      "timeoutSeconds": 1,
                      "periodSeconds": 3,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "add": [
                          "SYS_ADMIN",
                          "SYS_PTRACE",
                          "NET_ADMIN",
                          "SYSLOG",
                          "SYS_RESOURCE",
                          "IPC_LOCK",
                          "NET_RAW"
                        ]
                      },
                      "privileged": false,
                      "seLinuxOptions": {
                        "type": "spc_t"
                      },
                      "runAsUser": 0
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "hostPID": true,
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "priorityClassName": "kubescape-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "node-agent",
                "serviceAccountName": "node-agent",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "hostPath": {
                      "path": "/",
                      "type": ""
                    },
                    "name": "host"
                  },
                  {
                    "hostPath": {
                      "path": "/run",
                      "type": ""
                    },
                    "name": "run"
                  },
                  {
                    "hostPath": {
                      "path": "/sys/fs/cgroup",
                      "type": ""
                    },
                    "name": "cgroup"
                  },
                  {
                    "hostPath": {
                      "path": "/lib/modules",
                      "type": ""
                    },
                    "name": "modules"
                  },
                  {
                    "hostPath": {
                      "path": "/sys/fs/bpf",
                      "type": ""
                    },
                    "name": "bpffs"
                  },
                  {
                    "hostPath": {
                      "path": "/sys/kernel/debug",
                      "type": ""
                    },
                    "name": "debugfs"
                  },
                  {
                    "emptyDir": {},
                    "name": "data"
                  },
                  {
                    "emptyDir": {},
                    "name": "clamdb"
                  },
                  {
                    "emptyDir": {},
                    "name": "clamrun"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "clamd.conf",
                          "path": "clamd.conf"
                        },
                        {
                          "key": "freshclam.conf",
                          "path": "freshclam.conf"
                        }
                      ],
                      "name": "clamav"
                    },
                    "name": "etc"
                  },
                  {
                    "name": "cloud-secret",
                    "secret": {
                      "defaultMode": 420,
                      "secretName": "cloud-secret"
                    }
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "clusterData",
                          "path": "clusterData.json"
                        },
                        {
                          "key": "services",
                          "path": "services.json"
                        }
                      ],
                      "name": "ks-cloud-config"
                    },
                    "name": "ks-cloud-config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "config.json",
                          "path": "config.json"
                        }
                      ],
                      "name": "node-agent"
                    },
                    "name": "config"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            }
          }
        }
      },
      {
        "resourceID": "/v1/kube-public/ConfigMap/kube-root-ca.crt",
        "object": {
          "apiVersion": "v1",
          "data": {
            "ca.crt": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
            },
            "creationTimestamp": "2024-09-25T04:19:56Z",
            "name": "kube-root-ca.crt",
            "namespace": "kube-public",
            "resourceVersion": "317",
            "uid": "52912719-ae3c-4cfb-b9b2-a982a21a5989"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/extension-apiserver-authentication",
        "object": {
          "apiVersion": "v1",
          "data": {
            "client-ca-file": "XXXXXX",
            "requestheader-allowed-names": "XXXXXX",
            "requestheader-client-ca-file": "XXXXXX",
            "requestheader-extra-headers-prefix": "XXXXXX",
            "requestheader-group-headers": "XXXXXX",
            "requestheader-username-headers": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:48Z",
            "name": "extension-apiserver-authentication",
            "namespace": "kube-system",
            "resourceVersion": "24",
            "uid": "4c00b105-469b-4b78-8a89-12c87a50a91b"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslicemirroring-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:endpointslicemirroring-controller",
            "resourceVersion": "194",
            "uid": "46c5d66a-9cc8-4d89-93db-28ffe6684165"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:endpointslicemirroring-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "endpointslicemirroring-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/alloy",
        "object": {
          "apiVersion": "v1",
          "data": {
            "config.alloy": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/component": "config",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alloy",
              "app.kubernetes.io/part-of": "alloy",
              "app.kubernetes.io/version": "v1.4.2",
              "helm.sh/chart": "alloy-0.9.1"
            },
            "name": "alloy",
            "namespace": "default",
            "resourceVersion": "1847147",
            "uid": "f6339d00-b86c-4bbd-85f0-214ae30408c9"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/tempo-querier",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:55Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "querier",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/part-of": "memberlist",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-querier",
            "namespace": "default",
            "resourceVersion": "1848349",
            "uid": "56b89862-40d6-4ae5-aaeb-f8357950929b"
          },
          "spec": {
            "minReadySeconds": 10,
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "querier",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "tempo"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "9d41dbb2e1e83f92fb6f56997bd79a1cb538e23a39fe246d44cfd878ca8114c7"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "querier",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "tempo",
                  "app.kubernetes.io/part-of": "memberlist",
                  "app.kubernetes.io/version": "2.6.0",
                  "helm.sh/chart": "tempo-distributed-1.18.5"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "querier",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "tempo"
                            }
                          },
                          "topologyKey": "topology.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "querier",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "tempo"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "querier",
                    "image": "docker.io/grafana/tempo:2.6.0",
                    "args": [
                      "-target=querier",
                      "-config.file=/conf/tempo.yaml",
                      "-mem-ballast-size-mbs=1024"
                    ],
                    "ports": [
                      {
                        "name": "http-memberlist",
                        "containerPort": 7946,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-metrics",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/conf"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/runtime-config"
                      },
                      {
                        "name": "tempo-querier-store",
                        "mountPath": "/var/tempo"
                      }
                    ],
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http-metrics",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "runAsUser": 1000,
                      "runAsGroup": 1000,
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": false,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 1000
                },
                "serviceAccount": "tempo",
                "serviceAccountName": "tempo",
                "terminationGracePeriodSeconds": 30,
                "topologySpreadConstraints": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/component": "querier",
                        "app.kubernetes.io/instance": "obs",
                        "app.kubernetes.io/name": "tempo"
                      }
                    },
                    "maxSkew": 1,
                    "topologyKey": "topology.kubernetes.io/zone",
                    "whenUnsatisfiable": "ScheduleAnyway"
                  }
                ],
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "tempo.yaml",
                          "path": "tempo.yaml"
                        }
                      ],
                      "name": "tempo-config"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "overrides.yaml",
                          "path": "overrides.yaml"
                        }
                      ],
                      "name": "tempo-runtime"
                    },
                    "name": "runtime-config"
                  },
                  {
                    "emptyDir": {},
                    "name": "tempo-querier-store"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "apps/v1/default/StatefulSet/loki-distributed-ingester",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "StatefulSet",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:58Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "ingester",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/part-of": "memberlist",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-ingester",
            "namespace": "default",
            "resourceVersion": "1848319",
            "uid": "f365ec58-a67f-49d9-8e47-9f47115529ac"
          },
          "spec": {
            "persistentVolumeClaimRetentionPolicy": {
              "whenDeleted": "Retain",
              "whenScaled": "Retain"
            },
            "podManagementPolicy": "Parallel",
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "ingester",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              }
            },
            "serviceName": "loki-distributed-ingester-headless",
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "3d2b043c06f24b69bffc86a7dc505b6da51eaf8dd861673ca393d411e8c73eab"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "ingester",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "loki-distributed",
                  "app.kubernetes.io/part-of": "memberlist"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "ingester",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "loki-distributed"
                            }
                          },
                          "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "ingester",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "loki-distributed"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "ingester",
                    "image": "docker.io/grafana/loki:2.9.10",
                    "args": [
                      "-config.file=/etc/loki/config/config.yaml",
                      "-target=ingester"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      },
                      {
                        "name": "grpc",
                        "containerPort": 9095,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-memberlist",
                        "containerPort": 7946,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/loki/config"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/var/loki-distributed-runtime"
                      },
                      {
                        "name": "data",
                        "mountPath": "/var/loki"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 300,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 10001,
                  "runAsGroup": 10001,
                  "runAsNonRoot": true,
                  "runAsUser": 10001
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 300,
                "topologySpreadConstraints": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/component": "ingester",
                        "app.kubernetes.io/instance": "obs",
                        "app.kubernetes.io/name": "loki-distributed"
                      }
                    },
                    "maxSkew": 1,
                    "topologyKey": "kubernetes.io/hostname",
                    "whenUnsatisfiable": "ScheduleAnyway"
                  }
                ],
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed-runtime"
                    },
                    "name": "runtime-config"
                  },
                  {
                    "emptyDir": {
                      "medium": "Memory"
                    },
                    "name": "data"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "partition": 0
              },
              "type": "RollingUpdate"
            }
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/tempo-query-frontend",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:56Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "query-frontend",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-query-frontend",
            "namespace": "default",
            "resourceVersion": "1848149",
            "uid": "29598bb8-636c-405e-a79b-1641295973bd"
          },
          "spec": {
            "minReadySeconds": 10,
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "query-frontend",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "tempo"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "9d41dbb2e1e83f92fb6f56997bd79a1cb538e23a39fe246d44cfd878ca8114c7"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "query-frontend",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "tempo",
                  "app.kubernetes.io/version": "2.6.0",
                  "helm.sh/chart": "tempo-distributed-1.18.5"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "query-frontend",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "tempo"
                            }
                          },
                          "topologyKey": "topology.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "query-frontend",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "tempo"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "query-frontend",
                    "image": "docker.io/grafana/tempo:2.6.0",
                    "args": [
                      "-target=query-frontend",
                      "-config.file=/conf/tempo.yaml",
                      "-mem-ballast-size-mbs=1024"
                    ],
                    "ports": [
                      {
                        "name": "http-metrics",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      },
                      {
                        "name": "grpc",
                        "containerPort": 9095,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/conf"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/runtime-config"
                      },
                      {
                        "name": "tempo-queryfrontend-store",
                        "mountPath": "/var/tempo"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "runAsUser": 1000,
                      "runAsGroup": 1000,
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": false,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 1000
                },
                "serviceAccount": "tempo",
                "serviceAccountName": "tempo",
                "terminationGracePeriodSeconds": 30,
                "topologySpreadConstraints": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/component": "query-frontend",
                        "app.kubernetes.io/instance": "obs",
                        "app.kubernetes.io/name": "tempo"
                      }
                    },
                    "maxSkew": 1,
                    "topologyKey": "topology.kubernetes.io/zone",
                    "whenUnsatisfiable": "ScheduleAnyway"
                  }
                ],
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "tempo.yaml",
                          "path": "tempo.yaml"
                        }
                      ],
                      "name": "tempo-config"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "overrides.yaml",
                          "path": "overrides.yaml"
                        }
                      ],
                      "name": "tempo-runtime"
                    },
                    "name": "runtime-config"
                  },
                  {
                    "emptyDir": {},
                    "name": "tempo-queryfrontend-store"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage:system:auth-delegator",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "storage",
              "app.kubernetes.io/component": "storage",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "storage:system:auth-delegator",
            "resourceVersion": "1847195",
            "uid": "9ad611fb-6464-49e9-8d07-26589cb07cfb"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:auth-delegator"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "storage",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:bootstrap-signer",
            "namespace": "kube-public",
            "resourceVersion": "232",
            "uid": "d137bd34-5d36-465c-8431-90d5dcb903d9"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "system:controller:bootstrap-signer"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "bootstrap-signer",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/gateway",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app": "gateway",
              "app.kubernetes.io/component": "gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "gateway",
            "namespace": "default",
            "resourceVersion": "1847233",
            "uid": "2208ac3a-fbc5-4d8a-b50d-a3b64dfeff09"
          },
          "spec": {
            "clusterIP": "10.110.114.186",
            "clusterIPs": [
              "10.110.114.186"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "websocket",
                "port": 8001,
                "protocol": "TCP",
                "targetPort": 8001
              },
              {
                "name": "http",
                "port": 8002,
                "protocol": "TCP",
                "targetPort": 8002
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "kubescape-operator"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1//Namespace/kube-system",
        "object": {
          "apiVersion": "v1",
          "kind": "Namespace",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:48Z",
            "labels": {
              "kubernetes.io/metadata.name": "kube-system"
            },
            "name": "kube-system",
            "resourceVersion": "5",
            "uid": "87c140b8-15ea-4529-a878-3cbe3ac9dbd1"
          },
          "spec": {
            "finalizers": [
              "kubernetes"
            ]
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/storage",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:54Z",
            "generation": 1,
            "labels": {
              "app": "storage",
              "app.kubernetes.io/component": "storage",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/part-of": "kubescape-storage",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "storage",
            "namespace": "default",
            "resourceVersion": "1849194",
            "uid": "f7ce8370-2d63-4085-915f-d252f0c7b861"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 2,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "storage",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kubescape-operator"
              }
            },
            "strategy": {
              "type": "Recreate"
            },
            "template": {
              "metadata": {
                "creationTimestamp": null,
                "labels": {
                  "app": "storage",
                  "app.kubernetes.io/component": "storage",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/part-of": "kubescape-storage",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "kubescape.io/tier": "core",
                  "otel": "enabled",
                  "tier": "ks-control-plane"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "apiserver",
                    "image": "quay.io/kubescape/storage:v0.0.140",
                    "env": [
                      {
                        "name": "CLEANUP_INTERVAL",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "GOMEMLIMIT",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.memory",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOMAXPROCS",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.cpu",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "KS_LOGGER_LEVEL",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_LOGGER_NAME",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "ACCOUNT_ID",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "cloud-secret",
                            "key": "account"
                          }
                        }
                      },
                      {
                        "name": "OTEL_COLLECTOR_SVC",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "DISABLE_VIRTUAL_CRDS",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "1500m",
                        "memory": "1500Mi"
                      },
                      "requests": {
                        "cpu": "100m",
                        "memory": "400Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "data",
                        "mountPath": "/data"
                      },
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config"
                      }
                    ],
                    "livenessProbe": {
                      "tcpSocket": {
                        "port": 8443
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "tcpSocket": {
                        "port": 8443
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "runAsNonRoot": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65532,
                  "runAsUser": 65532
                },
                "serviceAccount": "storage",
                "serviceAccountName": "storage",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "name": "data",
                    "persistentVolumeClaim": {
                      "claimName": "kubescape-storage"
                    }
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "clusterData",
                          "path": "clusterData.json"
                        },
                        {
                          "key": "services",
                          "path": "services.json"
                        }
                      ],
                      "name": "ks-cloud-config"
                    },
                    "name": "ks-cloud-config"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/registry-scan-cronjob-template",
        "object": {
          "apiVersion": "v1",
          "data": {
            "cronjobTemplate": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "ks-cloud-config",
              "app.kubernetes.io/component": "ks-cloud-config",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "registry-scan-cronjob-template",
            "namespace": "default",
            "resourceVersion": "1847162",
            "uid": "41633ce3-4b9d-424f-9959-10c6183e7f97"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:replicaset-controller",
            "resourceVersion": "204",
            "uid": "369ac5e4-b9a5-4847-b25d-c6b6922e7cad"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:replicaset-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "replicaset-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:generic-garbage-collector",
            "resourceVersion": "197",
            "uid": "bdbc48d9-578c-407e-a10e-eaaa75c96012"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:generic-garbage-collector"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "generic-garbage-collector",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app": "synchronizer",
              "app.kubernetes.io/component": "synchronizer",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "synchronizer",
            "namespace": "default",
            "resourceVersion": "1847209",
            "uid": "5ecbf30c-0f5f-45b3-ba6d-d672a6159519"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "synchronizer"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "synchronizer",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "storage",
              "app.kubernetes.io/component": "storage",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "storage",
            "resourceVersion": "1847196",
            "uid": "1f8f87f9-4e3d-4957-b1bd-c96a0b9c210d"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "storage"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "storage",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/grafana",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "grafana",
              "app.kubernetes.io/version": "11.2.1",
              "helm.sh/chart": "grafana-8.5.2"
            },
            "name": "grafana",
            "namespace": "default",
            "resourceVersion": "1847229",
            "uid": "55641b8e-8051-4844-bd4a-6b2e041e1e83"
          },
          "spec": {
            "clusterIP": "10.111.104.89",
            "clusterIPs": [
              "10.111.104.89"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "service",
                "port": 80,
                "protocol": "TCP",
                "targetPort": 3000
              }
            ],
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "grafana"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-index-gateway-headless",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "index-gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "prometheus.io/service-monitor": "false"
            },
            "name": "loki-distributed-index-gateway-headless",
            "namespace": "default",
            "resourceVersion": "1847280",
            "uid": "97d8df9e-f606-4092-9c8c-4903ec9bcd8b"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http"
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": "grpc"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "index-gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/StatefulSet/alertmanager",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "StatefulSet",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:57Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alertmanager",
              "app.kubernetes.io/version": "v0.27.0",
              "helm.sh/chart": "alertmanager-1.13.1"
            },
            "name": "alertmanager",
            "namespace": "default",
            "resourceVersion": "1848071",
            "uid": "59ec6df3-7019-47d0-bd27-fdf80d491dae"
          },
          "spec": {
            "persistentVolumeClaimRetentionPolicy": {
              "whenDeleted": "Retain",
              "whenScaled": "Retain"
            },
            "podManagementPolicy": "OrderedReady",
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "alertmanager"
              }
            },
            "serviceName": "alertmanager-headless",
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "bdef769b7d14f3cb0d46bea13310586fd2cd0abdb63c1f33260f7a8f24a9db6f"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "alertmanager"
                }
              },
              "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "alertmanager",
                    "image": "quay.io/prometheus/alertmanager:v0.27.0",
                    "args": [
                      "--storage.path=/alertmanager",
                      "--config.file=/etc/alertmanager/alertmanager.yml"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 9093,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "POD_IP",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "fieldRef": {
                            "apiVersion": "v1",
                            "fieldPath": "status.podIP"
                          }
                        }
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/alertmanager"
                      },
                      {
                        "name": "storage",
                        "mountPath": "/alertmanager"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "runAsUser": 65534,
                      "runAsGroup": 65534,
                      "runAsNonRoot": true
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65534
                },
                "serviceAccount": "alertmanager",
                "serviceAccountName": "alertmanager",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "alertmanager"
                    },
                    "name": "config"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "partition": 0
              },
              "type": "RollingUpdate"
            },
            "volumeClaimTemplates": [
              {
                "apiVersion": "v1",
                "kind": "PersistentVolumeClaim",
                "metadata": {
                  "creationTimestamp": null,
                  "name": "storage"
                },
                "spec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "50Mi"
                    }
                  },
                  "volumeMode": "Filesystem"
                },
                "status": {
                  "phase": "Pending"
                }
              }
            ]
          }
        }
      },
      {
        "resourceID": "/default/StatefulSet/alloy",
        "object": {
          "kind": "StatefulSet",
          "name": "alloy",
          "namespace": "default",
          "relatedObjects": {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
              "annotations": {
                "meta.helm.sh/release-name": "obs",
                "meta.helm.sh/release-namespace": "default"
              },
              "creationTimestamp": "2024-11-29T06:19:52Z",
              "labels": {
                "app.kubernetes.io/component": "networking",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "alloy",
                "app.kubernetes.io/part-of": "alloy",
                "app.kubernetes.io/version": "v1.4.2",
                "helm.sh/chart": "alloy-0.9.1"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:meta.helm.sh/release-name": {},
                        "f:meta.helm.sh/release-namespace": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:app.kubernetes.io/component": {},
                        "f:app.kubernetes.io/instance": {},
                        "f:app.kubernetes.io/managed-by": {},
                        "f:app.kubernetes.io/name": {},
                        "f:app.kubernetes.io/part-of": {},
                        "f:app.kubernetes.io/version": {},
                        "f:helm.sh/chart": {}
                      }
                    },
                    "f:spec": {
                      "f:internalTrafficPolicy": {},
                      "f:ports": {
                        ".": {},
                        "k:{\"port\":12345,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        },
                        "k:{\"port\":4318,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        },
                        "k:{\"port\":4323,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        }
                      },
                      "f:selector": {},
                      "f:sessionAffinity": {},
                      "f:type": {}
                    }
                  },
                  "manager": "helm",
                  "operation": "Update",
                  "time": "2024-11-29T06:19:52Z"
                }
              ],
              "name": "alloy",
              "namespace": "default",
              "resourceVersion": "1847221",
              "uid": "99eacc15-747d-4684-acb3-8a2181aa2629"
            },
            "spec": {
              "clusterIP": "10.107.209.72",
              "clusterIPs": [
                "10.107.209.72"
              ],
              "internalTrafficPolicy": "Cluster",
              "ipFamilies": [
                "IPv4"
              ],
              "ipFamilyPolicy": "SingleStack",
              "ports": [
                {
                  "name": "http-metrics",
                  "port": 12345,
                  "protocol": "TCP",
                  "targetPort": 12345
                },
                {
                  "name": "grpc",
                  "port": 4323,
                  "protocol": "TCP",
                  "targetPort": 4323
                },
                {
                  "name": "otel-http",
                  "port": 4318,
                  "protocol": "TCP",
                  "targetPort": 4318
                }
              ],
              "selector": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "alloy"
              },
              "sessionAffinity": "None",
              "type": "ClusterIP"
            },
            "status": {
              "loadBalancer": {}
            }
          }
        }
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/loki-distributed-ingress-metrics",
        "object": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "NetworkPolicy",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-ingress-metrics",
            "namespace": "default",
            "resourceVersion": "1847119",
            "uid": "ad75b355-7ac8-404a-9818-3beff94d84ce"
          },
          "spec": {
            "ingress": [
              {
                "ports": [
                  {
                    "port": "http-metrics",
                    "protocol": "TCP"
                  }
                ]
              }
            ],
            "podSelector": {
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              }
            },
            "policyTypes": [
              "Ingress"
            ]
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/prometheus-exporter",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app": "prometheus-exporter",
              "app.kubernetes.io/component": "prometheus-exporter",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "prometheus-exporter",
            "namespace": "default",
            "resourceVersion": "1847257",
            "uid": "a4d390b6-777b-48b3-9e63-cd1546c52db1"
          },
          "spec": {
            "clusterIP": "10.110.11.4",
            "clusterIPs": [
              "10.110.11.4"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "port": 8080,
                "protocol": "TCP",
                "targetPort": 8080
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "prometheus-exporter",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "kubescape-operator"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/prometheus-pushgateway",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default",
              "prometheus.io/probe": "pushgateway"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/version": "v1.9.0",
              "helm.sh/chart": "prometheus-pushgateway-2.14.0"
            },
            "name": "prometheus-pushgateway",
            "namespace": "default",
            "resourceVersion": "1847322",
            "uid": "c9721373-aedb-4f14-b155-0f26f7d98f35"
          },
          "spec": {
            "clusterIP": "10.99.204.218",
            "clusterIPs": [
              "10.99.204.218"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 9091,
                "protocol": "TCP",
                "targetPort": 9091
              }
            ],
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "prometheus"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/otel-collector",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app": "otel-collector",
              "app.kubernetes.io/component": "otel-collector",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "otel-collector",
            "namespace": "default",
            "resourceVersion": "1847253",
            "uid": "61679185-08de-4a7e-b8fc-290db9e2459d"
          },
          "spec": {
            "clusterIP": "10.106.19.30",
            "clusterIPs": [
              "10.106.19.30"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "otlp",
                "port": 4317,
                "protocol": "TCP",
                "targetPort": 4317
              },
              {
                "name": "otlp-http",
                "port": 4318,
                "protocol": "TCP",
                "targetPort": 4318
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "otel-collector",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "kubescape-operator"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/kube-dns/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-dns/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-dns",
        "object": {
          "kind": "ServiceAccount",
          "name": "kube-dns",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-dns",
                "resourceVersion": "181",
                "uid": "89ea6da3-6d2e-4e91-a031-ef3fbd84541a"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:kube-dns"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "kube-dns",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-dns",
                "resourceVersion": "129",
                "uid": "4f310a83-f729-4773-9b56-b4c5359156bb"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints",
                    "services"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "apps/v1/default/StatefulSet/alloy",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "StatefulSet",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:57Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alloy",
              "app.kubernetes.io/part-of": "alloy",
              "app.kubernetes.io/version": "v1.4.2",
              "helm.sh/chart": "alloy-0.9.1"
            },
            "name": "alloy",
            "namespace": "default",
            "resourceVersion": "1848187",
            "uid": "ea23b634-37d3-469a-9372-ffba3e9f97a4"
          },
          "spec": {
            "minReadySeconds": 10,
            "persistentVolumeClaimRetentionPolicy": {
              "whenDeleted": "Retain",
              "whenScaled": "Retain"
            },
            "podManagementPolicy": "Parallel",
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "alloy"
              }
            },
            "serviceName": "alloy",
            "template": {
              "metadata": {
                "annotations": {
                  "kubectl.kubernetes.io/default-container": "alloy"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "alloy"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "alloy",
                    "image": "docker.io/grafana/alloy:v1.4.2",
                    "args": [
                      "run",
                      "/etc/alloy/config.alloy",
                      "--storage.path=/tmp/alloy",
                      "--server.http.listen-addr=0.0.0.0:12345",
                      "--server.http.ui-path-prefix=/",
                      "--cluster.enabled=true",
                      "--cluster.join-addresses=alloy-cluster",
                      "--stability.level=generally-available"
                    ],
                    "ports": [
                      {
                        "name": "http-metrics",
                        "containerPort": 12345,
                        "protocol": "TCP"
                      },
                      {
                        "name": "grpc",
                        "containerPort": 4323,
                        "protocol": "TCP"
                      },
                      {
                        "name": "otel-http",
                        "containerPort": 4318,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "ALLOY_DEPLOY_MODE",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "HOSTNAME",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "fieldRef": {
                            "apiVersion": "v1",
                            "fieldPath": "spec.nodeName"
                          }
                        }
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/alloy"
                      }
                    ],
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/-/ready",
                        "port": 12345,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                  },
                  {
                    "name": "config-reloader",
                    "image": "ghcr.io/jimmidyson/configmap-reload:v0.12.0",
                    "args": [
                      "--volume-dir=/etc/alloy",
                      "--webhook-url=http://localhost:12345/-/reload"
                    ],
                    "resources": {
                      "requests": {
                        "cpu": "1m",
                        "memory": "5Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/alloy"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "alloy",
                "serviceAccountName": "alloy",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "alloy"
                    },
                    "name": "config"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "partition": 0
              },
              "type": "RollingUpdate"
            }
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/loki-distributed-runtime",
        "object": {
          "apiVersion": "v1",
          "data": {
            "runtime.yaml": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-runtime",
            "namespace": "default",
            "resourceVersion": "1847167",
            "uid": "119de69d-3938-45bd-adeb-02cd914ba3d3"
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/ks-capabilities",
        "object": {
          "apiVersion": "v1",
          "data": {
            "capabilities": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "ks-capabilities",
              "app.kubernetes.io/component": "ks-capabilities",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "ks-capabilities",
            "namespace": "default",
            "resourceVersion": "1847152",
            "uid": "aaf41335-73fd-4b9c-8abc-45acf1c9b1cf"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/node-agent",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app": "node-agent",
              "app.kubernetes.io/component": "node-agent",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "node-agent",
            "namespace": "default",
            "resourceVersion": "1847245",
            "uid": "c747dca3-8c30-4cff-820a-4cd20ade4785"
          },
          "spec": {
            "clusterIP": "10.103.148.54",
            "clusterIPs": [
              "10.103.148.54"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "prometheus",
                "port": 8080,
                "protocol": "TCP",
                "targetPort": 8080
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "node-agent",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "kubescape-operator"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/deployment-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "deployment-controller",
            "namespace": "kube-system",
            "resourceVersion": "265",
            "uid": "617b98c5-a106-432b-b7f4-fb4373e677f4"
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/prometheus-server",
        "object": {
          "apiVersion": "v1",
          "data": {
            "alerting_rules.yml": "XXXXXX",
            "alerts": "XXXXXX",
            "allow-snippet-annotations": "XXXXXX",
            "prometheus.yml": "XXXXXX",
            "recording_rules.yml": "XXXXXX",
            "rules": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/part-of": "prometheus",
              "app.kubernetes.io/version": "v2.54.1",
              "helm.sh/chart": "prometheus-25.27.0"
            },
            "name": "prometheus-server",
            "namespace": "default",
            "resourceVersion": "1847170",
            "uid": "72b8d53c-c9d5-46af-899f-168acef8a622"
          }
        }
      },
      {
        "resourceID": "/default/Deployment/loki-distributed-gateway",
        "object": {
          "kind": "Deployment",
          "name": "loki-distributed-gateway",
          "namespace": "default",
          "relatedObjects": {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
              "annotations": {
                "meta.helm.sh/release-name": "obs",
                "meta.helm.sh/release-namespace": "default"
              },
              "creationTimestamp": "2024-11-29T06:19:52Z",
              "labels": {
                "app.kubernetes.io/component": "gateway",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "loki-distributed",
                "app.kubernetes.io/version": "2.9.10",
                "helm.sh/chart": "loki-distributed-0.79.4"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:meta.helm.sh/release-name": {},
                        "f:meta.helm.sh/release-namespace": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:app.kubernetes.io/component": {},
                        "f:app.kubernetes.io/instance": {},
                        "f:app.kubernetes.io/managed-by": {},
                        "f:app.kubernetes.io/name": {},
                        "f:app.kubernetes.io/version": {},
                        "f:helm.sh/chart": {}
                      }
                    },
                    "f:spec": {
                      "f:internalTrafficPolicy": {},
                      "f:ports": {
                        ".": {},
                        "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        }
                      },
                      "f:selector": {},
                      "f:sessionAffinity": {},
                      "f:type": {}
                    }
                  },
                  "manager": "helm",
                  "operation": "Update",
                  "time": "2024-11-29T06:19:52Z"
                }
              ],
              "name": "loki-distributed-gateway",
              "namespace": "default",
              "resourceVersion": "1847277",
              "uid": "ef95784d-d25f-4b40-bf5c-08dafeb30f43"
            },
            "spec": {
              "clusterIP": "10.96.16.11",
              "clusterIPs": [
                "10.96.16.11"
              ],
              "internalTrafficPolicy": "Cluster",
              "ipFamilies": [
                "IPv4"
              ],
              "ipFamilyPolicy": "SingleStack",
              "ports": [
                {
                  "name": "http",
                  "port": 80,
                  "protocol": "TCP",
                  "targetPort": "http"
                }
              ],
              "selector": {
                "app.kubernetes.io/component": "gateway",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              },
              "sessionAffinity": "None",
              "type": "ClusterIP"
            },
            "status": {
              "loadBalancer": {}
            }
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/otel-collector",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app": "otel-collector",
              "app.kubernetes.io/component": "otel-collector",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "otel-collector",
            "namespace": "default",
            "resourceVersion": "1847135",
            "uid": "5596f5b0-0972-4bc4-b6d7-f43e4aa459d0"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/expand-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:54Z",
            "name": "expand-controller",
            "namespace": "kube-system",
            "resourceVersion": "303",
            "uid": "f4babe2f-facb-4e98-9050-d430b9fb622e"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/pvc-protection-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:53Z",
            "name": "pvc-protection-controller",
            "namespace": "kube-system",
            "resourceVersion": "299",
            "uid": "e97d301c-7c02-433f-a456-e106765dc5e4"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "node-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:node-controller",
                "resourceVersion": "201",
                "uid": "32a7b3ae-874f-4081-8413-baa12d82ed89"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:node-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "node-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:node-controller",
                "resourceVersion": "156",
                "uid": "3d46547f-7a82-4108-ae5c-4ee845f89bed"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "delete",
                    "get",
                    "list",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes/status"
                  ],
                  "verbs": [
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods/status"
                  ],
                  "verbs": [
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "delete",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-account-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:service-account-controller",
            "resourceVersion": "208",
            "uid": "d010bf16-04ab-40df-a882-e8117b32feba"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:service-account-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "service-account-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-querier",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "querier",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-querier",
            "namespace": "default",
            "resourceVersion": "1847295",
            "uid": "11ae0f81-5701-4a0f-9a92-01b69f00df1e"
          },
          "spec": {
            "clusterIP": "10.98.21.246",
            "clusterIPs": [
              "10.98.21.246"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http"
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": "grpc"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "querier",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/tempo-distributor",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "distributor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-distributor",
            "namespace": "default",
            "resourceVersion": "1847341",
            "uid": "2cab4b6b-278b-421f-bbf9-0a96c21c61d6"
          },
          "spec": {
            "clusterIP": "10.108.92.251",
            "clusterIPs": [
              "10.108.92.251"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http-metrics",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http-metrics"
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": 9095
              },
              {
                "name": "distributor-otlp-http",
                "port": 4318,
                "protocol": "TCP",
                "targetPort": "otlp-http"
              },
              {
                "name": "grpc-distributor-otlp",
                "port": 4317,
                "protocol": "TCP",
                "targetPort": "grpc-otlp"
              },
              {
                "name": "distributor-otlp-legacy",
                "port": 55680,
                "protocol": "TCP",
                "targetPort": "grpc-otlp"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "distributor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "tempo"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/resourcequota-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:52Z",
            "name": "resourcequota-controller",
            "namespace": "kube-system",
            "resourceVersion": "281",
            "uid": "52ddbb18-8212-4aff-bd25-c835a039249c"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/endpointslicemirroring-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpointslicemirroring-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslicemirroring-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "endpointslicemirroring-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpointslicemirroring-controller",
                "resourceVersion": "194",
                "uid": "46c5d66a-9cc8-4d89-93db-28ffe6684165"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:endpointslicemirroring-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "endpointslicemirroring-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpointslicemirroring-controller",
                "resourceVersion": "149",
                "uid": "0e935c81-cf4e-4309-bf9e-a82a11ca7465"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints",
                    "services"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "services/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "discovery.k8s.io"
                  ],
                  "resources": [
                    "endpointslices"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/validatingadmissionpolicy-status-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:validatingadmissionpolicy-status-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:validatingadmissionpolicy-status-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "validatingadmissionpolicy-status-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:validatingadmissionpolicy-status-controller",
                "resourceVersion": "217",
                "uid": "af1499dd-45fc-4e46-8288-78aae78afdf0"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:validatingadmissionpolicy-status-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "validatingadmissionpolicy-status-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:validatingadmissionpolicy-status-controller",
                "resourceVersion": "172",
                "uid": "27404bc2-4193-409e-b0e4-d4847fafa467"
              },
              "rules": [
                {
                  "apiGroups": [
                    "admissionregistration.k8s.io"
                  ],
                  "resources": [
                    "validatingadmissionpolicies"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "admissionregistration.k8s.io"
                  ],
                  "resources": [
                    "validatingadmissionpolicies/status"
                  ],
                  "verbs": [
                    "get",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "batch/v1/default/CronJob/kubescape-scheduler",
        "object": {
          "apiVersion": "batch/v1",
          "kind": "CronJob",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:59Z",
            "generation": 1,
            "labels": {
              "app": "kubescape-scheduler",
              "app.kubernetes.io/component": "kubescape-scheduler",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "armo.tier": "kubescape-scan",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "kubescape-scheduler",
            "namespace": "default",
            "resourceVersion": "1847744",
            "uid": "812048ce-cd76-4e2f-8808-f5a12c249f63"
          },
          "spec": {
            "concurrencyPolicy": "Allow",
            "failedJobsHistoryLimit": 1,
            "jobTemplate": {
              "metadata": {
                "creationTimestamp": null
              },
              "spec": {
                "template": {
                  "metadata": {
                    "creationTimestamp": null,
                    "labels": {
                      "app": "kubescape-scheduler",
                      "app.kubernetes.io/component": "kubescape-scheduler",
                      "app.kubernetes.io/instance": "obs",
                      "app.kubernetes.io/managed-by": "Helm",
                      "app.kubernetes.io/name": "kubescape-operator",
                      "app.kubernetes.io/version": "1.23.2",
                      "armo.tier": "kubescape-scan",
                      "helm.sh/chart": "kubescape-operator-1.23.2",
                      "kubescape.io/ignore": "true",
                      "kubescape.io/tier": "core",
                      "tier": "ks-control-plane"
                    }
                  },
                  "spec": {
                    "automountServiceAccountToken": false,
                    "containers": [
                      {
                        "name": "kubescape-scheduler",
                        "image": "quay.io/kubescape/http-request:v0.2.9",
                        "args": [
                          "-method=post",
                          "-scheme=http",
                          "-host=operator:4002",
                          "-path=v1/triggerAction",
                          "-headers=Content-Type:application/json",
                          "-path-body=/home/ks/request-body.json"
                        ],
                        "resources": {
                          "limits": {
                            "cpu": "10m",
                            "memory": "20Mi"
                          },
                          "requests": {
                            "cpu": "1m",
                            "memory": "10Mi"
                          }
                        },
                        "volumeMounts": [
                          {
                            "name": "kubescape-scheduler",
                            "readOnly": true,
                            "mountPath": "/home/ks/request-body.json",
                            "subPath": "request-body.json"
                          }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                          "runAsUser": 100,
                          "runAsNonRoot": true,
                          "readOnlyRootFilesystem": true,
                          "allowPrivilegeEscalation": false
                        }
                      }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "kubescape",
                    "serviceAccountName": "kubescape",
                    "terminationGracePeriodSeconds": 30,
                    "volumes": [
                      {
                        "configMap": {
                          "defaultMode": 420,
                          "name": "kubescape-scheduler"
                        },
                        "name": "kubescape-scheduler"
                      }
                    ]
                  }
                }
              }
            },
            "schedule": "19 14 * * *",
            "successfulJobsHistoryLimit": 3,
            "suspend": false
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:validatingadmissionpolicy-status-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:validatingadmissionpolicy-status-controller",
            "resourceVersion": "217",
            "uid": "af1499dd-45fc-4e46-8288-78aae78afdf0"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:validatingadmissionpolicy-status-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "validatingadmissionpolicy-status-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/prometheus-server",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/part-of": "prometheus",
              "app.kubernetes.io/version": "v2.54.1",
              "helm.sh/chart": "prometheus-25.27.0"
            },
            "name": "prometheus-server",
            "namespace": "default",
            "resourceVersion": "1847329",
            "uid": "c615d75f-e59c-4c47-8802-a0e11312b725"
          },
          "spec": {
            "clusterIP": "10.99.101.151",
            "clusterIPs": [
              "10.99.101.151"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 80,
                "protocol": "TCP",
                "targetPort": 9090
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "prometheus"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1/kube-system/Role/kubeadm:nodes-kubeadm-config/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:nodes-kubeadm-config",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:bootstrappers:kubeadm:default-node-token",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:nodes-kubeadm-config",
                "namespace": "kube-system",
                "resourceVersion": "241",
                "uid": "f22116f9-52d8-4d6b-a601-64286fd7f823"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kubeadm:nodes-kubeadm-config"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:bootstrappers:kubeadm:default-node-token"
                },
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:nodes"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:nodes-kubeadm-config",
                "namespace": "kube-system",
                "resourceVersion": "240",
                "uid": "0a7bfd15-6e49-4883-93e7-987b04c33bd6"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "kubeadm-config"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "batch/v1/default/CronJob/kubevuln-scheduler",
        "object": {
          "apiVersion": "batch/v1",
          "kind": "CronJob",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:59Z",
            "generation": 1,
            "labels": {
              "app": "kubevuln-scheduler",
              "app.kubernetes.io/component": "kubevuln-scheduler",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "armo.tier": "vuln-scan",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "kubevuln-scheduler",
            "namespace": "default",
            "resourceVersion": "1847752",
            "uid": "8fb9ad34-8c46-4015-8155-b650c65da678"
          },
          "spec": {
            "concurrencyPolicy": "Allow",
            "failedJobsHistoryLimit": 1,
            "jobTemplate": {
              "metadata": {
                "creationTimestamp": null
              },
              "spec": {
                "template": {
                  "metadata": {
                    "creationTimestamp": null,
                    "labels": {
                      "app": "kubevuln-scheduler",
                      "app.kubernetes.io/component": "kubevuln-scheduler",
                      "app.kubernetes.io/instance": "obs",
                      "app.kubernetes.io/managed-by": "Helm",
                      "app.kubernetes.io/name": "kubescape-operator",
                      "app.kubernetes.io/version": "1.23.2",
                      "armo.tier": "vuln-scan",
                      "helm.sh/chart": "kubescape-operator-1.23.2",
                      "kubescape.io/ignore": "true",
                      "kubescape.io/tier": "core",
                      "tier": "ks-control-plane"
                    }
                  },
                  "spec": {
                    "automountServiceAccountToken": false,
                    "containers": [
                      {
                        "name": "kubevuln-scheduler",
                        "image": "quay.io/kubescape/http-request:v0.2.9",
                        "args": [
                          "-method=post",
                          "-scheme=http",
                          "-host=operator:4002",
                          "-path=v1/triggerAction",
                          "-headers=Content-Type:application/json",
                          "-path-body=/home/ks/request-body.json"
                        ],
                        "resources": {
                          "limits": {
                            "cpu": "10m",
                            "memory": "20Mi"
                          },
                          "requests": {
                            "cpu": "1m",
                            "memory": "10Mi"
                          }
                        },
                        "volumeMounts": [
                          {
                            "name": "kubevuln-scheduler",
                            "readOnly": true,
                            "mountPath": "/home/ks/request-body.json",
                            "subPath": "request-body.json"
                          }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                          "runAsUser": 100,
                          "runAsNonRoot": true,
                          "readOnlyRootFilesystem": true,
                          "allowPrivilegeEscalation": false
                        }
                      }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "restartPolicy": "Never",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "serviceAccount": "kubevuln",
                    "serviceAccountName": "kubevuln",
                    "terminationGracePeriodSeconds": 30,
                    "volumes": [
                      {
                        "configMap": {
                          "defaultMode": 420,
                          "name": "kubevuln-scheduler"
                        },
                        "name": "kubevuln-scheduler"
                      }
                    ]
                  }
                }
              }
            },
            "schedule": "11 22 * * *",
            "successfulJobsHistoryLimit": 3,
            "suspend": false
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/alloy",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "networking",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alloy",
              "app.kubernetes.io/part-of": "alloy",
              "app.kubernetes.io/version": "v1.4.2",
              "helm.sh/chart": "alloy-0.9.1"
            },
            "name": "alloy",
            "namespace": "default",
            "resourceVersion": "1847221",
            "uid": "99eacc15-747d-4684-acb3-8a2181aa2629"
          },
          "spec": {
            "clusterIP": "10.107.209.72",
            "clusterIPs": [
              "10.107.209.72"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http-metrics",
                "port": 12345,
                "protocol": "TCP",
                "targetPort": 12345
              },
              {
                "name": "grpc",
                "port": 4323,
                "protocol": "TCP",
                "targetPort": 4323
              },
              {
                "name": "otel-http",
                "port": 4318,
                "protocol": "TCP",
                "targetPort": 4318
              }
            ],
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "alloy"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "operator",
              "app.kubernetes.io/component": "operator",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "operator",
            "namespace": "default",
            "resourceVersion": "1847207",
            "uid": "49399a26-6d07-47f6-adc6-cbda328359c2"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "operator"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "operator",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/tempo",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": false,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo",
            "namespace": "default",
            "resourceVersion": "1847143",
            "uid": "b8efacf1-830b-4b35-a1e5-cb42ce6f8c6d"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/bootstrap-signer",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "bootstrap-signer",
            "namespace": "kube-system",
            "resourceVersion": "255",
            "uid": "fcb22ca5-2338-40f2-8949-3b95d27d8518"
          }
        }
      },
      {
        "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
        "object": {
          "kind": "ServiceAccount",
          "name": "synchronizer",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:52Z",
                "labels": {
                  "app": "synchronizer",
                  "app.kubernetes.io/component": "synchronizer",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "synchronizer",
                "namespace": "default",
                "resourceVersion": "1847209",
                "uid": "5ecbf30c-0f5f-45b3-ba6d-d672a6159519"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "synchronizer"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "synchronizer",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "synchronizer",
                  "app.kubernetes.io/component": "synchronizer",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "synchronizer",
                "namespace": "default",
                "resourceVersion": "1847204",
                "uid": "31d58759-816f-4347-888b-8b99d2d0c095"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps",
                    "secrets"
                  ],
                  "verbs": [
                    "create",
                    "get",
                    "update",
                    "watch",
                    "list",
                    "patch",
                    "delete"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "cronjobs"
                  ],
                  "verbs": [
                    "create",
                    "get",
                    "update",
                    "watch",
                    "list",
                    "patch",
                    "delete"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "ttl-after-finished-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ttl-after-finished-controller",
                "resourceVersion": "215",
                "uid": "b10a7f9e-c52f-40a6-8f60-29ac0e65dd51"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:ttl-after-finished-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "ttl-after-finished-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ttl-after-finished-controller",
                "resourceVersion": "170",
                "uid": "c6342ad9-b579-440e-a8ed-cdaaa94aadc7"
              },
              "rules": [
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs"
                  ],
                  "verbs": [
                    "delete",
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "User",
          "name": "system:kube-scheduler",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-scheduler",
                "resourceVersion": "182",
                "uid": "71620b9c-6af1-456c-9821-0146371a7563"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:kube-scheduler"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-scheduler"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-scheduler",
                "resourceVersion": "140",
                "uid": "0e2d2755-28ed-4e4e-a39f-2b89a623426f"
              },
              "rules": [
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "coordination.k8s.io"
                  ],
                  "resources": [
                    "leases"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "coordination.k8s.io"
                  ],
                  "resourceNames": [
                    "kube-scheduler"
                  ],
                  "resources": [
                    "leases"
                  ],
                  "verbs": [
                    "get",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "delete",
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "bindings",
                    "pods/binding"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods/status"
                  ],
                  "verbs": [
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "replicationcontrollers",
                    "services"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "replicasets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "statefulsets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "policy"
                  ],
                  "resources": [
                    "poddisruptionbudgets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims",
                    "persistentvolumes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "authentication.k8s.io"
                  ],
                  "resources": [
                    "tokenreviews"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "authorization.k8s.io"
                  ],
                  "resources": [
                    "subjectaccessreviews"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "csinodes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "namespaces"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "csidrivers"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "csistoragecapacities"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:55Z",
            "generation": 1,
            "labels": {
              "app": "prometheus-msteams",
              "app.kubernetes.io/managed-by": "Helm",
              "chart": "prometheus-msteams-1.3.4",
              "heritage": "Helm",
              "release": "obs"
            },
            "name": "prometheus-msteams",
            "namespace": "default",
            "resourceVersion": "1848061",
            "uid": "57af8ca8-1f01-47db-b64b-8414c6bc3c71"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app": "prometheus-msteams",
                "release": "obs"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": "25%",
                "maxUnavailable": "25%"
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "25c37326617103116dfeeed8c00dabda02749e3d6784ef617449fc7e88f8673b",
                  "checksum/msteams-card-templates": "159dd39e0712672ba37bc14f6e24aa99dba9f049a10e13c8f42de11788e74a96"
                },
                "creationTimestamp": null,
                "labels": {
                  "app": "prometheus-msteams",
                  "release": "obs"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "prometheus-msteams",
                    "image": "quay.io/prometheusmsteams/prometheus-msteams:v1.5.1",
                    "args": [
                      "-config-file=/etc/config/connectors.yaml",
                      "-template-file=/etc/template/card.tmpl",
                      "-debug"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 2000,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config-volume",
                        "mountPath": "/etc/config"
                      },
                      {
                        "name": "card-template-volume",
                        "mountPath": "/etc/template"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/config",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 1,
                      "periodSeconds": 20,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/config",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 1,
                      "timeoutSeconds": 1,
                      "periodSeconds": 3,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "Always"
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "runAsNonRoot": true,
                  "runAsUser": 1000
                },
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "prometheus-msteams-config"
                    },
                    "name": "config-volume"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "prometheus-msteams-card-template"
                    },
                    "name": "card-template-volume"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
        "object": {
          "apiVersion": "v1",
          "kind": "Pod",
          "metadata": {
            "annotations": {
              "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://192.168.65.3:2379",
              "kubernetes.io/config.hash": "3436b10c8a489053c5f3ba0f32b03652",
              "kubernetes.io/config.mirror": "3436b10c8a489053c5f3ba0f32b03652",
              "kubernetes.io/config.seen": "2024-09-25T04:19:43.733177433Z",
              "kubernetes.io/config.source": "file"
            },
            "creationTimestamp": "2024-09-25T04:19:49Z",
            "labels": {
              "component": "etcd",
              "tier": "control-plane"
            },
            "name": "etcd-docker-desktop",
            "namespace": "kube-system",
            "ownerReferences": [
              {
                "apiVersion": "v1",
                "controller": true,
                "kind": "Node",
                "name": "docker-desktop",
                "uid": "5bdfe2a9-b3e5-4af4-8da8-dc5d668b7959"
              }
            ],
            "resourceVersion": "1827253",
            "uid": "a9703363-aa47-448b-b427-090da240e23b"
          },
          "spec": {
            "containers": [
              {
                "name": "etcd",
                "image": "registry.k8s.io/etcd:3.5.12-0",
                "command": [
                  "etcd",
                  "--advertise-client-urls=https://192.168.65.3:2379",
                  "--cert-file=/run/config/pki/etcd/server.crt",
                  "--client-cert-auth=true",
                  "--data-dir=/var/lib/etcd",
                  "--experimental-initial-corrupt-check=true",
                  "--experimental-watch-progress-notify-interval=5s",
                  "--initial-advertise-peer-urls=https://192.168.65.3:2380",
                  "--initial-cluster=docker-desktop=https://192.168.65.3:2380",
                  "--key-file=/run/config/pki/etcd/server.key",
                  "--listen-client-urls=https://127.0.0.1:2379,https://192.168.65.3:2379",
                  "--listen-metrics-urls=http://127.0.0.1:2381",
                  "--listen-peer-urls=https://192.168.65.3:2380",
                  "--name=docker-desktop",
                  "--peer-cert-file=/run/config/pki/etcd/peer.crt",
                  "--peer-client-cert-auth=true",
                  "--peer-key-file=/run/config/pki/etcd/peer.key",
                  "--peer-trusted-ca-file=/run/config/pki/etcd/ca.crt",
                  "--snapshot-count=10000",
                  "--trusted-ca-file=/run/config/pki/etcd/ca.crt"
                ],
                "resources": {
                  "requests": {
                    "cpu": "100m",
                    "memory": "100Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "etcd-data",
                    "mountPath": "/var/lib/etcd"
                  },
                  {
                    "name": "etcd-certs",
                    "mountPath": "/run/config/pki/etcd"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/health?exclude=NOSPACE&serializable=true",
                    "port": 2381,
                    "host": "127.0.0.1",
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 15,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 8
                },
                "startupProbe": {
                  "httpGet": {
                    "path": "/health?serializable=false",
                    "port": 2381,
                    "host": "127.0.0.1",
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 15,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 24
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "enableServiceLinks": true,
            "hostNetwork": true,
            "nodeName": "docker-desktop",
            "preemptionPolicy": "PreemptLowerPriority",
            "priority": 2000001000,
            "priorityClassName": "system-node-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoExecute",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/run/config/pki/etcd",
                  "type": "DirectoryOrCreate"
                },
                "name": "etcd-certs"
              },
              {
                "hostPath": {
                  "path": "/var/lib/etcd",
                  "type": "DirectoryOrCreate"
                },
                "name": "etcd-data"
              }
            ]
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pv-protection-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:pv-protection-controller",
            "resourceVersion": "214",
            "uid": "4ccbb3df-40c9-4eb1-9ca2-097f64ec64a5"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:pv-protection-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "pv-protection-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:monitoring",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:monitoring",
            "resourceVersion": "175",
            "uid": "53e55a98-1b52-4f72-8fac-7f5dd9304639"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:monitoring"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:monitoring"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/tempo-query-frontend",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "query-frontend",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-query-frontend",
            "namespace": "default",
            "resourceVersion": "1847367",
            "uid": "9d890ed1-5ca7-41f2-b70d-0cad8cfd6403"
          },
          "spec": {
            "clusterIP": "10.99.51.111",
            "clusterIPs": [
              "10.99.51.111"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http-metrics",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": 3100
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": 9095
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "query-frontend",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "tempo"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/endpointslice-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:55Z",
            "name": "endpointslice-controller",
            "namespace": "kube-system",
            "resourceVersion": "311",
            "uid": "0c9b72a6-e59e-431f-bdf8-8b848ed711eb"
          }
        }
      },
      {
        "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1//ClusterRole/synchronizer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/synchronizer",
        "object": {
          "kind": "ServiceAccount",
          "name": "synchronizer",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "synchronizer",
                  "app.kubernetes.io/component": "synchronizer",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "synchronizer",
                "resourceVersion": "1847197",
                "uid": "77c0846c-76e1-4326-8143-b8f8f257cf9b"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "synchronizer"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "synchronizer",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "synchronizer",
                  "app.kubernetes.io/component": "synchronizer",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "synchronizer",
                "resourceVersion": "1847183",
                "uid": "ad066caa-bdb3-417c-a23a-9c36081fbbd5"
              },
              "rules": [
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "storageclasses"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "rbac.authorization.k8s.io"
                  ],
                  "resources": [
                    "rolebindings",
                    "clusterrolebindings"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods",
                    "namespaces",
                    "nodes",
                    "configmaps",
                    "persistentvolumes",
                    "services"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "deployments",
                    "statefulsets",
                    "daemonsets",
                    "replicasets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs",
                    "cronjobs"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "networking.k8s.io"
                  ],
                  "resources": [
                    "networkpolicies",
                    "ingresses"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "spdx.softwarecomposition.kubescape.io"
                  ],
                  "resources": [
                    "applicationactivities",
                    "applicationprofiles",
                    "networkneighborses",
                    "networkneighborhoods"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list",
                    "create",
                    "update",
                    "patch",
                    "delete"
                  ]
                },
                {
                  "apiGroups": [
                    "spdx.softwarecomposition.kubescape.io"
                  ],
                  "resources": [
                    "knownservers"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list",
                    "create",
                    "update",
                    "patch",
                    "delete"
                  ]
                },
                {
                  "apiGroups": [
                    "cilium.io"
                  ],
                  "resources": [
                    "ciliumnetworkpolicies"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "projectcalico.org"
                  ],
                  "resources": [
                    "networkpolicies"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "networking.istio.io"
                  ],
                  "resources": [
                    "gateways",
                    "virtualservices"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "security.istio.io"
                  ],
                  "resources": [
                    "authorizationpolicies"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "gateway.networking.k8s.io"
                  ],
                  "resources": [
                    "httproutes",
                    "tcproutes",
                    "udproutes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "kubescape.io"
                  ],
                  "resources": [
                    "servicesscanresults"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "kubescape.io"
                  ],
                  "resources": [
                    "operatorcommands"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list",
                    "create",
                    "update",
                    "patch",
                    "delete"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
        "object": {
          "kind": "ServiceAccount",
          "name": "kollector",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "kollector",
                  "app.kubernetes.io/component": "kollector",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "kollector",
                "resourceVersion": "1847189",
                "uid": "5231480c-3317-4239-aaa0-ea7df9a839ac"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "kollector"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "kollector",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "kollector",
                  "app.kubernetes.io/component": "kollector",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "kollector",
                "resourceVersion": "1847176",
                "uid": "046cd7af-c8b6-49f6-afec-530722558164"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods",
                    "pods/log",
                    "namespaces",
                    "cronjobs",
                    "secrets",
                    "nodes",
                    "services"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "deployments",
                    "statefulsets",
                    "daemonsets",
                    "replicasets"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs",
                    "cronjobs"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:basic-user/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:basic-user",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:authenticated",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:basic-user",
                "resourceVersion": "177",
                "uid": "82caec66-4105-4770-8dbd-1b6bc793baaa"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:basic-user"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:authenticated"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:basic-user",
                "resourceVersion": "112",
                "uid": "e61d3c46-25b5-4d0f-82fd-ed4e3a606abb"
              },
              "rules": [
                {
                  "apiGroups": [
                    "authorization.k8s.io"
                  ],
                  "resources": [
                    "selfsubjectaccessreviews",
                    "selfsubjectrulesreviews"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "authentication.k8s.io"
                  ],
                  "resources": [
                    "selfsubjectreviews"
                  ],
                  "verbs": [
                    "create"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
        "object": {
          "kind": "ServiceAccount",
          "name": "storage-provisioner",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {},
                "creationTimestamp": "2024-09-25T04:19:59Z",
                "name": "storage-provisioner",
                "resourceVersion": "394",
                "uid": "65705bbc-0c6b-4bce-a0ed-96cb9fe5c622"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "storage-provisioner"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "storage-provisioner",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {},
                "creationTimestamp": "2024-09-25T04:19:59Z",
                "name": "storage-provisioner",
                "resourceVersion": "392",
                "uid": "93e84ceb-95c6-4bc8-8a7a-6e3d05a54111"
              },
              "rules": [
                {
                  "apiGroups": [
                    "",
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "*"
                  ],
                  "verbs": [
                    "*"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
        "object": {
          "kind": "ServiceAccount",
          "name": "operator",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "operator",
                  "app.kubernetes.io/component": "operator",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "operator",
                "namespace": "default",
                "resourceVersion": "1847207",
                "uid": "49399a26-6d07-47f6-adc6-cbda328359c2"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "operator"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "operator",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "operator",
                  "app.kubernetes.io/component": "operator",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "operator",
                "namespace": "default",
                "resourceVersion": "1847203",
                "uid": "752d7b1a-a905-4e6e-965b-b8af3a56cd6a"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps",
                    "secrets"
                  ],
                  "verbs": [
                    "create",
                    "get",
                    "update",
                    "watch",
                    "list",
                    "patch",
                    "delete"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "cronjobs"
                  ],
                  "verbs": [
                    "create",
                    "get",
                    "update",
                    "watch",
                    "list",
                    "patch",
                    "delete"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:job-controller",
            "resourceVersion": "199",
            "uid": "7e18b6e2-01ab-45e0-94c5-0219ad845aa8"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:job-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "job-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/vpnkit-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {},
            "creationTimestamp": "2024-09-25T04:20:00Z",
            "name": "vpnkit-controller",
            "namespace": "kube-system",
            "resourceVersion": "401",
            "uid": "f668ffc8-c57c-42d2-9ad2-6dc329b069ff"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/ttl-after-finished-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:54Z",
            "name": "ttl-after-finished-controller",
            "namespace": "kube-system",
            "resourceVersion": "305",
            "uid": "9a1ea053-42ba-4cbc-bc64-f9af279daf16"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:public-info-viewer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:authenticated",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:public-info-viewer",
                "resourceVersion": "178",
                "uid": "d0f17149-e027-4f1f-8b9d-b1f62923d9b0"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:public-info-viewer"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:authenticated"
                },
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:unauthenticated"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:public-info-viewer",
                "resourceVersion": "113",
                "uid": "9434990b-4b0b-4184-84d0-556f14185790"
              },
              "rules": [
                {
                  "nonResourceURLs": [
                    "/healthz",
                    "/livez",
                    "/readyz",
                    "/version",
                    "/version/"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:serviceaccounts/rbac.authorization.k8s.io/v1//ClusterRole/system:service-account-issuer-discovery/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:service-account-issuer-discovery",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:serviceaccounts",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:service-account-issuer-discovery",
                "resourceVersion": "185",
                "uid": "b0386a5d-7fbc-44c8-a8e5-6c7259b767a0"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:service-account-issuer-discovery"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:serviceaccounts"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:service-account-issuer-discovery",
                "resourceVersion": "138",
                "uid": "6b5cb2f8-b426-429d-8695-685fd4105af8"
              },
              "rules": [
                {
                  "nonResourceURLs": [
                    "/.well-known/openid-configuration",
                    "/.well-known/openid-configuration/",
                    "/openid/v1/jwks",
                    "/openid/v1/jwks/"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-node-lease/ConfigMap/kube-root-ca.crt",
        "object": {
          "apiVersion": "v1",
          "data": {
            "ca.crt": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
            },
            "creationTimestamp": "2024-09-25T04:19:56Z",
            "name": "kube-root-ca.crt",
            "namespace": "kube-node-lease",
            "resourceVersion": "316",
            "uid": "088eb522-cffb-40f5-a673-dfd558402f6c"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/kube-root-ca.crt",
        "object": {
          "apiVersion": "v1",
          "data": {
            "ca.crt": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
            },
            "creationTimestamp": "2024-09-25T04:19:56Z",
            "name": "kube-root-ca.crt",
            "namespace": "kube-system",
            "resourceVersion": "318",
            "uid": "f206028f-08f0-4c0a-b403-c0d10117a63b"
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/grafana",
        "object": {
          "apiVersion": "v1",
          "data": {
            "dashboardproviders.yaml": "XXXXXX",
            "datasources.yaml": "XXXXXX",
            "download_dashboards.sh": "XXXXXX",
            "grafana.ini": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "grafana",
              "app.kubernetes.io/version": "11.2.1",
              "helm.sh/chart": "grafana-8.5.2"
            },
            "name": "grafana",
            "namespace": "default",
            "resourceVersion": "1847149",
            "uid": "ff049975-67f6-4af6-88c7-ca0d873f2225"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:cloud-provider",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:cloud-provider",
            "namespace": "kube-system",
            "resourceVersion": "230",
            "uid": "9571c000-d32e-4ad0-b2f4-cbb8714cd886"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "system:controller:cloud-provider"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "cloud-provider",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "cluster-admin",
            "resourceVersion": "174",
            "uid": "0b519371-b385-4b61-b91f-8f69e1f3b00c"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "cluster-admin"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:masters"
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "replicaset-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:replicaset-controller",
                "resourceVersion": "204",
                "uid": "369ac5e4-b9a5-4847-b25d-c6b6922e7cad"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:replicaset-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "replicaset-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:replicaset-controller",
                "resourceVersion": "159",
                "uid": "7f2619d8-8055-4489-bf9a-1e8f81cef336"
              },
              "rules": [
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "replicasets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "replicasets/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "replicasets/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "list",
                    "patch",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/kubevuln/rbac.authorization.k8s.io/v1//ClusterRole/kubevuln/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubevuln",
        "object": {
          "kind": "ServiceAccount",
          "name": "kubevuln",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "kubevuln",
                  "app.kubernetes.io/component": "kubevuln",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "kubevuln",
                "resourceVersion": "1847191",
                "uid": "fbdc7aa8-6d85-41c5-9477-92b99562fb87"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "kubevuln"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "kubevuln",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "kubevuln",
                  "app.kubernetes.io/component": "kubevuln",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "kubevuln",
                "resourceVersion": "1847178",
                "uid": "3c1f2b55-a9e8-46ae-a9d7-64c5c17917ef"
              },
              "rules": [
                {
                  "apiGroups": [
                    "spdx.softwarecomposition.kubescape.io"
                  ],
                  "resources": [
                    "vulnerabilitymanifests",
                    "vulnerabilitymanifestsummaries",
                    "openvulnerabilityexchangecontainers",
                    "sbomsyfts"
                  ],
                  "verbs": [
                    "create",
                    "get",
                    "update",
                    "watch",
                    "list",
                    "patch"
                  ]
                },
                {
                  "apiGroups": [
                    "spdx.softwarecomposition.kubescape.io"
                  ],
                  "resources": [
                    "sbomsyftfiltereds"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
        "object": {
          "kind": "ServiceAccount",
          "name": "operator",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "operator",
                  "app.kubernetes.io/component": "operator",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "operator",
                "resourceVersion": "1847193",
                "uid": "37faa711-c948-4788-9b26-8c2332fd93c0"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "operator"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "operator",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "operator",
                  "app.kubernetes.io/component": "operator",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "operator",
                "resourceVersion": "1847180",
                "uid": "71cd01f2-7ced-4065-9bdf-7c819a747c3c"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods",
                    "nodes",
                    "namespaces",
                    "configmaps",
                    "secrets",
                    "services"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs",
                    "cronjobs"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list",
                    "create",
                    "update",
                    "delete",
                    "patch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "deployments",
                    "daemonsets",
                    "statefulsets",
                    "replicasets"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "spdx.softwarecomposition.kubescape.io"
                  ],
                  "resources": [
                    "vulnerabilitymanifests",
                    "vulnerabilitymanifestsummaries",
                    "workloadconfigurationscans",
                    "workloadconfigurationscansummaries",
                    "openvulnerabilityexchangecontainers",
                    "sbomsyftfiltereds",
                    "sbomsyfts"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list",
                    "delete"
                  ]
                },
                {
                  "apiGroups": [
                    "kubescape.io"
                  ],
                  "resources": [
                    "runtimerulealertbindings"
                  ],
                  "verbs": [
                    "list",
                    "watch",
                    "get"
                  ]
                },
                {
                  "apiGroups": [
                    "kubescape.io"
                  ],
                  "resources": [
                    "servicesscanresults"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list",
                    "create",
                    "update",
                    "delete",
                    "patch"
                  ]
                },
                {
                  "apiGroups": [
                    "kubescape.io"
                  ],
                  "resources": [
                    "operatorcommands"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "kubescape.io"
                  ],
                  "resources": [
                    "operatorcommands/status"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list",
                    "update",
                    "patch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
        "object": {
          "apiVersion": "v1",
          "kind": "Pod",
          "metadata": {
            "annotations": {
              "kubernetes.io/config.hash": "aa7bbfbbe0588d06569a828ad4116992",
              "kubernetes.io/config.mirror": "aa7bbfbbe0588d06569a828ad4116992",
              "kubernetes.io/config.seen": "2024-09-25T04:19:43.733232216Z",
              "kubernetes.io/config.source": "file"
            },
            "creationTimestamp": "2024-09-25T04:19:53Z",
            "labels": {
              "component": "kube-scheduler",
              "tier": "control-plane"
            },
            "name": "kube-scheduler-docker-desktop",
            "namespace": "kube-system",
            "ownerReferences": [
              {
                "apiVersion": "v1",
                "controller": true,
                "kind": "Node",
                "name": "docker-desktop",
                "uid": "5bdfe2a9-b3e5-4af4-8da8-dc5d668b7959"
              }
            ],
            "resourceVersion": "1827257",
            "uid": "940bb8fd-49f3-4e3b-b260-f685948abd4e"
          },
          "spec": {
            "containers": [
              {
                "name": "kube-scheduler",
                "image": "registry.k8s.io/kube-scheduler:v1.30.2",
                "command": [
                  "kube-scheduler",
                  "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                  "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                  "--bind-address=127.0.0.1",
                  "--kubeconfig=/etc/kubernetes/scheduler.conf",
                  "--leader-elect=true"
                ],
                "resources": {
                  "requests": {
                    "cpu": "100m"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "kubeconfig",
                    "readOnly": true,
                    "mountPath": "/etc/kubernetes/scheduler.conf"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 10259,
                    "host": "127.0.0.1",
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 15,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 8
                },
                "startupProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 10259,
                    "host": "127.0.0.1",
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 15,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 24
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "enableServiceLinks": true,
            "hostNetwork": true,
            "nodeName": "docker-desktop",
            "preemptionPolicy": "PreemptLowerPriority",
            "priority": 2000001000,
            "priorityClassName": "system-node-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoExecute",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/etc/kubernetes/scheduler.conf",
                  "type": "FileOrCreate"
                },
                "name": "kubeconfig"
              }
            ]
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/synchronizer",
        "object": {
          "apiVersion": "v1",
          "data": {
            "config.json": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "synchronizer",
              "app.kubernetes.io/component": "synchronizer",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "synchronizer",
            "namespace": "default",
            "resourceVersion": "1847164",
            "uid": "e4cecb93-6101-4a36-8359-9a30436f76d0"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/grafana-clusterrolebinding",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "grafana",
              "app.kubernetes.io/version": "11.2.1",
              "helm.sh/chart": "grafana-8.5.2"
            },
            "name": "grafana-clusterrolebinding",
            "resourceVersion": "1847188",
            "uid": "5a250c61-56ba-45af-b81b-c004f12f4e1c"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "grafana-clusterrole"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "grafana",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/grafana",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": false,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "grafana",
              "app.kubernetes.io/version": "11.2.1",
              "helm.sh/chart": "grafana-8.5.2"
            },
            "name": "grafana",
            "namespace": "default",
            "resourceVersion": "1847128",
            "uid": "5a3618b3-b7b0-400e-9c86-2861500ba1ba"
          }
        }
      },
      {
        "resourceID": "/v1/kube-node-lease/ServiceAccount/default",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:56Z",
            "name": "default",
            "namespace": "kube-node-lease",
            "resourceVersion": "326",
            "uid": "174f767b-3d7d-4985-9d29-cce406063beb"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/gateway",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app": "gateway",
              "app.kubernetes.io/component": "gateway",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "gateway",
            "namespace": "default",
            "resourceVersion": "1847129",
            "uid": "988f9ea4-d957-4188-99fa-90a0216132bb"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "User",
          "name": "system:kube-controller-manager",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::extension-apiserver-authentication-reader",
                "namespace": "kube-system",
                "resourceVersion": "226",
                "uid": "5837a414-9d9e-4114-9d81-d1b943a0e12d"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "extension-apiserver-authentication-reader"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-controller-manager"
                },
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-scheduler"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "extension-apiserver-authentication-reader",
                "namespace": "kube-system",
                "resourceVersion": "220",
                "uid": "b0f2ed4f-ed43-4072-9d13-13ff6f54f42a"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "extension-apiserver-authentication"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/ks-cloud-config",
        "object": {
          "apiVersion": "v1",
          "data": {
            "clusterData": "XXXXXX",
            "metrics": "XXXXXX",
            "services": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "argocd.argoproj.io/sync-options": "Delete=false",
              "helm.sh/hook": "pre-install,pre-upgrade",
              "helm.sh/hook-delete-policy": "before-hook-creation",
              "helm.sh/hook-weight": "0",
              "helm.sh/resource-policy": "keep"
            },
            "creationTimestamp": "2024-11-29T06:19:40Z",
            "labels": {
              "app": "ks-cloud-config",
              "app.kubernetes.io/component": "ks-cloud-config",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/infra": "config",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "ks-cloud-config",
            "namespace": "default",
            "resourceVersion": "1847095",
            "uid": "e6e4b4d3-015b-4617-9e82-b55da3ba8af1"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-proxier",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:52Z",
            "name": "kubeadm:node-proxier",
            "resourceVersion": "278",
            "uid": "68e9da4c-3656-4282-ae35-84e8752483fe"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:node-proxier"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "kube-proxy",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/loki-distributed-ingress",
        "object": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "NetworkPolicy",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-ingress",
            "namespace": "default",
            "resourceVersion": "1847118",
            "uid": "e5ab84eb-941b-4462-8648-0d143331b21a"
          },
          "spec": {
            "ingress": [
              {
                "ports": [
                  {
                    "port": "http",
                    "protocol": "TCP"
                  }
                ]
              }
            ],
            "podSelector": {
              "matchExpressions": [
                {
                  "key": "app.kubernetes.io/component",
                  "operator": "In",
                  "values": [
                    "gateway"
                  ]
                }
              ],
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              }
            },
            "policyTypes": [
              "Ingress"
            ]
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/storage",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app": "storage",
              "app.kubernetes.io/component": "storage",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "storage",
            "namespace": "default",
            "resourceVersion": "1847261",
            "uid": "572ce1b8-e2db-42c0-b4fd-167062fdd038"
          },
          "spec": {
            "clusterIP": "10.97.68.8",
            "clusterIPs": [
              "10.97.68.8"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "port": 443,
                "protocol": "TCP",
                "targetPort": 8443
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "storage",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "kubescape-operator"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/prometheus-node-exporter",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": false,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/component": "metrics",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/part-of": "prometheus",
              "app.kubernetes.io/version": "1.8.2",
              "helm.sh/chart": "prometheus-node-exporter-4.39.0"
            },
            "name": "prometheus-node-exporter",
            "namespace": "default",
            "resourceVersion": "1847140",
            "uid": "c1b7fbfb-4dcf-4590-8486-6616c7cc4b4e"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/disruption-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:disruption-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:disruption-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "disruption-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:disruption-controller",
                "resourceVersion": "191",
                "uid": "33840337-72f3-4bd7-ad45-cb4152ecdc65"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:disruption-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "disruption-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:disruption-controller",
                "resourceVersion": "146",
                "uid": "6c8a1366-d012-4878-bb66-abc8e30ac198"
              },
              "rules": [
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "deployments"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps",
                    "extensions"
                  ],
                  "resources": [
                    "replicasets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "replicationcontrollers"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "policy"
                  ],
                  "resources": [
                    "poddisruptionbudgets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "statefulsets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "policy"
                  ],
                  "resources": [
                    "poddisruptionbudgets/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "*"
                  ],
                  "resources": [
                    "*/scale"
                  ],
                  "verbs": [
                    "get"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods/status"
                  ],
                  "verbs": [
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "User",
          "name": "system:kube-controller-manager",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-controller-manager",
                "resourceVersion": "180",
                "uid": "778c4202-b2f8-4beb-94f9-fd8c04f5001b"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:kube-controller-manager"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-controller-manager"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-controller-manager",
                "resourceVersion": "128",
                "uid": "fa29adf8-95d7-4660-bc22-ee58c9b3dbbe"
              },
              "rules": [
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "coordination.k8s.io"
                  ],
                  "resources": [
                    "leases"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "coordination.k8s.io"
                  ],
                  "resourceNames": [
                    "kube-controller-manager"
                  ],
                  "resources": [
                    "leases"
                  ],
                  "verbs": [
                    "get",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "secrets",
                    "serviceaccounts"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "secrets"
                  ],
                  "verbs": [
                    "delete"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps",
                    "namespaces",
                    "secrets",
                    "serviceaccounts"
                  ],
                  "verbs": [
                    "get"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "secrets",
                    "serviceaccounts"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "authentication.k8s.io"
                  ],
                  "resources": [
                    "tokenreviews"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "authorization.k8s.io"
                  ],
                  "resources": [
                    "subjectaccessreviews"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "*"
                  ],
                  "resources": [
                    "*"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "serviceaccounts/token"
                  ],
                  "verbs": [
                    "create"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:node-controller",
            "resourceVersion": "201",
            "uid": "32a7b3ae-874f-4081-8413-baa12d82ed89"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:node-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "node-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/token-cleaner",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:52Z",
            "name": "token-cleaner",
            "namespace": "kube-system",
            "resourceVersion": "288",
            "uid": "01ef5f0d-c5d3-4fa9-8e4b-1cac12d28d69"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/alertmanager",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": true,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alertmanager",
              "app.kubernetes.io/version": "v0.27.0",
              "helm.sh/chart": "alertmanager-1.13.1"
            },
            "name": "alertmanager",
            "namespace": "default",
            "resourceVersion": "1847124",
            "uid": "ae98f93a-4531-479c-81c8-e2b42921239c"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/prometheus-pushgateway",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": true,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/version": "v1.9.0",
              "helm.sh/chart": "prometheus-pushgateway-2.14.0"
            },
            "name": "prometheus-pushgateway",
            "namespace": "default",
            "resourceVersion": "1847141",
            "uid": "4bbdb5d1-b38a-4fa0-994d-d72e12fc0a38"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-public/RoleBinding/kubeadm:bootstrap-signer-clusterinfo",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "kubeadm:bootstrap-signer-clusterinfo",
            "namespace": "kube-public",
            "resourceVersion": "257",
            "uid": "84232e9c-83c0-4827-aa43-f237b71b897c"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "kubeadm:bootstrap-signer-clusterinfo"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "User",
              "name": "system:anonymous"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-dns",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:kube-dns",
            "resourceVersion": "181",
            "uid": "89ea6da3-6d2e-4e91-a031-ef3fbd84541a"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:kube-dns"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "kube-dns",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/kubescape",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app": "kubescape",
              "app.kubernetes.io/component": "kubescape",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "kubescape",
            "namespace": "default",
            "resourceVersion": "1847237",
            "uid": "8f26cb22-18db-4cbc-aebb-01eb8557df7a"
          },
          "spec": {
            "clusterIP": "10.102.222.107",
            "clusterIPs": [
              "10.102.222.107"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 8080,
                "protocol": "TCP",
                "targetPort": 8080
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "kubescape",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "kubescape-operator"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/clusterrole-aggregation-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:53Z",
            "name": "clusterrole-aggregation-controller",
            "namespace": "kube-system",
            "resourceVersion": "295",
            "uid": "26425212-36c1-4ed7-a2d9-bbc8a6ff617e"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/certificate-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "certificate-controller",
            "namespace": "kube-system",
            "resourceVersion": "268",
            "uid": "2d269769-eedc-48d2-aff1-8db67f92aba9"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "User",
          "name": "system:kube-controller-manager",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-controller-manager",
                "namespace": "kube-system",
                "resourceVersion": "227",
                "uid": "d5941298-4440-48db-a629-5b0809ddf30d"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system::leader-locking-kube-controller-manager"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-controller-manager"
                },
                {
                  "kind": "ServiceAccount",
                  "name": "kube-controller-manager",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-controller-manager",
                "namespace": "kube-system",
                "resourceVersion": "224",
                "uid": "8c56a5fe-7435-4078-b6ec-6e8d524502f9"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "kube-controller-manager"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/synchronizer",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:54Z",
            "generation": 1,
            "labels": {
              "app": "synchronizer",
              "app.kubernetes.io/component": "synchronizer",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "synchronizer",
            "namespace": "default",
            "resourceVersion": "1847970",
            "uid": "aa43842c-adaa-46db-a398-4f761554d87d"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 2,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "synchronizer",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kubescape-operator"
              }
            },
            "strategy": {
              "type": "Recreate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/cloud-config": "88e74b1cdcc9075461153f9aa4ab5da3ad67280c46f317c599b4121b694e5c93",
                  "checksum/cloud-secret": "36b7ef21453a679289d8e51039f840d6c88d703464bc85df56f53c43682e07a9",
                  "checksum/synchronizer-configmap": "c93a23cc5c5d9e3f1746975b1f374921b3cc0ac7358f4ff5d1efe5ac6e9a7550"
                },
                "creationTimestamp": null,
                "labels": {
                  "app": "synchronizer",
                  "app.kubernetes.io/component": "synchronizer",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "kubescape.io/tier": "core",
                  "otel": "enabled",
                  "tier": "ks-control-plane"
                }
              },
              "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "synchronizer",
                    "image": "quay.io/kubescape/synchronizer:v0.0.90",
                    "command": [
                      "/usr/bin/client"
                    ],
                    "env": [
                      {
                        "name": "HELM_RELEASE",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "GOMEMLIMIT",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.memory",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOMAXPROCS",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.cpu",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "KS_LOGGER_LEVEL",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_LOGGER_NAME",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "ACCOUNT_ID",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "cloud-secret",
                            "key": "account"
                          }
                        }
                      },
                      {
                        "name": "OTEL_COLLECTOR_SVC",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "200m",
                        "memory": "500Mi"
                      },
                      "requests": {
                        "cpu": "100m",
                        "memory": "250Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "cloud-secret",
                        "readOnly": true,
                        "mountPath": "/etc/credentials"
                      },
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config/clusterData.json",
                        "subPath": "clusterData.json"
                      },
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config/services.json",
                        "subPath": "services.json"
                      },
                      {
                        "name": "config",
                        "readOnly": true,
                        "mountPath": "/etc/config/config.json",
                        "subPath": "config.json"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/healthz",
                        "port": 7888,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 10,
                      "periodSeconds": 30,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65532,
                  "runAsUser": 65532
                },
                "serviceAccount": "synchronizer",
                "serviceAccountName": "synchronizer",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "name": "cloud-secret",
                    "secret": {
                      "defaultMode": 420,
                      "secretName": "cloud-secret"
                    }
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "clusterData",
                          "path": "clusterData.json"
                        },
                        {
                          "key": "services",
                          "path": "services.json"
                        }
                      ],
                      "name": "ks-cloud-config"
                    },
                    "name": "ks-cloud-config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "config.json",
                          "path": "config.json"
                        }
                      ],
                      "name": "synchronizer"
                    },
                    "name": "config"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/Pod/storage-provisioner",
        "object": {
          "apiVersion": "v1",
          "kind": "Pod",
          "metadata": {
            "annotations": {},
            "creationTimestamp": "2024-09-25T04:20:00Z",
            "labels": {
              "component": "storage-provisioner"
            },
            "name": "storage-provisioner",
            "namespace": "kube-system",
            "resourceVersion": "1827349",
            "uid": "a532d1a4-428e-4517-a6c0-d23c5d1f522e"
          },
          "spec": {
            "containers": [
              {
                "name": "storage-provisioner",
                "image": "docker/desktop-storage-provisioner:v2.0",
                "args": [
                  "/var/lib/k8s-pvs"
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "pvs",
                    "mountPath": "/var/lib/k8s-pvs"
                  },
                  {
                    "name": "kube-api-access-gdvwd",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "enableServiceLinks": true,
            "nodeName": "docker-desktop",
            "preemptionPolicy": "PreemptLowerPriority",
            "priority": 0,
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "storage-provisioner",
            "serviceAccountName": "storage-provisioner",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoExecute",
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "tolerationSeconds": 300
              },
              {
                "effect": "NoExecute",
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "tolerationSeconds": 300
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/var/lib/k8s-pvs",
                  "type": "Directory"
                },
                "name": "pvs"
              },
              {
                "name": "kube-api-access-gdvwd",
                "projected": {
                  "defaultMode": 420,
                  "sources": [
                    {
                      "serviceAccountToken": {
                        "expirationSeconds": 3607,
                        "path": "token"
                      }
                    },
                    {
                      "configMap": {
                        "items": [
                          {
                            "key": "ca.crt",
                            "path": "ca.crt"
                          }
                        ],
                        "name": "kube-root-ca.crt"
                      }
                    },
                    {
                      "downwardAPI": {
                        "items": [
                          {
                            "fieldRef": {
                              "apiVersion": "v1",
                              "fieldPath": "metadata.namespace"
                            },
                            "path": "namespace"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      {
        "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "StatefulSet",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:58Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/part-of": "prometheus",
              "app.kubernetes.io/version": "v2.54.1",
              "helm.sh/chart": "prometheus-25.27.0"
            },
            "name": "prometheus-server",
            "namespace": "default",
            "resourceVersion": "1848214",
            "uid": "1e44b677-53c7-4d20-ab0a-c522220e3fe5"
          },
          "spec": {
            "persistentVolumeClaimRetentionPolicy": {
              "whenDeleted": "Retain",
              "whenScaled": "Retain"
            },
            "podManagementPolicy": "OrderedReady",
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "server",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "prometheus"
              }
            },
            "serviceName": "prometheus-server-headless",
            "template": {
              "metadata": {
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "server",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "prometheus",
                  "app.kubernetes.io/part-of": "prometheus",
                  "app.kubernetes.io/version": "v2.54.1",
                  "helm.sh/chart": "prometheus-25.27.0"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "prometheus-server-configmap-reload",
                    "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.76.0",
                    "args": [
                      "--watched-dir=/etc/config",
                      "--listen-address=0.0.0.0:8080",
                      "--reload-url=http://127.0.0.1:9090/-/reload"
                    ],
                    "ports": [
                      {
                        "name": "metrics",
                        "containerPort": 8080,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config-volume",
                        "readOnly": true,
                        "mountPath": "/etc/config"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/healthz",
                        "port": "metrics",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 2,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/healthz",
                        "port": "metrics",
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "startupProbe": {
                      "httpGet": {
                        "path": "/healthz",
                        "port": "metrics",
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                  },
                  {
                    "name": "prometheus-server",
                    "image": "quay.io/prometheus/prometheus:v2.54.1",
                    "args": [
                      "--storage.tsdb.retention.time=15d",
                      "--config.file=/etc/config/prometheus.yml",
                      "--storage.tsdb.path=/data",
                      "--web.console.libraries=/etc/prometheus/console_libraries",
                      "--web.console.templates=/etc/prometheus/consoles",
                      "--web.enable-lifecycle",
                      "--web.enable-remote-write-receiver"
                    ],
                    "ports": [
                      {
                        "containerPort": 9090,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config-volume",
                        "mountPath": "/etc/config"
                      },
                      {
                        "name": "storage-volume",
                        "mountPath": "/data"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/-/healthy",
                        "port": 9090,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 10,
                      "periodSeconds": 15,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/-/ready",
                        "port": 9090,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 4,
                      "periodSeconds": 5,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "serviceAccount": "prometheus-server",
                "serviceAccountName": "prometheus-server",
                "terminationGracePeriodSeconds": 300,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "prometheus-server"
                    },
                    "name": "config-volume"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "partition": 0
              },
              "type": "RollingUpdate"
            },
            "volumeClaimTemplates": [
              {
                "apiVersion": "v1",
                "kind": "PersistentVolumeClaim",
                "metadata": {
                  "creationTimestamp": null,
                  "name": "storage-volume"
                },
                "spec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "8Gi"
                    }
                  },
                  "volumeMode": "Filesystem"
                },
                "status": {
                  "phase": "Pending"
                }
              }
            ]
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:54Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/version": "v1.9.0",
              "helm.sh/chart": "prometheus-pushgateway-2.14.0"
            },
            "name": "prometheus-pushgateway",
            "namespace": "default",
            "resourceVersion": "1848105",
            "uid": "409e276c-53f1-45bb-9940-486687f83421"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "prometheus"
              }
            },
            "strategy": {
              "type": "Recreate"
            },
            "template": {
              "metadata": {
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "prometheus",
                  "app.kubernetes.io/version": "v1.9.0",
                  "helm.sh/chart": "prometheus-pushgateway-2.14.0"
                }
              },
              "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "pushgateway",
                    "image": "quay.io/prometheus/pushgateway:v1.9.0",
                    "ports": [
                      {
                        "name": "metrics",
                        "containerPort": 9091,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "storage-volume",
                        "mountPath": "/data"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/-/healthy",
                        "port": 9091,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 10,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/-/ready",
                        "port": 9091,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 10,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "serviceAccount": "prometheus-pushgateway",
                "serviceAccountName": "prometheus-pushgateway",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "emptyDir": {},
                    "name": "storage-volume"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:kubelet-bootstrap",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "kubeadm:kubelet-bootstrap",
            "resourceVersion": "250",
            "uid": "9bfa04fd-c6c6-4fa0-b55b-881f255345b5"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:node-bootstrapper"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:bootstrappers:kubeadm:default-node-token"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:root-ca-cert-publisher",
            "resourceVersion": "216",
            "uid": "98ab682d-9419-4805-b80b-7f86d4a7935a"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:root-ca-cert-publisher"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "root-ca-cert-publisher",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ephemeral-volume-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:ephemeral-volume-controller",
            "resourceVersion": "196",
            "uid": "af3428c4-2ed4-429a-b05f-15092e5d9086"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:ephemeral-volume-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "ephemeral-volume-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/tempo-ingester",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "ingester",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-ingester",
            "namespace": "default",
            "resourceVersion": "1847349",
            "uid": "cd107f44-bbe8-44d7-ac78-5884294c58d4"
          },
          "spec": {
            "clusterIP": "10.108.192.69",
            "clusterIPs": [
              "10.108.192.69"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http-metrics",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": 3100
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": 9095
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "ingester",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "tempo"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/disruption-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:55Z",
            "name": "disruption-controller",
            "namespace": "kube-system",
            "resourceVersion": "312",
            "uid": "c224cebe-86bb-4ae5-b885-772047d33648"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/endpointslicemirroring-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:52Z",
            "name": "endpointslicemirroring-controller",
            "namespace": "kube-system",
            "resourceVersion": "279",
            "uid": "473fdfc6-acc5-44f7-8c62-7f1044204d37"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1/kube-system/Role/kube-proxy/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kube-proxy",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:bootstrappers:kubeadm:default-node-token",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:52Z",
                "name": "kube-proxy",
                "namespace": "kube-system",
                "resourceVersion": "282",
                "uid": "5b5ef0a6-5a62-46ed-b189-be4d9853b6a4"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kube-proxy"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:bootstrappers:kubeadm:default-node-token"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:52Z",
                "name": "kube-proxy",
                "namespace": "kube-system",
                "resourceVersion": "280",
                "uid": "d9b23c8d-1bca-4939-9802-018261840b4e"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "kube-proxy"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/storage/rbac.authorization.k8s.io/v1//ClusterRole/storage/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage",
        "object": {
          "kind": "ServiceAccount",
          "name": "storage",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "storage",
                  "app.kubernetes.io/component": "storage",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "storage",
                "resourceVersion": "1847196",
                "uid": "1f8f87f9-4e3d-4957-b1bd-c96a0b9c210d"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "storage"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "storage",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "storage",
                  "app.kubernetes.io/component": "storage",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "storage",
                "resourceVersion": "1847182",
                "uid": "e87af3ed-1a48-4982-a6f3-ce7220dde6f2"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "namespaces",
                    "pods",
                    "services"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "admissionregistration.k8s.io"
                  ],
                  "resources": [
                    "mutatingwebhookconfigurations",
                    "validatingwebhookconfigurations"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "daemonsets",
                    "deployments",
                    "replicasets",
                    "statefulsets"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "cronjobs",
                    "jobs"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "flowcontrol.apiserver.k8s.io"
                  ],
                  "resources": [
                    "prioritylevelconfigurations",
                    "flowschemas"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:kube-scheduler",
            "resourceVersion": "182",
            "uid": "71620b9c-6af1-456c-9821-0146371a7563"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:kube-scheduler"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "User",
              "name": "system:kube-scheduler"
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/attachdetach-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:attachdetach-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:attachdetach-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "attachdetach-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:attachdetach-controller",
                "resourceVersion": "186",
                "uid": "c7016976-6e0f-4686-9f09-eb5a543ed899"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:attachdetach-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "attachdetach-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:attachdetach-controller",
                "resourceVersion": "141",
                "uid": "f200da5a-dc8b-4d2f-87ff-cf04ab212436"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims",
                    "persistentvolumes"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes/status"
                  ],
                  "verbs": [
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "volumeattachments"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "csidrivers"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "csinodes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/ttl-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "ttl-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ttl-controller",
                "resourceVersion": "211",
                "uid": "52722ead-b0d7-46e4-b120-b9dce5070527"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:ttl-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "ttl-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ttl-controller",
                "resourceVersion": "166",
                "uid": "2badb407-a24a-46c8-bf0b-74ed5ce56b59"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/prometheus-msteams-card-template",
        "object": {
          "apiVersion": "v1",
          "binaryData": {
            "card.tmpl": "e3sgZGVmaW5lICJ0ZWFtcy5jYXJkIiB9fQp7CiAgIkB0eXBlIjogIk1lc3NhZ2VDYXJkIiwKICAiQGNvbnRleHQiOiAiaHR0cDovL3NjaGVtYS5vcmcvZXh0ZW5zaW9ucyIsCiAgInRoZW1lQ29sb3IiOiAie3stIGlmIGVxIC5TdGF0dXMgInJlc29sdmVkIiAtfX0yREM3MkQKICAgICAgICAgICAgICAgICB7ey0gZWxzZSBpZiBlcSAuU3RhdHVzICJmaXJpbmciIC19fQogICAgICAgICAgICAgICAgICAgIHt7LSBpZiBlcSAuQ29tbW9uTGFiZWxzLnNldmVyaXR5ICJjcml0aWNhbCIgLX19OEMxQTFBCiAgICAgICAgICAgICAgICAgICAge3stIGVsc2UgaWYgZXEgLkNvbW1vbkxhYmVscy5zZXZlcml0eSAid2FybmluZyIgLX19RkZBNTAwCiAgICAgICAgICAgICAgICAgICAge3stIGVsc2UgLX19ODA4MDgwe3stIGVuZCAtfX0KICAgICAgICAgICAgICAgICB7ey0gZWxzZSAtfX04MDgwODB7ey0gZW5kIC19fSIsCiAgInN1bW1hcnkiOiAie3stIGlmIGVxIC5Db21tb25Bbm5vdGF0aW9ucy5zdW1tYXJ5ICIiIC19fQogICAgICAgICAgICAgICAgICB7ey0gaWYgZXEgLkNvbW1vbkFubm90YXRpb25zLm1lc3NhZ2UgIiIgLX19CiAgICAgICAgICAgICAgICAgICAge3stIGlmIGVxIC5Db21tb25MYWJlbHMuYWxlcnRuYW1lICIiIC19fQogICAgICAgICAgICAgICAgICAgICAgUHJvbWV0aGV1cyBBbGVydAogICAgICAgICAgICAgICAgICAgIHt7LSBlbHNlIC19fQogICAgICAgICAgICAgICAgICAgICAge3stIC5Db21tb25MYWJlbHMuYWxlcnRuYW1lIC19fQogICAgICAgICAgICAgICAgICAgIHt7LSBlbmQgLX19CiAgICAgICAgICAgICAgICAgIHt7LSBlbHNlIC19fQogICAgICAgICAgICAgICAgICAgIHt7LSAuQ29tbW9uQW5ub3RhdGlvbnMubWVzc2FnZSAtfX0KICAgICAgICAgICAgICAgICAge3stIGVuZCAtfX0KICAgICAgICAgICAgICB7ey0gZWxzZSAtfX0KICAgICAgICAgICAgICAgICAge3stIC5Db21tb25Bbm5vdGF0aW9ucy5zdW1tYXJ5IC19fQogICAgICAgICAgICAgIHt7LSBlbmQgLX19IiwKICAidGl0bGUiOiAiUHJvbWV0aGV1cyBBbGVydCAoe3sgLlN0YXR1cyB8IHRpdGxlIH19KSIsCiAgInNlY3Rpb25zIjogWyB7eyRleHRlcm5hbFVybCA6PSAuRXh0ZXJuYWxVUkx9fQogIHt7LSByYW5nZSAkaW5kZXgsICRhbGVydCA6PSAuQWxlcnRzIH19e3stIGlmICRpbmRleCB9fSx7ey0gZW5kIH19CiAgICB7CiAgICAgICJhY3Rpdml0eVRpdGxlIjogIlt7eyAkYWxlcnQuQW5ub3RhdGlvbnMuZGVzY3JpcHRpb24gfX1dKHt7ICRleHRlcm5hbFVybCB9fSkiLAogICAgICAiZmFjdHMiOiBbCiAgICAgICAge3stIHJhbmdlICRrZXksICR2YWx1ZSA6PSAkYWxlcnQuQW5ub3RhdGlvbnMgfX0KICAgICAgICB7CiAgICAgICAgICB7ey0gaWYgbmUgJGtleSAiZGVzY3JpcHRpb24iIC19fQogICAgICAgICAgICAibmFtZSI6ICJ7eyAka2V5IH19IiwKICAgICAgICAgICAgInZhbHVlIjogInt7ICR2YWx1ZSB9fSIKICAgICAgICAgIHt7LSBlbmQgLX19CiAgICAgICAgfSwKICAgICAgICB7ey0gZW5kIC19fQogICAgICAgIHt7JGMgOj0gY291bnRlcn19e3sgcmFuZ2UgJGtleSwgJHZhbHVlIDo9ICRhbGVydC5MYWJlbHMgfX17e2lmIGNhbGwgJGN9fSx7eyBlbmQgfX0KICAgICAgICB7CiAgICAgICAgICAibmFtZSI6ICJ7eyAka2V5IH19IiwKICAgICAgICAgICJ2YWx1ZSI6ICJ7eyAkdmFsdWUgfX0iCiAgICAgICAgfQogICAgICAgIHt7LSBlbmQgfX0KICAgICAgXSwKICAgICAgIm1hcmtkb3duIjogdHJ1ZQogICAgfQogICAge3stIGVuZCB9fQogIF0KfQp7eyBlbmQgfX0K"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/managed-by": "Helm"
            },
            "name": "prometheus-msteams-card-template",
            "namespace": "default",
            "resourceVersion": "1847169",
            "uid": "c71a41df-adde-4c3f-bbaa-40890f192bee"
          }
        }
      },
      {
        "resourceID": "apps/v1/kube-system/Deployment/coredns",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1"
            },
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "generation": 1,
            "labels": {
              "k8s-app": "kube-dns"
            },
            "name": "coredns",
            "namespace": "kube-system",
            "resourceVersion": "1827583",
            "uid": "9f9a4fc4-cca3-45af-81e6-607dc10da807"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 2,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "k8s-app": "kube-dns"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": "25%",
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "creationTimestamp": null,
                "labels": {
                  "k8s-app": "kube-dns"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchExpressions": [
                              {
                                "key": "k8s-app",
                                "operator": "In",
                                "values": [
                                  "kube-dns"
                                ]
                              }
                            ]
                          },
                          "topologyKey": "kubernetes.io/hostname"
                        },
                        "weight": 100
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "coredns",
                    "image": "registry.k8s.io/coredns/coredns:v1.11.1",
                    "args": [
                      "-conf",
                      "/etc/coredns/Corefile"
                    ],
                    "ports": [
                      {
                        "name": "dns",
                        "containerPort": 53,
                        "protocol": "UDP"
                      },
                      {
                        "name": "dns-tcp",
                        "containerPort": 53,
                        "protocol": "TCP"
                      },
                      {
                        "name": "metrics",
                        "containerPort": 9153,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "memory": "170Mi"
                      },
                      "requests": {
                        "cpu": "100m",
                        "memory": "70Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "config-volume",
                        "readOnly": true,
                        "mountPath": "/etc/coredns"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/health",
                        "port": 8080,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 60,
                      "timeoutSeconds": 5,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 5
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": 8181,
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "add": [
                          "NET_BIND_SERVICE"
                        ],
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "Default",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "coredns",
                "serviceAccountName": "coredns",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                  {
                    "key": "CriticalAddonsOnly",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane"
                  }
                ],
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "Corefile",
                          "path": "Corefile"
                        }
                      ],
                      "name": "coredns"
                    },
                    "name": "config-volume"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:pod-garbage-collector",
            "resourceVersion": "203",
            "uid": "70b42fb5-8769-4f55-9ca8-adefc63b3f15"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:pod-garbage-collector"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "pod-garbage-collector",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/ttl-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:54Z",
            "name": "ttl-controller",
            "namespace": "kube-system",
            "resourceVersion": "302",
            "uid": "f9143576-2674-46e7-94f2-9f65e509733a"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/persistent-volume-binder",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "persistent-volume-binder",
            "namespace": "kube-system",
            "resourceVersion": "276",
            "uid": "94f7616f-1197-4dbb-8bab-a9910d99789e"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/service-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:55Z",
            "name": "service-controller",
            "namespace": "kube-system",
            "resourceVersion": "313",
            "uid": "931753be-86b1-4904-a3f6-ec6615437f6d"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/node-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:53Z",
            "name": "node-controller",
            "namespace": "kube-system",
            "resourceVersion": "289",
            "uid": "d97c459f-0be7-44df-8cc0-a9ff2888181c"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1//ClusterRole/system:certificates.k8s.io:certificatesigningrequests:nodeclient/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-autoapprove-bootstrap",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:bootstrappers:kubeadm:default-node-token",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:node-autoapprove-bootstrap",
                "resourceVersion": "251",
                "uid": "651bc68e-a930-4be3-97b2-c3d3cd489d7c"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:bootstrappers:kubeadm:default-node-token"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                "resourceVersion": "131",
                "uid": "249cfa43-8084-40c7-aac1-0b9021105239"
              },
              "rules": [
                {
                  "apiGroups": [
                    "certificates.k8s.io"
                  ],
                  "resources": [
                    "certificatesigningrequests/nodeclient"
                  ],
                  "verbs": [
                    "create"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/route-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:route-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:route-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "route-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:route-controller",
                "resourceVersion": "207",
                "uid": "2442bf5d-a91f-4c87-9947-8dbb2cbd4512"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:route-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "route-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:route-controller",
                "resourceVersion": "162",
                "uid": "cc9b0d94-5cfc-4426-b93c-1464e69ff566"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes/status"
                  ],
                  "verbs": [
                    "patch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/grafana/rbac.authorization.k8s.io/v1//ClusterRole/grafana-clusterrole/rbac.authorization.k8s.io/v1//ClusterRoleBinding/grafana-clusterrolebinding",
        "object": {
          "kind": "ServiceAccount",
          "name": "grafana",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "grafana",
                  "app.kubernetes.io/version": "11.2.1",
                  "helm.sh/chart": "grafana-8.5.2"
                },
                "name": "grafana-clusterrolebinding",
                "resourceVersion": "1847188",
                "uid": "5a250c61-56ba-45af-b81b-c004f12f4e1c"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "grafana-clusterrole"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "grafana",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "grafana",
                  "app.kubernetes.io/version": "11.2.1",
                  "helm.sh/chart": "grafana-8.5.2"
                },
                "name": "grafana-clusterrole",
                "resourceVersion": "1847175",
                "uid": "f5f57a0c-b4eb-4b0b-8def-ed94e05c2751"
              },
              "rules": null
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/certificate-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:certificate-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:certificate-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "certificate-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:certificate-controller",
                "resourceVersion": "212",
                "uid": "aa16d070-fd15-4856-9ad9-573cb29f975a"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:certificate-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "certificate-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:certificate-controller",
                "resourceVersion": "167",
                "uid": "7826ffe1-37b0-46a1-8029-2e3a90b2669e"
              },
              "rules": [
                {
                  "apiGroups": [
                    "certificates.k8s.io"
                  ],
                  "resources": [
                    "certificatesigningrequests"
                  ],
                  "verbs": [
                    "delete",
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "certificates.k8s.io"
                  ],
                  "resources": [
                    "certificatesigningrequests/approval",
                    "certificatesigningrequests/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "certificates.k8s.io"
                  ],
                  "resourceNames": [
                    "kubernetes.io/kube-apiserver-client-kubelet"
                  ],
                  "resources": [
                    "signers"
                  ],
                  "verbs": [
                    "approve"
                  ]
                },
                {
                  "apiGroups": [
                    "certificates.k8s.io"
                  ],
                  "resourceNames": [
                    "kubernetes.io/kube-apiserver-client",
                    "kubernetes.io/kube-apiserver-client-kubelet",
                    "kubernetes.io/kubelet-serving",
                    "kubernetes.io/legacy-unknown"
                  ],
                  "resources": [
                    "signers"
                  ],
                  "verbs": [
                    "sign"
                  ]
                },
                {
                  "apiGroups": [
                    "authorization.k8s.io"
                  ],
                  "resources": [
                    "subjectaccessreviews"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "kubescape",
              "app.kubernetes.io/component": "kubescape",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "kubescape",
            "namespace": "default",
            "resourceVersion": "1847206",
            "uid": "53d5e06b-6c0b-4440-9b2e-4802dafdc4bc"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "kubescape"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "kubescape",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/prometheus-kube-state-metrics",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default",
              "prometheus.io/scrape": "true"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "metrics",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kube-state-metrics",
              "app.kubernetes.io/part-of": "kube-state-metrics",
              "app.kubernetes.io/version": "2.13.0",
              "helm.sh/chart": "kube-state-metrics-5.25.1"
            },
            "name": "prometheus-kube-state-metrics",
            "namespace": "default",
            "resourceVersion": "1847313",
            "uid": "f0b8b5a5-73fc-47b7-84f7-70add704ebd6"
          },
          "spec": {
            "clusterIP": "10.104.218.104",
            "clusterIPs": [
              "10.104.218.104"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 8080,
                "protocol": "TCP",
                "targetPort": 8080
              }
            ],
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "kube-state-metrics"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/pv-protection-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:54Z",
            "name": "pv-protection-controller",
            "namespace": "kube-system",
            "resourceVersion": "300",
            "uid": "b9e7269a-4ccb-4e73-886e-6f063ab891b3"
          }
        }
      },
      {
        "resourceID": "/default/ServiceAccount/prometheus-exporter/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-exporter/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-exporter",
        "object": {
          "kind": "ServiceAccount",
          "name": "prometheus-exporter",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "prometheus-exporter",
                  "app.kubernetes.io/component": "prometheus-exporter",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "prometheus-exporter",
                "resourceVersion": "1847194",
                "uid": "725c7e62-c7f1-46b0-9bf7-ce8f4863886b"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "prometheus-exporter"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "prometheus-exporter",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "prometheus-exporter",
                  "app.kubernetes.io/component": "prometheus-exporter",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "prometheus-exporter",
                "resourceVersion": "1847181",
                "uid": "3e62d765-14cd-4664-804a-fdd36a0966dc"
              },
              "rules": [
                {
                  "apiGroups": [
                    "spdx.softwarecomposition.kubescape.io"
                  ],
                  "resources": [
                    "configurationscansummaries",
                    "vulnerabilitysummaries"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "User",
          "name": "system:kube-scheduler",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-scheduler",
                "namespace": "kube-system",
                "resourceVersion": "228",
                "uid": "03939fbe-2fcc-40b3-848d-7d2caecd0593"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system::leader-locking-kube-scheduler"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-scheduler"
                },
                {
                  "kind": "ServiceAccount",
                  "name": "kube-scheduler",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-scheduler",
                "namespace": "kube-system",
                "resourceVersion": "225",
                "uid": "5f5bc832-7f45-47ba-a1ef-00cca2848990"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "kube-scheduler"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "Pod",
          "metadata": {
            "annotations": {},
            "creationTimestamp": "2024-09-25T04:20:00Z",
            "labels": {
              "component": "vpnkit-controller"
            },
            "name": "vpnkit-controller",
            "namespace": "kube-system",
            "resourceVersion": "1827401",
            "uid": "8fe6c66e-a9f5-4690-991c-87275a0dca4e"
          },
          "spec": {
            "containers": [
              {
                "name": "vpnkit-controller",
                "image": "docker/desktop-vpnkit-controller:dc331cb22850be0cdd97c84a9cfecaf44a1afb6e",
                "command": [
                  "/kube-vpnkit-forwarder",
                  "-path",
                  "/run/host-services/backend.sock"
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "api",
                    "mountPath": "/run/host-services/backend.sock"
                  },
                  {
                    "name": "kube-api-access-mwb29",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "enableServiceLinks": true,
            "nodeName": "docker-desktop",
            "preemptionPolicy": "PreemptLowerPriority",
            "priority": 0,
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "vpnkit-controller",
            "serviceAccountName": "vpnkit-controller",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoExecute",
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "tolerationSeconds": 300
              },
              {
                "effect": "NoExecute",
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "tolerationSeconds": 300
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/run/host-services/backend.sock",
                  "type": ""
                },
                "name": "api"
              },
              {
                "name": "kube-api-access-mwb29",
                "projected": {
                  "defaultMode": 420,
                  "sources": [
                    {
                      "serviceAccountToken": {
                        "expirationSeconds": 3607,
                        "path": "token"
                      }
                    },
                    {
                      "configMap": {
                        "items": [
                          {
                            "key": "ca.crt",
                            "path": "ca.crt"
                          }
                        ],
                        "name": "kube-root-ca.crt"
                      }
                    },
                    {
                      "downwardAPI": {
                        "items": [
                          {
                            "fieldRef": {
                              "apiVersion": "v1",
                              "fieldPath": "metadata.namespace"
                            },
                            "path": "namespace"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/loki-distributed-querier",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:55Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "querier",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/part-of": "memberlist",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-querier",
            "namespace": "default",
            "resourceVersion": "1848237",
            "uid": "8ea12c72-0aa5-42cd-b2c1-545eb8708d3d"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "querier",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "3d2b043c06f24b69bffc86a7dc505b6da51eaf8dd861673ca393d411e8c73eab"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "querier",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/name": "loki-distributed",
                  "app.kubernetes.io/part-of": "memberlist"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "querier",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "loki-distributed"
                            }
                          },
                          "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                        },
                        "weight": 100
                      }
                    ],
                    "requiredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "querier",
                            "app.kubernetes.io/instance": "obs",
                            "app.kubernetes.io/name": "loki-distributed"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "querier",
                    "image": "docker.io/grafana/loki:2.9.10",
                    "args": [
                      "-config.file=/etc/loki/config/config.yaml",
                      "-target=querier"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      },
                      {
                        "name": "grpc",
                        "containerPort": 9095,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-memberlist",
                        "containerPort": 7946,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/etc/loki/config"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/var/loki-distributed-runtime"
                      },
                      {
                        "name": "data",
                        "mountPath": "/var/loki"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 300,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 10001,
                  "runAsGroup": 10001,
                  "runAsNonRoot": true,
                  "runAsUser": 10001
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "topologySpreadConstraints": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/component": "querier",
                        "app.kubernetes.io/instance": "obs",
                        "app.kubernetes.io/name": "loki-distributed"
                      }
                    },
                    "maxSkew": 1,
                    "topologyKey": "kubernetes.io/hostname",
                    "whenUnsatisfiable": "ScheduleAnyway"
                  }
                ],
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "loki-distributed-runtime"
                    },
                    "name": "runtime-config"
                  },
                  {
                    "emptyDir": {},
                    "name": "data"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:resourcequota-controller",
            "resourceVersion": "206",
            "uid": "bfa7d12f-b88b-4163-abd4-43c22b827395"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:resourcequota-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "resourcequota-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:attachdetach-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:attachdetach-controller",
            "resourceVersion": "186",
            "uid": "c7016976-6e0f-4686-9f09-eb5a543ed899"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:attachdetach-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "attachdetach-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:route-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:route-controller",
            "resourceVersion": "207",
            "uid": "2442bf5d-a91f-4c87-9947-8dbb2cbd4512"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:route-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "route-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/fluent-bit",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "fluent-bit",
              "app.kubernetes.io/version": "3.1.9",
              "helm.sh/chart": "fluent-bit-0.47.10"
            },
            "name": "fluent-bit",
            "resourceVersion": "1847187",
            "uid": "b1ae106b-d6bd-4b86-9218-8a55a24d84c8"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "fluent-bit"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "fluent-bit",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:coredns",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "system:coredns",
            "resourceVersion": "269",
            "uid": "70063f1e-c51f-45bb-a611-4bd96f771c04"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:coredns"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "coredns",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/fluent-bit",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "fluent-bit",
              "app.kubernetes.io/version": "3.1.9",
              "helm.sh/chart": "fluent-bit-0.47.10"
            },
            "name": "fluent-bit",
            "namespace": "default",
            "resourceVersion": "1847127",
            "uid": "bdfc6437-151a-410b-8092-c63c8e8e7529"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "job-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:job-controller",
                "resourceVersion": "199",
                "uid": "7e18b6e2-01ab-45e0-94c5-0219ad845aa8"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:job-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "job-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:job-controller",
                "resourceVersion": "154",
                "uid": "f77556b1-92b7-471b-bbf9-310d530207b3"
              },
              "rules": [
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "create",
                    "delete",
                    "list",
                    "patch",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
        "object": {
          "kind": "ServiceAccount",
          "name": "kubescape",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "kubescape",
                  "app.kubernetes.io/component": "kubescape",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "kubescape",
                "resourceVersion": "1847190",
                "uid": "ccd08f3f-31bc-49d0-9b5c-2d8180c1fc90"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "kubescape"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "kubescape",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "kubescape",
                  "app.kubernetes.io/component": "kubescape",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "kubescape",
                "resourceVersion": "1847177",
                "uid": "8c2dc4b3-0fd2-4d90-af25-cb1d63b0391d"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods",
                    "pods/proxy",
                    "namespaces",
                    "secrets",
                    "nodes",
                    "configmaps",
                    "services",
                    "serviceaccounts",
                    "endpoints",
                    "persistentvolumeclaims",
                    "persistentvolumes",
                    "limitranges",
                    "replicationcontrollers",
                    "podtemplates",
                    "resourcequotas",
                    "events"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "admissionregistration.k8s.io"
                  ],
                  "resources": [
                    "mutatingwebhookconfigurations",
                    "validatingwebhookconfigurations"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "apiregistration.k8s.io"
                  ],
                  "resources": [
                    "apiservices"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "deployments",
                    "statefulsets",
                    "daemonsets",
                    "replicasets",
                    "controllerrevisions"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "autoscaling"
                  ],
                  "resources": [
                    "horizontalpodautoscalers"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs",
                    "cronjobs"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "coordination.k8s.io"
                  ],
                  "resources": [
                    "leases"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "discovery.k8s.io"
                  ],
                  "resources": [
                    "endpointslices"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "hostdata.kubescape.cloud"
                  ],
                  "resources": [
                    "APIServerInfo",
                    "ControlPlaneInfo"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "networking.k8s.io"
                  ],
                  "resources": [
                    "networkpolicies",
                    "Ingress"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "cilium.io"
                  ],
                  "resources": [
                    "ciliumnetworkpolicies"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "projectcalico.org"
                  ],
                  "resources": [
                    "networkpolicies"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "networking.istio.io"
                  ],
                  "resources": [
                    "gateways",
                    "virtualservices"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "security.istio.io"
                  ],
                  "resources": [
                    "authorizationpolicies"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "policy"
                  ],
                  "resources": [
                    "poddisruptionbudgets",
                    "podsecuritypolicies",
                    "PodSecurityPolicy"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "rbac.authorization.k8s.io"
                  ],
                  "resources": [
                    "clusterroles",
                    "clusterrolebindings",
                    "roles",
                    "rolebindings"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "csistoragecapacities",
                    "storageclasses"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "networking.k8s.io"
                  ],
                  "resources": [
                    "ingresses"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "extensions"
                  ],
                  "resources": [
                    "Ingress"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    "gateway.networking.k8s.io"
                  ],
                  "resources": [
                    "httproutes",
                    "gateways",
                    "gatewayclasses",
                    "tcproutes",
                    "tlsroutes",
                    "udproutes"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "namespaces"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "spdx.softwarecomposition.kubescape.io"
                  ],
                  "resources": [
                    "workloadconfigurationscans",
                    "workloadconfigurationscansummaries"
                  ],
                  "verbs": [
                    "create",
                    "update",
                    "patch"
                  ]
                },
                {
                  "apiGroups": [
                    "kubescape.io"
                  ],
                  "resources": [
                    "servicesscanresults"
                  ],
                  "verbs": [
                    "get",
                    "watch",
                    "list"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:disruption-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:disruption-controller",
            "resourceVersion": "191",
            "uid": "33840337-72f3-4bd7-ad45-cb4152ecdc65"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:disruption-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "disruption-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:horizontal-pod-autoscaler",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:horizontal-pod-autoscaler",
            "resourceVersion": "198",
            "uid": "65b906fd-9bd4-4bf8-81c3-d4c11c326006"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:horizontal-pod-autoscaler"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "horizontal-pod-autoscaler",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system::leader-locking-kube-scheduler",
            "namespace": "kube-system",
            "resourceVersion": "228",
            "uid": "03939fbe-2fcc-40b3-848d-7d2caecd0593"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "system::leader-locking-kube-scheduler"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "User",
              "name": "system:kube-scheduler"
            },
            {
              "kind": "ServiceAccount",
              "name": "kube-scheduler",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/kubernetes",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "component": "apiserver",
              "provider": "kubernetes"
            },
            "name": "kubernetes",
            "namespace": "default",
            "resourceVersion": "234",
            "uid": "247114d3-1387-42d9-a162-187ce0ec087f"
          },
          "spec": {
            "clusterIP": "10.96.0.1",
            "clusterIPs": [
              "10.96.0.1"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "https",
                "port": 443,
                "protocol": "TCP",
                "targetPort": 6443
              }
            ],
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/operator",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": false,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app": "operator",
              "app.kubernetes.io/component": "operator",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "operator",
            "namespace": "default",
            "resourceVersion": "1847134",
            "uid": "6d4a3fa9-06c0-497f-9b05-5a9bf075d17a"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/node-agent",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app": "node-agent",
              "app.kubernetes.io/component": "node-agent",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "node-agent",
            "namespace": "default",
            "resourceVersion": "1847133",
            "uid": "f040b8ca-c6da-4b54-84d8-70f598d7defe"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-proxy/rbac.authorization.k8s.io/v1//ClusterRole/system:node-proxier/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:node-proxier",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "User",
          "name": "system:kube-proxy",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:node-proxier",
                "resourceVersion": "179",
                "uid": "97a3bc0c-de2c-4f25-a079-0b2c45e2b995"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node-proxier"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-proxy"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:node-proxier",
                "resourceVersion": "139",
                "uid": "a19b3797-5e66-4841-b09f-0c22da423e21"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints",
                    "services"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "discovery.k8s.io"
                  ],
                  "resources": [
                    "endpointslices"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
        "object": {
          "kind": "ServiceAccount",
          "name": "kubescape",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "kubescape",
                  "app.kubernetes.io/component": "kubescape",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "kubescape",
                "namespace": "default",
                "resourceVersion": "1847206",
                "uid": "53d5e06b-6c0b-4440-9b2e-4802dafdc4bc"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kubescape"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "kubescape",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "kubescape",
                  "app.kubernetes.io/component": "kubescape",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "kubescape",
                "namespace": "default",
                "resourceVersion": "1847202",
                "uid": "f71b306c-fac1-42f0-9b56-2beca9ead8dc"
              },
              "rules": [
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "daemonsets"
                  ],
                  "verbs": [
                    "create",
                    "get",
                    "update",
                    "watch",
                    "list",
                    "patch",
                    "delete"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/operator",
        "object": {
          "apiVersion": "v1",
          "data": {
            "config.json": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "operator",
              "app.kubernetes.io/component": "operator",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "operator",
            "namespace": "default",
            "resourceVersion": "1847158",
            "uid": "475d7801-f719-419a-97c8-924d0a2cfdf9"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "node-agent",
              "app.kubernetes.io/component": "node-agent",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "node-agent",
            "resourceVersion": "1847192",
            "uid": "371badf5-9b9a-462e-acc9-2383f3ff613c"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "node-agent"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "node-agent",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/storage",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app": "storage",
              "app.kubernetes.io/component": "storage",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "storage",
            "namespace": "default",
            "resourceVersion": "1847137",
            "uid": "4f80399e-8216-43d1-9e88-47e8451b5328"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/service-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:service-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "service-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:service-controller",
                "resourceVersion": "209",
                "uid": "6057217a-5b92-466c-a751-6b632dedfc1e"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:service-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "service-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:service-controller",
                "resourceVersion": "164",
                "uid": "8d8a5734-310d-4b77-bbbc-b5d96131e10d"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "services"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "services/status"
                  ],
                  "verbs": [
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-public/ConfigMap/cluster-info",
        "object": {
          "apiVersion": "v1",
          "data": {
            "kubeconfig": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "cluster-info",
            "namespace": "kube-public",
            "resourceVersion": "37097",
            "uid": "e07dc92b-676d-4f0c-bba4-34f145c0e9be"
          }
        }
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/grafana",
        "object": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "NetworkPolicy",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "grafana",
              "app.kubernetes.io/version": "11.2.1",
              "helm.sh/chart": "grafana-8.5.2"
            },
            "name": "grafana",
            "namespace": "default",
            "resourceVersion": "1847115",
            "uid": "67df77d1-f19c-4908-9cde-7cf623bc04fe"
          },
          "spec": {
            "ingress": [
              {
                "ports": [
                  {
                    "port": 3000,
                    "protocol": "TCP"
                  }
                ]
              }
            ],
            "podSelector": {
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "grafana"
              }
            },
            "policyTypes": [
              "Ingress"
            ]
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
        "object": {
          "kind": "ServiceAccount",
          "name": "generic-garbage-collector",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:generic-garbage-collector",
                "resourceVersion": "197",
                "uid": "bdbc48d9-578c-407e-a10e-eaaa75c96012"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:generic-garbage-collector"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "generic-garbage-collector",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:generic-garbage-collector",
                "resourceVersion": "152",
                "uid": "fc344787-b335-4434-aec8-f147b7c2dc19"
              },
              "rules": [
                {
                  "apiGroups": [
                    "*"
                  ],
                  "resources": [
                    "*"
                  ],
                  "verbs": [
                    "delete",
                    "get",
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
        "object": {
          "apiVersion": "v1",
          "kind": "Pod",
          "metadata": {
            "annotations": {
              "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "192.168.65.3:6443",
              "kubernetes.io/config.hash": "3fe11f12ace7990088a27f5ac063bceb",
              "kubernetes.io/config.mirror": "3fe11f12ace7990088a27f5ac063bceb",
              "kubernetes.io/config.seen": "2024-09-25T04:19:43.733227331Z",
              "kubernetes.io/config.source": "file"
            },
            "creationTimestamp": "2024-09-25T04:19:54Z",
            "labels": {
              "component": "kube-apiserver",
              "tier": "control-plane"
            },
            "name": "kube-apiserver-docker-desktop",
            "namespace": "kube-system",
            "ownerReferences": [
              {
                "apiVersion": "v1",
                "controller": true,
                "kind": "Node",
                "name": "docker-desktop",
                "uid": "5bdfe2a9-b3e5-4af4-8da8-dc5d668b7959"
              }
            ],
            "resourceVersion": "1826961",
            "uid": "b32ba036-1acc-405f-bf13-8fad464dceb5"
          },
          "spec": {
            "containers": [
              {
                "name": "kube-apiserver",
                "image": "registry.k8s.io/kube-apiserver:v1.30.2",
                "command": [
                  "kube-apiserver",
                  "--advertise-address=192.168.65.3",
                  "--allow-privileged=true",
                  "--authorization-mode=Node,RBAC",
                  "--client-ca-file=/run/config/pki/ca.crt",
                  "--enable-admission-plugins=NodeRestriction",
                  "--enable-bootstrap-token-auth=true",
                  "--etcd-cafile=/run/config/pki/etcd/ca.crt",
                  "--etcd-certfile=/run/config/pki/apiserver-etcd-client.crt",
                  "--etcd-keyfile=/run/config/pki/apiserver-etcd-client.key",
                  "--etcd-servers=https://127.0.0.1:2379",
                  "--kubelet-client-certificate=/run/config/pki/apiserver-kubelet-client.crt",
                  "--kubelet-client-key=/run/config/pki/apiserver-kubelet-client.key",
                  "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                  "--proxy-client-cert-file=/run/config/pki/front-proxy-client.crt",
                  "--proxy-client-key-file=/run/config/pki/front-proxy-client.key",
                  "--requestheader-allowed-names=front-proxy-client",
                  "--requestheader-client-ca-file=/run/config/pki/front-proxy-ca.crt",
                  "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                  "--requestheader-group-headers=X-Remote-Group",
                  "--requestheader-username-headers=X-Remote-User",
                  "--secure-port=6443",
                  "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                  "--service-account-key-file=/run/config/pki/sa.pub",
                  "--service-account-signing-key-file=/run/config/pki/sa.key",
                  "--service-cluster-ip-range=10.96.0.0/12",
                  "--tls-cert-file=/run/config/pki/apiserver.crt",
                  "--tls-private-key-file=/run/config/pki/apiserver.key",
                  "--watch-cache=false"
                ],
                "resources": {
                  "requests": {
                    "cpu": "250m"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "ca-certs",
                    "readOnly": true,
                    "mountPath": "/etc/ssl/certs"
                  },
                  {
                    "name": "etc-ca-certificates",
                    "readOnly": true,
                    "mountPath": "/etc/ca-certificates"
                  },
                  {
                    "name": "k8s-certs",
                    "readOnly": true,
                    "mountPath": "/run/config/pki"
                  },
                  {
                    "name": "usr-local-share-ca-certificates",
                    "readOnly": true,
                    "mountPath": "/usr/local/share/ca-certificates"
                  },
                  {
                    "name": "usr-share-ca-certificates",
                    "readOnly": true,
                    "mountPath": "/usr/share/ca-certificates"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/livez",
                    "port": 6443,
                    "host": "192.168.65.3",
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 15,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 8
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/readyz",
                    "port": 6443,
                    "host": "192.168.65.3",
                    "scheme": "HTTPS"
                  },
                  "timeoutSeconds": 15,
                  "periodSeconds": 1,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "startupProbe": {
                  "httpGet": {
                    "path": "/livez",
                    "port": 6443,
                    "host": "192.168.65.3",
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 15,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 24
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "enableServiceLinks": true,
            "hostNetwork": true,
            "nodeName": "docker-desktop",
            "preemptionPolicy": "PreemptLowerPriority",
            "priority": 2000001000,
            "priorityClassName": "system-node-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoExecute",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/etc/ssl/certs",
                  "type": "DirectoryOrCreate"
                },
                "name": "ca-certs"
              },
              {
                "hostPath": {
                  "path": "/etc/ca-certificates",
                  "type": "DirectoryOrCreate"
                },
                "name": "etc-ca-certificates"
              },
              {
                "hostPath": {
                  "path": "/run/config/pki",
                  "type": "DirectoryOrCreate"
                },
                "name": "k8s-certs"
              },
              {
                "hostPath": {
                  "path": "/usr/local/share/ca-certificates",
                  "type": "DirectoryOrCreate"
                },
                "name": "usr-local-share-ca-certificates"
              },
              {
                "hostPath": {
                  "path": "/usr/share/ca-certificates",
                  "type": "DirectoryOrCreate"
                },
                "name": "usr-share-ca-certificates"
              }
            ]
          }
        }
      },
      {
        "resourceID": "/default/Deployment/prometheus-msteams",
        "object": {
          "kind": "Deployment",
          "name": "prometheus-msteams",
          "namespace": "default",
          "relatedObjects": {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
              "annotations": {
                "meta.helm.sh/release-name": "obs",
                "meta.helm.sh/release-namespace": "default"
              },
              "creationTimestamp": "2024-11-29T06:19:53Z",
              "labels": {
                "app": "prometheus-msteams",
                "app.kubernetes.io/managed-by": "Helm",
                "chart": "prometheus-msteams-1.3.4",
                "heritage": "Helm",
                "release": "obs"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:meta.helm.sh/release-name": {},
                        "f:meta.helm.sh/release-namespace": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:app": {},
                        "f:app.kubernetes.io/managed-by": {},
                        "f:chart": {},
                        "f:heritage": {},
                        "f:release": {}
                      }
                    },
                    "f:spec": {
                      "f:internalTrafficPolicy": {},
                      "f:ports": {
                        ".": {},
                        "k:{\"port\":2000,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        }
                      },
                      "f:selector": {},
                      "f:sessionAffinity": {},
                      "f:type": {}
                    }
                  },
                  "manager": "helm",
                  "operation": "Update",
                  "time": "2024-11-29T06:19:53Z"
                }
              ],
              "name": "prometheus-msteams",
              "namespace": "default",
              "resourceVersion": "1847309",
              "uid": "8b83a2f9-14e3-4abf-ad70-29d5fd0a8587"
            },
            "spec": {
              "clusterIP": "10.100.174.252",
              "clusterIPs": [
                "10.100.174.252"
              ],
              "internalTrafficPolicy": "Cluster",
              "ipFamilies": [
                "IPv4"
              ],
              "ipFamilyPolicy": "SingleStack",
              "ports": [
                {
                  "port": 2000,
                  "protocol": "TCP",
                  "targetPort": "http"
                }
              ],
              "selector": {
                "app": "prometheus-msteams",
                "release": "obs"
              },
              "sessionAffinity": "None",
              "type": "ClusterIP"
            },
            "status": {
              "loadBalancer": {}
            }
          }
        }
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/loki-distributed-egress-dns",
        "object": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "NetworkPolicy",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-egress-dns",
            "namespace": "default",
            "resourceVersion": "1847117",
            "uid": "b271180c-70df-4b86-9f56-a962117da7d2"
          },
          "spec": {
            "egress": [
              {
                "ports": [
                  {
                    "port": 53,
                    "protocol": "UDP"
                  }
                ],
                "to": [
                  {
                    "namespaceSelector": {}
                  }
                ]
              }
            ],
            "podSelector": {
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "loki-distributed"
              }
            },
            "policyTypes": [
              "Egress"
            ]
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/tempo-memcached",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "memcached",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-memcached",
            "namespace": "default",
            "resourceVersion": "1847355",
            "uid": "6f439507-8e6a-443f-bba2-a8557ba54dd9"
          },
          "spec": {
            "clusterIP": "10.110.123.122",
            "clusterIPs": [
              "10.110.123.122"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "memcached-client",
                "port": 11211,
                "protocol": "TCP",
                "targetPort": 11211
              },
              {
                "name": "http-metrics",
                "port": 9150,
                "protocol": "TCP",
                "targetPort": "http-metrics"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "memcached",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "tempo"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:volume-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:volume-scheduler",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "User",
          "name": "system:kube-scheduler",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:volume-scheduler",
                "resourceVersion": "183",
                "uid": "1bb5ebd6-287d-402b-a36d-f831e62023ef"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:volume-scheduler"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-scheduler"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:volume-scheduler",
                "resourceVersion": "133",
                "uid": "7bb99421-55d8-4472-9d47-af030e9648df"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "storageclasses"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/otel-collector",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:54Z",
            "generation": 1,
            "labels": {
              "app": "otel-collector",
              "app.kubernetes.io/component": "otel-collector",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "otel-collector",
            "namespace": "default",
            "resourceVersion": "1847962",
            "uid": "456b0090-e043-4776-935d-0d32e9ccbda4"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 2,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "otel-collector",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kubescape-operator"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": "0%",
                "maxUnavailable": "100%"
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/otel-config": "9664e5ff4b85aefd05c22b26a5d00761ca6a840ae8f1a92fc0f7f5dcb7813d59"
                },
                "creationTimestamp": null,
                "labels": {
                  "app": "otel-collector",
                  "app.kubernetes.io/component": "otel-collector",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "kubescape.io/tier": "core",
                  "tier": "ks-control-plane"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "otel-collector",
                    "image": "docker.io/otel/opentelemetry-collector:0.108.0",
                    "command": [
                      "/otelcol",
                      "--config=/conf/otel-collector-config.yaml"
                    ],
                    "ports": [
                      {
                        "name": "otlp",
                        "containerPort": 4317,
                        "protocol": "TCP"
                      },
                      {
                        "name": "otlp-http",
                        "containerPort": 4318,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "CLOUD_OTEL_COLLECTOR_URL",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "configMapKeyRef": {
                            "name": "ks-cloud-config",
                            "key": "metrics"
                          }
                        }
                      },
                      {
                        "name": "GOMEMLIMIT",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.memory",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOMAXPROCS",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.cpu",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOGC",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "1",
                        "memory": "1Gi"
                      },
                      "requests": {
                        "cpu": "100m",
                        "memory": "500Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "otel-collector-config-volume",
                        "mountPath": "/conf"
                      }
                    ],
                    "livenessProbe": {
                      "tcpSocket": {
                        "port": "otlp"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "tcpSocket": {
                        "port": "otlp"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "runAsUser": 100,
                      "runAsNonRoot": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "otel-collector",
                "serviceAccountName": "otel-collector",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "otel-collector-config"
                    },
                    "name": "otel-collector-config-volume"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/tempo-runtime",
        "object": {
          "apiVersion": "v1",
          "data": {
            "overrides.yaml": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-runtime",
            "namespace": "default",
            "resourceVersion": "1847171",
            "uid": "117d5117-ea37-4667-92a0-79fc98fc0012"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/tempo-distributor-discovery",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "distributor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5",
              "prometheus.io/service-monitor": "false"
            },
            "name": "tempo-distributor-discovery",
            "namespace": "default",
            "resourceVersion": "1847336",
            "uid": "a5a67596-f633-495e-a6fb-562e43240ed0"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http-metrics",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http-metrics"
              },
              {
                "name": "distributor-otlp-http",
                "port": 4318,
                "protocol": "TCP",
                "targetPort": "otlp-http"
              },
              {
                "name": "grpc-distributor-otlp",
                "port": 4317,
                "protocol": "TCP",
                "targetPort": "grpc-otlp"
              },
              {
                "name": "distributor-otlp-legacy",
                "port": 55680,
                "protocol": "TCP",
                "targetPort": "grpc-otlp"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "distributor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "tempo"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/prometheus-server-headless",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/part-of": "prometheus",
              "app.kubernetes.io/version": "v2.54.1",
              "helm.sh/chart": "prometheus-25.27.0"
            },
            "name": "prometheus-server-headless",
            "namespace": "default",
            "resourceVersion": "1847325",
            "uid": "e05eab8a-f8b0-4501-bd1a-a261a8d30e15"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 80,
                "protocol": "TCP",
                "targetPort": 9090
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "prometheus"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/coredns",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "coredns",
            "namespace": "kube-system",
            "resourceVersion": "270",
            "uid": "5137b4bc-8d13-4a4f-8017-23d6db71a291"
          }
        }
      },
      {
        "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
        "object": {
          "kind": "ServiceAccount",
          "name": "prometheus-kube-state-metrics",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/component": "metrics",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kube-state-metrics",
                  "app.kubernetes.io/part-of": "kube-state-metrics",
                  "app.kubernetes.io/version": "2.13.0",
                  "helm.sh/chart": "kube-state-metrics-5.25.1"
                },
                "name": "prometheus-kube-state-metrics",
                "resourceVersion": "1847198",
                "uid": "9e2c5a19-59f6-42f4-93e8-9ee60ddf9840"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "prometheus-kube-state-metrics"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "prometheus-kube-state-metrics",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/component": "metrics",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kube-state-metrics",
                  "app.kubernetes.io/part-of": "kube-state-metrics",
                  "app.kubernetes.io/version": "2.13.0",
                  "helm.sh/chart": "kube-state-metrics-5.25.1"
                },
                "name": "prometheus-kube-state-metrics",
                "resourceVersion": "1847184",
                "uid": "de8b65fd-de33-4565-8051-154cd71d14d5"
              },
              "rules": [
                {
                  "apiGroups": [
                    "certificates.k8s.io"
                  ],
                  "resources": [
                    "certificatesigningrequests"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "cronjobs"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "extensions",
                    "apps"
                  ],
                  "resources": [
                    "daemonsets"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "extensions",
                    "apps"
                  ],
                  "resources": [
                    "deployments"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "autoscaling"
                  ],
                  "resources": [
                    "horizontalpodautoscalers"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "extensions",
                    "networking.k8s.io"
                  ],
                  "resources": [
                    "ingresses"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "batch"
                  ],
                  "resources": [
                    "jobs"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "coordination.k8s.io"
                  ],
                  "resources": [
                    "leases"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "limitranges"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "admissionregistration.k8s.io"
                  ],
                  "resources": [
                    "mutatingwebhookconfigurations"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "namespaces"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "networking.k8s.io"
                  ],
                  "resources": [
                    "networkpolicies"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "nodes"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumes"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "policy"
                  ],
                  "resources": [
                    "poddisruptionbudgets"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "extensions",
                    "apps"
                  ],
                  "resources": [
                    "replicasets"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "replicationcontrollers"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "resourcequotas"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "secrets"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "services"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "apps"
                  ],
                  "resources": [
                    "statefulsets"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "storageclasses"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "admissionregistration.k8s.io"
                  ],
                  "resources": [
                    "validatingwebhookconfigurations"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "volumeattachments"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/clusterrole-aggregation-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:clusterrole-aggregation-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:clusterrole-aggregation-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "clusterrole-aggregation-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:clusterrole-aggregation-controller",
                "resourceVersion": "187",
                "uid": "83d3ebdf-973f-4eed-8359-50e04ef19555"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:clusterrole-aggregation-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "clusterrole-aggregation-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:clusterrole-aggregation-controller",
                "resourceVersion": "142",
                "uid": "39909ce4-b1bd-4078-a08c-79fad2029e1b"
              },
              "rules": [
                {
                  "apiGroups": [
                    "rbac.authorization.k8s.io"
                  ],
                  "resources": [
                    "clusterroles"
                  ],
                  "verbs": [
                    "escalate",
                    "get",
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:legacy-service-account-token-cleaner",
            "resourceVersion": "218",
            "uid": "b91b24f5-81c0-4a68-a332-114682e48a16"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:legacy-service-account-token-cleaner"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "legacy-service-account-token-cleaner",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/statefulset-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:52Z",
            "name": "statefulset-controller",
            "namespace": "kube-system",
            "resourceVersion": "283",
            "uid": "ffcce3a8-07d8-4a03-91ca-d43600834845"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/ephemeral-volume-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ephemeral-volume-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ephemeral-volume-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "ephemeral-volume-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ephemeral-volume-controller",
                "resourceVersion": "196",
                "uid": "af3428c4-2ed4-429a-b05f-15092e5d9086"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:ephemeral-volume-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "ephemeral-volume-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ephemeral-volume-controller",
                "resourceVersion": "151",
                "uid": "02f0414b-f691-4a6a-9f48-e797ffc3b514"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "pods/finalizers"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims"
                  ],
                  "verbs": [
                    "create",
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "User",
          "name": "system:kube-scheduler",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::extension-apiserver-authentication-reader",
                "namespace": "kube-system",
                "resourceVersion": "226",
                "uid": "5837a414-9d9e-4114-9d81-d1b943a0e12d"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "extension-apiserver-authentication-reader"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-controller-manager"
                },
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "User",
                  "name": "system:kube-scheduler"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "extension-apiserver-authentication-reader",
                "namespace": "kube-system",
                "resourceVersion": "220",
                "uid": "b0f2ed4f-ed43-4072-9d13-13ff6f54f42a"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resourceNames": [
                    "extension-apiserver-authentication"
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:service-controller",
            "resourceVersion": "209",
            "uid": "6057217a-5b92-466c-a751-6b632dedfc1e"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:service-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "service-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:cronjob-controller",
            "resourceVersion": "188",
            "uid": "f80e98a5-afdb-418a-8c14-9e018a7a0d59"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:cronjob-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "cronjob-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/cronjob-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "cronjob-controller",
            "namespace": "kube-system",
            "resourceVersion": "267",
            "uid": "16cfb4d3-f82b-45ac-ba0a-6c7383432f78"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/horizontal-pod-autoscaler",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "horizontal-pod-autoscaler",
            "namespace": "kube-system",
            "resourceVersion": "263",
            "uid": "0d20099a-8144-4417-92ff-e52d2b302092"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/prometheus-exporter",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": false,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app": "prometheus-exporter",
              "app.kubernetes.io/component": "prometheus-exporter",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "prometheus-exporter",
            "namespace": "default",
            "resourceVersion": "1847136",
            "uid": "1cbded1a-3d2f-4ed9-adf5-309216839bc5"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/generic-garbage-collector",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:54Z",
            "name": "generic-garbage-collector",
            "namespace": "kube-system",
            "resourceVersion": "301",
            "uid": "3fc8c666-7cdc-40ac-9dca-de397e7418fd"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
        "object": {
          "kind": "ServiceAccount",
          "name": "bootstrap-signer",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "RoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-system",
                "resourceVersion": "229",
                "uid": "968514ee-35e3-4bc4-ae9d-4f206121ac2c"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system:controller:bootstrap-signer"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "bootstrap-signer",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "Role",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-system",
                "resourceVersion": "221",
                "uid": "a981496f-9d97-4eb9-932a-83483e6e1555"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "secrets"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:unauthenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:public-info-viewer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:unauthenticated",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:public-info-viewer",
                "resourceVersion": "178",
                "uid": "d0f17149-e027-4f1f-8b9d-b1f62923d9b0"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:public-info-viewer"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:authenticated"
                },
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:unauthenticated"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:public-info-viewer",
                "resourceVersion": "113",
                "uid": "9434990b-4b0b-4184-84d0-556f14185790"
              },
              "rules": [
                {
                  "nonResourceURLs": [
                    "/healthz",
                    "/livez",
                    "/readyz",
                    "/version",
                    "/version/"
                  ],
                  "verbs": [
                    "get"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-autoapprove-certificate-rotation",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "kubeadm:node-autoapprove-certificate-rotation",
            "resourceVersion": "252",
            "uid": "73189d9f-0117-400b-8008-85b585bda09d"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:nodes"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/tempo-config",
        "object": {
          "apiVersion": "v1",
          "data": {
            "tempo-query.yaml": "XXXXXX",
            "tempo.yaml": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-config",
            "namespace": "default",
            "resourceVersion": "1847172",
            "uid": "6f29bac4-9813-4cdd-a96d-3bd497f7b9db"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslice-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:endpointslice-controller",
            "resourceVersion": "193",
            "uid": "e6aa454f-788c-4257-b9b0-7289d5e69a5b"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:endpointslice-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "endpointslice-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/Service/tempo-querier",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "querier",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-querier",
            "namespace": "default",
            "resourceVersion": "1847359",
            "uid": "1dfa934e-596b-4576-b2df-a37da1d380cf"
          },
          "spec": {
            "clusterIP": "10.99.217.193",
            "clusterIPs": [
              "10.99.217.193"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http-metrics",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": 3100
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": 9095
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "querier",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "tempo"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-memberlist",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-memberlist",
            "namespace": "default",
            "resourceVersion": "1847305",
            "uid": "b99122ff-e621-4705-b6da-1ecceddbe057"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "tcp",
                "port": 7946,
                "protocol": "TCP",
                "targetPort": "http-memberlist"
              }
            ],
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/part-of": "memberlist"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-query-frontend",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "query-frontend",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-query-frontend",
            "namespace": "default",
            "resourceVersion": "1847302",
            "uid": "b2795bf8-099e-4120-a6ee-899dfdbfa767"
          },
          "spec": {
            "clusterIP": "10.99.201.45",
            "clusterIPs": [
              "10.99.201.45"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http"
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": "grpc"
              },
              {
                "name": "grpclb",
                "port": 9096,
                "protocol": "TCP",
                "targetPort": "grpc"
              }
            ],
            "publishNotReadyAddresses": true,
            "selector": {
              "app.kubernetes.io/component": "query-frontend",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/alertmanager",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alertmanager",
              "app.kubernetes.io/version": "v0.27.0",
              "helm.sh/chart": "alertmanager-1.13.1"
            },
            "name": "alertmanager",
            "namespace": "default",
            "resourceVersion": "1847211",
            "uid": "057a3310-8673-4830-b6ac-2138fb1315a3"
          },
          "spec": {
            "clusterIP": "10.111.11.3",
            "clusterIPs": [
              "10.111.11.3"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 9093,
                "protocol": "TCP",
                "targetPort": "http"
              }
            ],
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "alertmanager"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/coredns/rbac.authorization.k8s.io/v1//ClusterRole/system:coredns/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:coredns",
        "object": {
          "kind": "ServiceAccount",
          "name": "coredns",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "system:coredns",
                "resourceVersion": "269",
                "uid": "70063f1e-c51f-45bb-a611-4bd96f771c04"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:coredns"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "coredns",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "system:coredns",
                "resourceVersion": "266",
                "uid": "287ab670-0693-4322-8794-1dd3d2bba4fa"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints",
                    "services",
                    "pods",
                    "namespaces"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "discovery.k8s.io"
                  ],
                  "resources": [
                    "endpointslices"
                  ],
                  "verbs": [
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-exporter",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "prometheus-exporter",
              "app.kubernetes.io/component": "prometheus-exporter",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "prometheus-exporter",
            "resourceVersion": "1847194",
            "uid": "725c7e62-c7f1-46b0-9bf7-ce8f4863886b"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "prometheus-exporter"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "prometheus-exporter",
              "namespace": "default"
            }
          ]
        }
      },
      {
        "resourceID": "/default/ServiceAccount/fluent-bit/rbac.authorization.k8s.io/v1//ClusterRole/fluent-bit/rbac.authorization.k8s.io/v1//ClusterRoleBinding/fluent-bit",
        "object": {
          "kind": "ServiceAccount",
          "name": "fluent-bit",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "fluent-bit",
                  "app.kubernetes.io/version": "3.1.9",
                  "helm.sh/chart": "fluent-bit-0.47.10"
                },
                "name": "fluent-bit",
                "resourceVersion": "1847187",
                "uid": "b1ae106b-d6bd-4b86-9218-8a55a24d84c8"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "fluent-bit"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "fluent-bit",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "fluent-bit",
                  "app.kubernetes.io/version": "3.1.9",
                  "helm.sh/chart": "fluent-bit-0.47.10"
                },
                "name": "fluent-bit",
                "resourceVersion": "1847174",
                "uid": "fccce9a5-126b-4dc5-a67d-bdcc7116b0ab"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "namespaces",
                    "pods"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/grafana-dashboards-default",
        "object": {
          "apiVersion": "v1",
          "data": {
            "some-dashboard.json": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "grafana",
              "app.kubernetes.io/version": "11.2.1",
              "dashboard-provider": "default",
              "helm.sh/chart": "grafana-8.5.2"
            },
            "name": "grafana-dashboards-default",
            "namespace": "default",
            "resourceVersion": "1847150",
            "uid": "4dea89ac-a3dc-4bc8-84fd-e5e6ce7718f7"
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/kubescape-scheduler",
        "object": {
          "apiVersion": "v1",
          "data": {
            "request-body.json": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "kubescape-scheduler",
              "app.kubernetes.io/component": "kubescape-scheduler",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "kubescape-scheduler",
            "namespace": "default",
            "resourceVersion": "1847154",
            "uid": "5eccd2ba-7290-459b-ad68-bc0bd597c0ea"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/kubescape",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "generation": 1,
            "labels": {
              "app": "kubescape",
              "app.kubernetes.io/component": "kubescape",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "kubescape",
            "namespace": "default",
            "resourceVersion": "1848025",
            "uid": "c9c9dff1-f64c-4070-b207-899a4aed4247"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 2,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "kubescape",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kubescape-operator"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": "0%",
                "maxUnavailable": "100%"
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/cloud-config": "88e74b1cdcc9075461153f9aa4ab5da3ad67280c46f317c599b4121b694e5c93",
                  "checksum/cloud-secret": "36b7ef21453a679289d8e51039f840d6c88d703464bc85df56f53c43682e07a9",
                  "checksum/host-scanner-configmap": "99d34be90a015465fc79ec108e36cc33f09c21a81dbbac1dc3badea5aa37dc0d",
                  "prometheus.io/path": "/v1/metrics",
                  "prometheus.io/port": "8080",
                  "prometheus.io/scrape": "true"
                },
                "creationTimestamp": null,
                "labels": {
                  "app": "kubescape",
                  "app.kubernetes.io/component": "kubescape",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "kubescape.io/tier": "core",
                  "otel": "enabled",
                  "tier": "ks-control-plane"
                }
              },
              "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "kubescape",
                    "image": "quay.io/kubescape/kubescape:v3.0.21",
                    "command": [
                      "ksserver"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 8080,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "GOMEMLIMIT",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.memory",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOMAXPROCS",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.cpu",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "KS_LOGGER_LEVEL",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_LOGGER_NAME",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_DOWNLOAD_ARTIFACTS",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "RULE_PROCESSING_GOMAXPROCS",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_DEFAULT_CONFIGMAP_NAME",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_DEFAULT_CONFIGMAP_NAMESPACE",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "fieldRef": {
                            "apiVersion": "v1",
                            "fieldPath": "metadata.namespace"
                          }
                        }
                      },
                      {
                        "name": "KS_CONTEXT",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_DEFAULT_CLOUD_CONFIGMAP_NAME",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_ENABLE_HOST_SCANNER",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_SKIP_UPDATE_CHECK",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_HOST_SCAN_YAML",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "LARGE_CLUSTER_SIZE",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "ACCOUNT_ID",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "cloud-secret",
                            "key": "account"
                          }
                        }
                      },
                      {
                        "name": "OTEL_COLLECTOR_SVC",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "600m",
                        "memory": "1Gi"
                      },
                      "requests": {
                        "cpu": "250m",
                        "memory": "400Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "cloud-secret",
                        "readOnly": true,
                        "mountPath": "/etc/credentials"
                      },
                      {
                        "name": "kubescape-volume",
                        "mountPath": "/home/nonroot/.kubescape",
                        "subPath": "config.json"
                      },
                      {
                        "name": "host-scanner-definition",
                        "mountPath": "/home/nonroot/.kubescape/host-scanner.yaml",
                        "subPath": "host-scanner-yaml"
                      },
                      {
                        "name": "results",
                        "mountPath": "/home/nonroot/results"
                      },
                      {
                        "name": "failed",
                        "mountPath": "/home/nonroot/failed"
                      },
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/livez",
                        "port": 8080,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 3,
                      "timeoutSeconds": 1,
                      "periodSeconds": 3,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/readyz",
                        "port": 8080,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 3,
                      "timeoutSeconds": 1,
                      "periodSeconds": 3,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65532,
                  "runAsUser": 65532
                },
                "serviceAccount": "kubescape",
                "serviceAccountName": "kubescape",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "name": "cloud-secret",
                    "secret": {
                      "defaultMode": 420,
                      "secretName": "cloud-secret"
                    }
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "clusterData",
                          "path": "clusterData.json"
                        },
                        {
                          "key": "services",
                          "path": "services.json"
                        }
                      ],
                      "name": "ks-cloud-config"
                    },
                    "name": "ks-cloud-config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "name": "host-scanner-definition"
                    },
                    "name": "host-scanner-definition"
                  },
                  {
                    "emptyDir": {},
                    "name": "kubescape-volume"
                  },
                  {
                    "emptyDir": {},
                    "name": "results"
                  },
                  {
                    "emptyDir": {},
                    "name": "failed"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/fluent-bit",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "fluent-bit",
              "app.kubernetes.io/version": "3.1.9",
              "helm.sh/chart": "fluent-bit-0.47.10"
            },
            "name": "fluent-bit",
            "namespace": "default",
            "resourceVersion": "1847225",
            "uid": "2170635d-4829-424d-b8f1-c34f8cd37382"
          },
          "spec": {
            "clusterIP": "10.109.58.44",
            "clusterIPs": [
              "10.109.58.44"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 2020,
                "protocol": "TCP",
                "targetPort": "http"
              },
              {
                "name": "tcp",
                "port": 5170,
                "protocol": "TCP",
                "targetPort": "tcp"
              }
            ],
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "fluent-bit"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-compactor",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "compactor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-compactor",
            "namespace": "default",
            "resourceVersion": "1847269",
            "uid": "0dabda5c-f0ff-4c48-800f-21e370091f5e"
          },
          "spec": {
            "clusterIP": "10.108.187.203",
            "clusterIPs": [
              "10.108.187.203"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http"
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": "grpc"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "compactor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/root-ca-cert-publisher",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "root-ca-cert-publisher",
            "namespace": "kube-system",
            "resourceVersion": "258",
            "uid": "acdc400a-6bf0-4fa5-bf24-5a93673e1609"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/default",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:56Z",
            "name": "default",
            "namespace": "kube-system",
            "resourceVersion": "328",
            "uid": "89332fae-e7a6-4591-8d90-c809f03885a5"
          }
        }
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/service-account-controller",
        "object": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:53Z",
            "name": "service-account-controller",
            "namespace": "kube-system",
            "resourceVersion": "292",
            "uid": "c77b2940-1460-4e60-bd21-6761897ef951"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "expand-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:expand-controller",
                "resourceVersion": "195",
                "uid": "62f14abb-4a78-450c-aef4-cdc1825f4f0d"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:expand-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "expand-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:expand-controller",
                "resourceVersion": "150",
                "uid": "52d8ebde-9a4e-4f08-92dc-5cb12b31b6c9"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumes"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "patch",
                    "update",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims/status"
                  ],
                  "verbs": [
                    "patch",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "persistentvolumeclaims"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    "storage.k8s.io"
                  ],
                  "resources": [
                    "storageclasses"
                  ],
                  "verbs": [
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "endpoints",
                    "services"
                  ],
                  "verbs": [
                    "get"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "secrets"
                  ],
                  "verbs": [
                    "get"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/cs-matching-rules",
        "object": {
          "apiVersion": "v1",
          "data": {
            "matchingRules.json": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "kubescape",
              "app.kubernetes.io/component": "kubescape",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "cs-matching-rules",
            "namespace": "default",
            "resourceVersion": "1847153",
            "uid": "42949164-dc0c-4255-9859-2fa70a3d3c91"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:node",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:node",
            "resourceVersion": "184",
            "uid": "8d5ad35c-2151-4aaf-b3c0-a57b4bce668c"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:node"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-distributor",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "distributor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "loki-distributed",
              "app.kubernetes.io/version": "2.9.10",
              "helm.sh/chart": "loki-distributed-0.79.4"
            },
            "name": "loki-distributed-distributor",
            "namespace": "default",
            "resourceVersion": "1847273",
            "uid": "3fe0ce1a-f87c-4ec4-b368-ab8af7675ac4"
          },
          "spec": {
            "clusterIP": "10.96.53.75",
            "clusterIPs": [
              "10.96.53.75"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": "http"
              },
              {
                "name": "grpc",
                "port": 9095,
                "protocol": "TCP",
                "targetPort": "grpc"
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "distributor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "loki-distributed"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:nodes/rbac.authorization.k8s.io/v1//ClusterRole/system:certificates.k8s.io:certificatesigningrequests:selfnodeclient/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-autoapprove-certificate-rotation",
        "object": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Group",
          "name": "system:nodes",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "creationTimestamp": "2024-09-25T04:19:51Z",
                "name": "kubeadm:node-autoapprove-certificate-rotation",
                "resourceVersion": "252",
                "uid": "73189d9f-0117-400b-8008-85b585bda09d"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient"
              },
              "subjects": [
                {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "Group",
                  "name": "system:nodes"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                "resourceVersion": "132",
                "uid": "82cf0cd0-c413-4444-8f47-b34592e6869d"
              },
              "rules": [
                {
                  "apiGroups": [
                    "certificates.k8s.io"
                  ],
                  "resources": [
                    "certificatesigningrequests/selfnodeclient"
                  ],
                  "verbs": [
                    "create"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/prometheus-kube-state-metrics",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:54Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "metrics",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kube-state-metrics",
              "app.kubernetes.io/part-of": "kube-state-metrics",
              "app.kubernetes.io/version": "2.13.0",
              "helm.sh/chart": "kube-state-metrics-5.25.1"
            },
            "name": "prometheus-kube-state-metrics",
            "namespace": "default",
            "resourceVersion": "1848052",
            "uid": "b7f97c3b-ee80-48aa-8ea0-d4d103281a3d"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kube-state-metrics"
              }
            },
            "strategy": {
              "rollingUpdate": {
                "maxSurge": "25%",
                "maxUnavailable": "25%"
              },
              "type": "RollingUpdate"
            },
            "template": {
              "metadata": {
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "metrics",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kube-state-metrics",
                  "app.kubernetes.io/part-of": "kube-state-metrics",
                  "app.kubernetes.io/version": "2.13.0",
                  "helm.sh/chart": "kube-state-metrics-5.25.1"
                }
              },
              "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "kube-state-metrics",
                    "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.13.0",
                    "args": [
                      "--port=8080",
                      "--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments"
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 8080,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/livez",
                        "port": 8080,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 5,
                      "timeoutSeconds": 5,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/readyz",
                        "port": 8080,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 5,
                      "timeoutSeconds": 5,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "serviceAccount": "prometheus-kube-state-metrics",
                "serviceAccountName": "prometheus-kube-state-metrics",
                "terminationGracePeriodSeconds": 30
              }
            }
          }
        }
      },
      {
        "resourceID": "apps/v1/default/StatefulSet/tempo-ingester",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "StatefulSet",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:59Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "ingester",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/part-of": "memberlist",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-ingester",
            "namespace": "default",
            "resourceVersion": "1848336",
            "uid": "18f62c7f-3b7f-4fd6-b1c4-a54a2d62517d"
          },
          "spec": {
            "persistentVolumeClaimRetentionPolicy": {
              "whenDeleted": "Retain",
              "whenScaled": "Retain"
            },
            "podManagementPolicy": "Parallel",
            "replicas": 2,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "ingester",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "tempo"
              }
            },
            "serviceName": "ingester",
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/config": "9d41dbb2e1e83f92fb6f56997bd79a1cb538e23a39fe246d44cfd878ca8114c7"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "ingester",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "tempo",
                  "app.kubernetes.io/part-of": "memberlist",
                  "app.kubernetes.io/version": "2.6.0",
                  "helm.sh/chart": "tempo-distributed-1.18.5"
                }
              },
              "spec": {
                "affinity": {
                  "podAntiAffinity": {
                    "preferredDuringSchedulingIgnoredDuringExecution": [
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "ingester",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "tempo"
                            }
                          },
                          "topologyKey": "kubernetes.io/hostname"
                        },
                        "weight": 100
                      },
                      {
                        "podAffinityTerm": {
                          "labelSelector": {
                            "matchLabels": {
                              "app.kubernetes.io/component": "ingester",
                              "app.kubernetes.io/instance": "obs",
                              "app.kubernetes.io/name": "tempo"
                            }
                          },
                          "topologyKey": "topology.kubernetes.io/zone"
                        },
                        "weight": 75
                      }
                    ]
                  }
                },
                "containers": [
                  {
                    "name": "ingester",
                    "image": "docker.io/grafana/tempo:2.6.0",
                    "args": [
                      "-target=ingester",
                      "-config.file=/conf/tempo.yaml",
                      "-mem-ballast-size-mbs=1024"
                    ],
                    "ports": [
                      {
                        "name": "grpc",
                        "containerPort": 9095,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-memberlist",
                        "containerPort": 7946,
                        "protocol": "TCP"
                      },
                      {
                        "name": "http-metrics",
                        "containerPort": 3100,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "config",
                        "mountPath": "/conf"
                      },
                      {
                        "name": "runtime-config",
                        "mountPath": "/runtime-config"
                      },
                      {
                        "name": "data",
                        "mountPath": "/var/tempo"
                      }
                    ],
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/ready",
                        "port": "http-metrics",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 30,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "runAsUser": 1000,
                      "runAsGroup": 1000,
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": false,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 1000
                },
                "serviceAccount": "tempo",
                "serviceAccountName": "tempo",
                "terminationGracePeriodSeconds": 300,
                "topologySpreadConstraints": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/component": "ingester",
                        "app.kubernetes.io/instance": "obs",
                        "app.kubernetes.io/name": "tempo"
                      }
                    },
                    "maxSkew": 1,
                    "topologyKey": "topology.kubernetes.io/zone",
                    "whenUnsatisfiable": "ScheduleAnyway"
                  }
                ],
                "volumes": [
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "tempo.yaml",
                          "path": "tempo.yaml"
                        }
                      ],
                      "name": "tempo-config"
                    },
                    "name": "config"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "overrides.yaml",
                          "path": "overrides.yaml"
                        }
                      ],
                      "name": "tempo-runtime"
                    },
                    "name": "runtime-config"
                  },
                  {
                    "emptyDir": {},
                    "name": "data"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "partition": 0
              },
              "type": "RollingUpdate"
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:clusterrole-aggregation-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:clusterrole-aggregation-controller",
            "resourceVersion": "187",
            "uid": "83d3ebdf-973f-4eed-8359-50e04ef19555"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:clusterrole-aggregation-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "clusterrole-aggregation-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:statefulset-controller",
            "resourceVersion": "210",
            "uid": "8969d46a-531f-4072-bfe8-6f28527d9756"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:statefulset-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "statefulset-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:persistent-volume-binder",
            "resourceVersion": "202",
            "uid": "b961a2c8-1e44-4f4f-b777-173d78414408"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:persistent-volume-binder"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "persistent-volume-binder",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pvc-protection-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:pvc-protection-controller",
            "resourceVersion": "213",
            "uid": "96ac58c2-6d2a-4cb7-a62b-e52737969595"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:pvc-protection-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "pvc-protection-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/default/DaemonSet/fluent-bit",
        "object": {
          "kind": "DaemonSet",
          "name": "fluent-bit",
          "namespace": "default",
          "relatedObjects": {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
              "annotations": {
                "meta.helm.sh/release-name": "obs",
                "meta.helm.sh/release-namespace": "default"
              },
              "creationTimestamp": "2024-11-29T06:19:52Z",
              "labels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "fluent-bit",
                "app.kubernetes.io/version": "3.1.9",
                "helm.sh/chart": "fluent-bit-0.47.10"
              },
              "managedFields": [
                {
                  "apiVersion": "v1",
                  "fieldsType": "FieldsV1",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:meta.helm.sh/release-name": {},
                        "f:meta.helm.sh/release-namespace": {}
                      },
                      "f:labels": {
                        ".": {},
                        "f:app.kubernetes.io/instance": {},
                        "f:app.kubernetes.io/managed-by": {},
                        "f:app.kubernetes.io/name": {},
                        "f:app.kubernetes.io/version": {},
                        "f:helm.sh/chart": {}
                      }
                    },
                    "f:spec": {
                      "f:internalTrafficPolicy": {},
                      "f:ports": {
                        ".": {},
                        "k:{\"port\":2020,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        },
                        "k:{\"port\":5170,\"protocol\":\"TCP\"}": {
                          ".": {},
                          "f:name": {},
                          "f:port": {},
                          "f:protocol": {},
                          "f:targetPort": {}
                        }
                      },
                      "f:selector": {},
                      "f:sessionAffinity": {},
                      "f:type": {}
                    }
                  },
                  "manager": "helm",
                  "operation": "Update",
                  "time": "2024-11-29T06:19:52Z"
                }
              ],
              "name": "fluent-bit",
              "namespace": "default",
              "resourceVersion": "1847225",
              "uid": "2170635d-4829-424d-b8f1-c34f8cd37382"
            },
            "spec": {
              "clusterIP": "10.109.58.44",
              "clusterIPs": [
                "10.109.58.44"
              ],
              "internalTrafficPolicy": "Cluster",
              "ipFamilies": [
                "IPv4"
              ],
              "ipFamilyPolicy": "SingleStack",
              "ports": [
                {
                  "name": "http",
                  "port": 2020,
                  "protocol": "TCP",
                  "targetPort": "http"
                },
                {
                  "name": "tcp",
                  "port": 5170,
                  "protocol": "TCP",
                  "targetPort": "tcp"
                }
              ],
              "selector": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "fluent-bit"
              },
              "sessionAffinity": "None",
              "type": "ClusterIP"
            },
            "status": {
              "loadBalancer": {}
            }
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/tempo-compactor",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "labels": {
              "app.kubernetes.io/component": "compactor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "tempo",
              "app.kubernetes.io/version": "2.6.0",
              "helm.sh/chart": "tempo-distributed-1.18.5"
            },
            "name": "tempo-compactor",
            "namespace": "default",
            "resourceVersion": "1847333",
            "uid": "cdb72159-ea66-4125-8a37-8b72577aa12e"
          },
          "spec": {
            "clusterIP": "10.109.150.159",
            "clusterIPs": [
              "10.109.150.159"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http-metrics",
                "port": 3100,
                "protocol": "TCP",
                "targetPort": 3100
              }
            ],
            "selector": {
              "app.kubernetes.io/component": "compactor",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "tempo"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/Service/alloy-cluster",
        "object": {
          "apiVersion": "v1",
          "kind": "Service",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:52Z",
            "labels": {
              "app.kubernetes.io/component": "networking",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "alloy",
              "app.kubernetes.io/part-of": "alloy",
              "app.kubernetes.io/version": "v1.4.2",
              "helm.sh/chart": "alloy-0.9.1"
            },
            "name": "alloy-cluster",
            "namespace": "default",
            "resourceVersion": "1847217",
            "uid": "879ae972-5ccf-4e0b-b2c6-982397f7471d"
          },
          "spec": {
            "clusterIP": "None",
            "clusterIPs": [
              "None"
            ],
            "internalTrafficPolicy": "Cluster",
            "ipFamilies": [
              "IPv4"
            ],
            "ipFamilyPolicy": "SingleStack",
            "ports": [
              {
                "name": "http",
                "port": 12345,
                "protocol": "TCP",
                "targetPort": 12345
              },
              {
                "name": "grpc",
                "port": 4323,
                "protocol": "TCP",
                "targetPort": 4323
              },
              {
                "name": "otel-http",
                "port": 4318,
                "protocol": "TCP",
                "targetPort": 4318
              }
            ],
            "publishNotReadyAddresses": true,
            "selector": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/name": "alloy"
            },
            "sessionAffinity": "None",
            "type": "ClusterIP"
          }
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/kubescape",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": false,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app": "kubescape",
              "app.kubernetes.io/component": "kubescape",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "kubescape",
            "namespace": "default",
            "resourceVersion": "1847131",
            "uid": "7ecf4259-50cb-4820-a348-e5cbac7ebb9f"
          }
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
        "object": {
          "kind": "ServiceAccount",
          "name": "namespace-controller",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:namespace-controller",
                "resourceVersion": "200",
                "uid": "59228777-76d4-4a84-a193-38606bffd66c"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:namespace-controller"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "namespace-controller",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:namespace-controller",
                "resourceVersion": "155",
                "uid": "cca0db06-7d9f-4cff-800b-deb3262c9f54"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "namespaces"
                  ],
                  "verbs": [
                    "delete",
                    "get",
                    "list",
                    "watch"
                  ]
                },
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "namespaces/finalize",
                    "namespaces/status"
                  ],
                  "verbs": [
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "*"
                  ],
                  "resources": [
                    "*"
                  ],
                  "verbs": [
                    "delete",
                    "deletecollection",
                    "get",
                    "list"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/otel-collector-config",
        "object": {
          "apiVersion": "v1",
          "data": {
            "otel-collector-config.yaml": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "ks-cloud-config",
              "app.kubernetes.io/component": "ks-cloud-config",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "otel-collector-config",
            "namespace": "default",
            "resourceVersion": "1847163",
            "uid": "87044038-b952-4f95-a2a8-5906c9731fe9"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "DaemonSet",
          "metadata": {
            "annotations": {
              "deprecated.daemonset.template.generation": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:53Z",
            "generation": 1,
            "labels": {
              "app.kubernetes.io/component": "metrics",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "prometheus",
              "app.kubernetes.io/part-of": "prometheus",
              "app.kubernetes.io/version": "1.8.2",
              "helm.sh/chart": "prometheus-node-exporter-4.39.0"
            },
            "name": "prometheus-node-exporter",
            "namespace": "default",
            "resourceVersion": "1848016",
            "uid": "c86a56bc-b4cb-4476-bcde-af6385c7a6d9"
          },
          "spec": {
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "prometheus"
              }
            },
            "template": {
              "metadata": {
                "annotations": {
                  "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                },
                "creationTimestamp": null,
                "labels": {
                  "app.kubernetes.io/component": "metrics",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "prometheus",
                  "app.kubernetes.io/part-of": "prometheus",
                  "app.kubernetes.io/version": "1.8.2",
                  "helm.sh/chart": "prometheus-node-exporter-4.39.0"
                }
              },
              "spec": {
                "automountServiceAccountToken": false,
                "containers": [
                  {
                    "name": "node-exporter",
                    "image": "quay.io/prometheus/node-exporter:v1.8.2",
                    "args": [
                      "--path.procfs=/host/proc",
                      "--path.sysfs=/host/sys",
                      "--web.listen-address=[$(HOST_IP)]:9100"
                    ],
                    "ports": [
                      {
                        "name": "metrics",
                        "containerPort": 9100,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "HOST_IP",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "proc",
                        "readOnly": true,
                        "mountPath": "/host/proc"
                      },
                      {
                        "name": "sys",
                        "readOnly": true,
                        "mountPath": "/host/sys"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/",
                        "port": 9100,
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/",
                        "port": 9100,
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": true
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "hostNetwork": true,
                "hostPID": true,
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "serviceAccount": "prometheus-node-exporter",
                "serviceAccountName": "prometheus-node-exporter",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "operator": "Exists"
                  }
                ],
                "volumes": [
                  {
                    "hostPath": {
                      "path": "/proc",
                      "type": ""
                    },
                    "name": "proc"
                  },
                  {
                    "hostPath": {
                      "path": "/sys",
                      "type": ""
                    },
                    "name": "sys"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
              },
              "type": "RollingUpdate"
            }
          }
        }
      },
      {
        "resourceID": "apps/v1/default/StatefulSet/kollector",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "StatefulSet",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:57Z",
            "generation": 1,
            "labels": {
              "app": "kollector",
              "app.kubernetes.io/component": "kollector",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "kollector",
            "namespace": "default",
            "resourceVersion": "1858507",
            "uid": "26e61e64-7f70-418a-be6d-83678a4058a8"
          },
          "spec": {
            "persistentVolumeClaimRetentionPolicy": {
              "whenDeleted": "Retain",
              "whenScaled": "Retain"
            },
            "podManagementPolicy": "OrderedReady",
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "kollector",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kubescape-operator"
              }
            },
            "serviceName": "",
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/cloud-config": "88e74b1cdcc9075461153f9aa4ab5da3ad67280c46f317c599b4121b694e5c93",
                  "checksum/cloud-secret": "36b7ef21453a679289d8e51039f840d6c88d703464bc85df56f53c43682e07a9"
                },
                "creationTimestamp": null,
                "labels": {
                  "app": "kollector",
                  "app.kubernetes.io/component": "kollector",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "kubescape.io/tier": "core",
                  "otel": "enabled",
                  "tier": "ks-control-plane"
                }
              },
              "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "kollector",
                    "image": "quay.io/kubescape/kollector:v0.1.45",
                    "args": [
                      "-alsologtostderr",
                      "-v=4",
                      "2>&1"
                    ],
                    "ports": [
                      {
                        "name": "readiness-port",
                        "containerPort": 8000,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "GOMEMLIMIT",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.memory",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOMAXPROCS",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.cpu",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "KS_LOGGER_LEVEL",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_LOGGER_NAME",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "NAMESPACE",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "fieldRef": {
                            "apiVersion": "v1",
                            "fieldPath": "metadata.namespace"
                          }
                        }
                      },
                      {
                        "name": "ACCOUNT_ID",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "cloud-secret",
                            "key": "account"
                          }
                        }
                      },
                      {
                        "name": "OTEL_COLLECTOR_SVC",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "500m",
                        "memory": "500Mi"
                      },
                      "requests": {
                        "cpu": "10m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "cloud-secret",
                        "readOnly": true,
                        "mountPath": "/etc/credentials"
                      },
                      {
                        "name": "tmp-dir",
                        "mountPath": "/tmp"
                      },
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/v1/liveness",
                        "port": "readiness-port",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 3,
                      "timeoutSeconds": 1,
                      "periodSeconds": 3,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/v1/readiness",
                        "port": "readiness-port",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 1,
                      "periodSeconds": 5,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "runAsUser": 100,
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kollector",
                "serviceAccountName": "kollector",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "name": "cloud-secret",
                    "secret": {
                      "defaultMode": 420,
                      "secretName": "cloud-secret"
                    }
                  },
                  {
                    "emptyDir": {},
                    "name": "tmp-dir"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "clusterData",
                          "path": "clusterData.json"
                        },
                        {
                          "key": "services",
                          "path": "services.json"
                        }
                      ],
                      "name": "ks-cloud-config"
                    },
                    "name": "ks-cloud-config"
                  }
                ]
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "partition": 0
              },
              "type": "RollingUpdate"
            }
          }
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "annotations": {
              "rbac.authorization.kubernetes.io/autoupdate": "true"
            },
            "creationTimestamp": "2024-09-25T04:19:50Z",
            "labels": {
              "kubernetes.io/bootstrapping": "rbac-defaults"
            },
            "name": "system:controller:deployment-controller",
            "resourceVersion": "190",
            "uid": "7ce7fdf7-63be-4763-ba52-81cfe985e3ee"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:controller:deployment-controller"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": "deployment-controller",
              "namespace": "kube-system"
            }
          ]
        }
      },
      {
        "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
        "object": {
          "kind": "ServiceAccount",
          "name": "root-ca-cert-publisher",
          "namespace": "kube-system",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:50Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:root-ca-cert-publisher",
                "resourceVersion": "216",
                "uid": "98ab682d-9419-4805-b80b-7f86d4a7935a"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:root-ca-cert-publisher"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "root-ca-cert-publisher",
                  "namespace": "kube-system"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:root-ca-cert-publisher",
                "resourceVersion": "171",
                "uid": "17c0799c-90be-4ba5-9e9a-e28ca641b350"
              },
              "rules": [
                {
                  "apiGroups": [
                    ""
                  ],
                  "resources": [
                    "configmaps"
                  ],
                  "verbs": [
                    "create",
                    "update"
                  ]
                },
                {
                  "apiGroups": [
                    "",
                    "events.k8s.io"
                  ],
                  "resources": [
                    "events"
                  ],
                  "verbs": [
                    "create",
                    "patch",
                    "update"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:kubelet-config",
        "object": {
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "kind": "RoleBinding",
          "metadata": {
            "creationTimestamp": "2024-09-25T04:19:51Z",
            "name": "kubeadm:kubelet-config",
            "namespace": "kube-system",
            "resourceVersion": "244",
            "uid": "e6413dbf-18cb-4645-a061-cb3e989cdb47"
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "kubeadm:kubelet-config"
          },
          "subjects": [
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:nodes"
            },
            {
              "apiGroup": "rbac.authorization.k8s.io",
              "kind": "Group",
              "name": "system:bootstrappers:kubeadm:default-node-token"
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ServiceAccount/synchronizer",
        "object": {
          "apiVersion": "v1",
          "automountServiceAccountToken": false,
          "kind": "ServiceAccount",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app": "synchronizer",
              "app.kubernetes.io/component": "synchronizer",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "tier": "ks-control-plane"
            },
            "name": "synchronizer",
            "namespace": "default",
            "resourceVersion": "1847138",
            "uid": "4d63fdc7-602c-436a-83e3-184732192c97"
          }
        }
      },
      {
        "resourceID": "/default/ServiceAccount/storage/rbac.authorization.k8s.io/v1//ClusterRole/system:auth-delegator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage:system:auth-delegator",
        "object": {
          "kind": "ServiceAccount",
          "name": "storage",
          "namespace": "default",
          "relatedObjects": [
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRoleBinding",
              "metadata": {
                "annotations": {
                  "meta.helm.sh/release-name": "obs",
                  "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2024-11-29T06:19:51Z",
                "labels": {
                  "app": "storage",
                  "app.kubernetes.io/component": "storage",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "tier": "ks-control-plane"
                },
                "name": "storage:system:auth-delegator",
                "resourceVersion": "1847195",
                "uid": "9ad611fb-6464-49e9-8d07-26589cb07cfb"
              },
              "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
              },
              "subjects": [
                {
                  "kind": "ServiceAccount",
                  "name": "storage",
                  "namespace": "default"
                }
              ]
            },
            {
              "apiVersion": "rbac.authorization.k8s.io/v1",
              "kind": "ClusterRole",
              "metadata": {
                "annotations": {
                  "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2024-09-25T04:19:49Z",
                "labels": {
                  "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:auth-delegator",
                "resourceVersion": "125",
                "uid": "1b863a38-353b-477a-8133-3edf23785b81"
              },
              "rules": [
                {
                  "apiGroups": [
                    "authentication.k8s.io"
                  ],
                  "resources": [
                    "tokenreviews"
                  ],
                  "verbs": [
                    "create"
                  ]
                },
                {
                  "apiGroups": [
                    "authorization.k8s.io"
                  ],
                  "resources": [
                    "subjectaccessreviews"
                  ],
                  "verbs": [
                    "create"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/kubescape-cronjob-template",
        "object": {
          "apiVersion": "v1",
          "data": {
            "cronjobTemplate": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:51Z",
            "labels": {
              "app": "ks-cloud-config",
              "app.kubernetes.io/component": "ks-cloud-config",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "kubescape-cronjob-template",
            "namespace": "default",
            "resourceVersion": "1847160",
            "uid": "c7aa8977-ceab-4c3d-bd5f-bc002dbfeba3"
          }
        }
      },
      {
        "resourceID": "/v1/default/ConfigMap/fluent-bit",
        "object": {
          "apiVersion": "v1",
          "data": {
            "custom_parsers.conf": "XXXXXX",
            "fluent-bit.conf": "XXXXXX",
            "upstream.conf": "XXXXXX"
          },
          "kind": "ConfigMap",
          "metadata": {
            "annotations": {
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:50Z",
            "labels": {
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "fluent-bit",
              "app.kubernetes.io/version": "3.1.9",
              "helm.sh/chart": "fluent-bit-0.47.10"
            },
            "name": "fluent-bit",
            "namespace": "default",
            "resourceVersion": "1847148",
            "uid": "57c7b698-1a50-4f5d-a0fd-9075560e5034"
          }
        }
      },
      {
        "resourceID": "apps/v1/default/Deployment/kubevuln",
        "object": {
          "apiVersion": "apps/v1",
          "kind": "Deployment",
          "metadata": {
            "annotations": {
              "deployment.kubernetes.io/revision": "1",
              "meta.helm.sh/release-name": "obs",
              "meta.helm.sh/release-namespace": "default"
            },
            "creationTimestamp": "2024-11-29T06:19:54Z",
            "generation": 1,
            "labels": {
              "app": "kubevuln",
              "app.kubernetes.io/component": "kubevuln",
              "app.kubernetes.io/instance": "obs",
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/name": "kubescape-operator",
              "app.kubernetes.io/version": "1.23.2",
              "helm.sh/chart": "kubescape-operator-1.23.2",
              "kubescape.io/ignore": "true",
              "kubescape.io/tier": "core",
              "tier": "ks-control-plane"
            },
            "name": "kubevuln",
            "namespace": "default",
            "resourceVersion": "1848285",
            "uid": "a4d5e597-4566-4857-a042-89f6ad7e2d43"
          },
          "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 2,
            "selector": {
              "matchLabels": {
                "app.kubernetes.io/component": "kubevuln",
                "app.kubernetes.io/instance": "obs",
                "app.kubernetes.io/name": "kubescape-operator"
              }
            },
            "strategy": {
              "type": "Recreate"
            },
            "template": {
              "metadata": {
                "annotations": {
                  "checksum/cloud-config": "88e74b1cdcc9075461153f9aa4ab5da3ad67280c46f317c599b4121b694e5c93",
                  "checksum/cloud-secret": "36b7ef21453a679289d8e51039f840d6c88d703464bc85df56f53c43682e07a9"
                },
                "creationTimestamp": null,
                "labels": {
                  "app": "kubevuln",
                  "app.kubernetes.io/component": "kubevuln",
                  "app.kubernetes.io/instance": "obs",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "kubescape-operator",
                  "app.kubernetes.io/version": "1.23.2",
                  "helm.sh/chart": "kubescape-operator-1.23.2",
                  "kubescape.io/ignore": "true",
                  "kubescape.io/tier": "core",
                  "otel": "enabled",
                  "tier": "ks-control-plane"
                }
              },
              "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                  {
                    "name": "kubevuln",
                    "image": "quay.io/kubescape/kubevuln:v0.3.36",
                    "args": [
                      "-alsologtostderr",
                      "-v=4",
                      "2>&1"
                    ],
                    "ports": [
                      {
                        "containerPort": 8080,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "GOMEMLIMIT",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.memory",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "GOMAXPROCS",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "resourceFieldRef": {
                            "resource": "limits.cpu",
                            "divisor": "0"
                          }
                        }
                      },
                      {
                        "name": "KS_LOGGER_LEVEL",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "KS_LOGGER_NAME",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "PRINT_POST_JSON",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "CA_MAX_VULN_SCAN_ROUTINES",
                        "value": "XXXXXX"
                      },
                      {
                        "name": "ACCOUNT_ID",
                        "value": "XXXXXX",
                        "valueFrom": {
                          "secretKeyRef": {
                            "name": "cloud-secret",
                            "key": "account"
                          }
                        }
                      },
                      {
                        "name": "OTEL_COLLECTOR_SVC",
                        "value": "XXXXXX"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "1500m",
                        "ephemeral-storage": "10Gi",
                        "memory": "5000Mi"
                      },
                      "requests": {
                        "cpu": "300m",
                        "ephemeral-storage": "5Gi",
                        "memory": "1000Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "cloud-secret",
                        "readOnly": true,
                        "mountPath": "/etc/credentials"
                      },
                      {
                        "name": "tmp-dir",
                        "mountPath": "/tmp"
                      },
                      {
                        "name": "grype-db-cache",
                        "mountPath": "/home/nonroot/anchore-resources/db"
                      },
                      {
                        "name": "ks-cloud-config",
                        "readOnly": true,
                        "mountPath": "/etc/config"
                      },
                      {
                        "name": "grype-db",
                        "mountPath": "/home/nonroot/.cache/grype"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/v1/liveness",
                        "port": 8080,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 3,
                      "timeoutSeconds": 1,
                      "periodSeconds": 3,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/v1/readiness",
                        "port": 8080,
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "runAsNonRoot": true,
                      "readOnlyRootFilesystem": true,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                  "fsGroup": 65532,
                  "runAsUser": 65532
                },
                "serviceAccount": "kubevuln",
                "serviceAccountName": "kubevuln",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                  {
                    "name": "cloud-secret",
                    "secret": {
                      "defaultMode": 420,
                      "secretName": "cloud-secret"
                    }
                  },
                  {
                    "emptyDir": {},
                    "name": "tmp-dir"
                  },
                  {
                    "emptyDir": {},
                    "name": "grype-db-cache"
                  },
                  {
                    "configMap": {
                      "defaultMode": 420,
                      "items": [
                        {
                          "key": "clusterData",
                          "path": "clusterData.json"
                        },
                        {
                          "key": "services",
                          "path": "services.json"
                        }
                      ],
                      "name": "ks-cloud-config"
                    },
                    "name": "ks-cloud-config"
                  },
                  {
                    "emptyDir": {},
                    "name": "grype-db"
                  }
                ]
              }
            }
          }
        }
      }
    ],
    "attributes": null,
    "results": [
      {
        "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pod-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-32",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "pod-garbage-collector",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-32",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "pod-garbage-collector",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/vpnkit-controller/rbac.authorization.k8s.io/v1//ClusterRole/vpnkit-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/vpnkit-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/kube-root-ca.crt",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/StatefulSet/loki-distributed-index-gateway",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/StatefulSet/loki-distributed-index-gateway",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/loki-distributed-index-gateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/loki-distributed-index-gateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/loki-distributed-index-gateway",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-index-gateway",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/kollector",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/job-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/job-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-24",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "job-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/prometheus-server",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/prometheus-server",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "apps/v1/default/Deployment/prometheus-exporter",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1//Namespace/kube-node-lease",
        "controls": [
          {
            "controlID": "C-0054",
            "name": "Cluster internal networking",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "internal-networking",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-namespaces-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Namespace",
                          "name": "kube-node-lease"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/operator",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/kube-proxy/rbac.authorization.k8s.io/v1//ClusterRole/system:node-proxier/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-proxier",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-26",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1//ClusterRole/system:node-bootstrapper/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:kubelet-bootstrap",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:nodes-kubeadm-config",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-41",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "token-cleaner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/token-cleaner/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:token-cleaner/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:token-cleaner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-41",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "token-cleaner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-41",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "token-cleaner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1//ClusterRole/kubeadm:get-nodes/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:get-nodes",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:nodes/rbac.authorization.k8s.io/v1/kube-system/Role/kubeadm:nodes-kubeadm-config/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:nodes-kubeadm-config",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "failedPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "failedPath": "relatedObjects[1].rules[4].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "reviewPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "reviewPath": "relatedObjects[1].rules[4].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "reviewPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-40",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "statefulset-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-40",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "statefulset-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "failedPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "failedPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "reviewPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "reviewPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "reviewPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:statefulset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-40",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "statefulset-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/node-agent",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/alertmanager",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/replication-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/replication-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-36",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "replication-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
                    "failedPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
                    "failedPath": "relatedObjects[1].rules[3].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
                    "reviewPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
                    "reviewPath": "relatedObjects[1].rules[3].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
                    "reviewPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/deployment-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:deployment-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-15",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "deployment-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-15",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "deployment-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/endpoint-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/endpoint-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-17",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "endpoint-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-public/ServiceAccount/default",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-public/ServiceAccount/default",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-45",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "default",
                          "namespace": "kube-public"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/kubelet-config",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/loki-distributed-gateway",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/loki-distributed-gateway",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-gateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-gateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-gateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-gateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-gateway",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/prometheus-server",
        "controls": [
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-ingester",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/storage/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/storage-auth-reader",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "failedPath": "spec.template.spec.volumes[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "deletePath": "spec.template.spec.volumes[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "failedPath": "spec.template.spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "deletePath": "spec.template.spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "failedPath": "spec.template.spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "deletePath": "spec.template.spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].volumeMounts[1].readOnly",
                      "value": "true"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "failedPath": "spec.template.spec.containers[0].securityContext.privileged",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/DaemonSet/kube-proxy",
                    "deletePath": "spec.template.spec.containers[0].securityContext.privileged",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-daemonsets-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-6",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "DaemonSet",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/storage-auth-reader",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-query-frontend-headless",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/daemon-set-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/daemon-set-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "daemon-set-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
                    "failedPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
                    "failedPath": "relatedObjects[1].rules[1].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
                    "reviewPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
                    "reviewPath": "relatedObjects[1].rules[1].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
                    "reviewPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/node-agent/rbac.authorization.k8s.io/v1//ClusterRole/node-agent/rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-62",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-62",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-62",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-62",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-62",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-62",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-62",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-62",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/system:masters/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-62",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "Group",
                          "name": "system:masters"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/kube-proxy",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:basic-user",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/grafana/rbac.authorization.k8s.io/v1/default/Role/grafana/rbac.authorization.k8s.io/v1/default/RoleBinding/grafana",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:anonymous/rbac.authorization.k8s.io/v1/kube-public/Role/kubeadm:bootstrap-signer-clusterinfo/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/kubeadm:bootstrap-signer-clusterinfo",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/pvc-protection-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pvc-protection-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pvc-protection-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-34",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "pvc-protection-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/horizontal-pod-autoscaler/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:horizontal-pod-autoscaler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:horizontal-pod-autoscaler",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-23",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "horizontal-pod-autoscaler",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/default/RoleBinding/grafana",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//Group/kubeadm:cluster-admins/rbac.authorization.k8s.io/v1//ClusterRole/cluster-admin/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:cluster-admins",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1/kube-system/Role/kubeadm:kubelet-config/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:kubelet-config",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/pv-protection-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:pv-protection-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pv-protection-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-33",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "pv-protection-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/prometheus-msteams-config",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/attachdetach-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/attachdetach-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-1",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "attachdetach-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "bootstrap-signer",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "bootstrap-signer",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "failedPath": "relatedObjects[1].rules[7].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "failedPath": "relatedObjects[1].rules[7].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "failedPath": "relatedObjects[1].rules[7].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "failedPath": "relatedObjects[1].rules[7].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "reviewPath": "relatedObjects[1].rules[7].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "reviewPath": "relatedObjects[1].rules[7].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "reviewPath": "relatedObjects[1].rules[7].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "reviewPath": "relatedObjects[1].rules[7].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "reviewPath": "relatedObjects[1].rules[7].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/alloy/rbac.authorization.k8s.io/v1//ClusterRole/alloy/rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1//Namespace/default",
        "controls": [
          {
            "controlID": "C-0054",
            "name": "Cluster internal networking",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "internal-networking",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/tempo-compactor",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/tempo-compactor",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/tempo-compactor",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/tempo-compactor",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
                    "failedPath": "subjects[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
                    "deletePath": "subjects[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubevuln",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:get-nodes",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/kubevuln",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/default",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/default",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-default-namespace-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "default",
                          "namespace": "default"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "failedPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "failedPath": "relatedObjects[1].rules[4].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "reviewPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "reviewPath": "relatedObjects[1].rules[4].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "reviewPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "daemon-set-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "daemon-set-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "failedPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "failedPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "reviewPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "reviewPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "reviewPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:daemon-set-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "daemon-set-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpoint-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/storage-provisioner",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/storage-provisioner",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/cloud-provider/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:cloud-provider/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:cloud-provider",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "cloud-provider",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:node-proxier",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/synchronizer",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/Deployment/coredns",
        "controls": [
          {
            "controlID": "C-0042",
            "name": "SSH server running inside container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-ssh-to-pod-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/prometheus-msteams",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-service-accounts-7",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "kube-controller-manager",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:discovery/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:discovery",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:nodes/rbac.authorization.k8s.io/v1/kube-system/Role/kubeadm:kubelet-config/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:kubelet-config",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/host-scanner-definition",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/grafana",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            }
          ],
          "score": 20.900000000000002,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/grafana",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/grafana",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/grafana",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/grafana",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:discovery",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:service-account-issuer-discovery",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/replicaset-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/replicaset-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-35",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "replicaset-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "failedPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "failedPath": "relatedObjects[1].rules[1].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "reviewPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "reviewPath": "relatedObjects[1].rules[1].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "reviewPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "failedPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "failedPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "reviewPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "reviewPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "reviewPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:cronjob-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-10",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "cronjob-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-10",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "cronjob-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/kubeadm-config",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "apps/v1/default/Deployment/gateway",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/gateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/gateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/gateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/gateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/StatefulSet/loki-distributed-compactor",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/StatefulSet/loki-distributed-compactor",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/loki-distributed-compactor",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/loki-distributed-compactor",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/loki-distributed-compactor",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/kube-apiserver-legacy-service-account-token-tracking",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kube-proxy",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/alloy",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/tempo-ingester-discovery",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/tempo-query-frontend-discovery",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/prometheus-node-exporter",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:monitoring/rbac.authorization.k8s.io/v1//ClusterRole/system:monitoring/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:monitoring",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/kubevuln-scheduler",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/vpnkit-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1//Namespace/kube-public",
        "controls": [
          {
            "controlID": "C-0054",
            "name": "Cluster internal networking",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "internal-networking",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-namespaces-2",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Namespace",
                          "name": "kube-public"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/validatingadmissionpolicy-status-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/validatingadmissionpolicy-status-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/ephemeral-volume-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/ephemeral-volume-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-20",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "ephemeral-volume-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/alloy",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/alloy",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/pod-garbage-collector",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/pod-garbage-collector",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-32",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "pod-garbage-collector",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "bootstrap-signer",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
                    "failedPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
                    "failedPath": "relatedObjects[1].rules[1].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[1].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
                    "reviewPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:legacy-service-account-token-cleaner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/loki-distributed-gateway",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/StatefulSet/tempo-memcached",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/StatefulSet/tempo-memcached",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/tempo-memcached",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/tempo-memcached",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-autoapprove-bootstrap",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/prometheus-kube-state-metrics",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/prometheus-kube-state-metrics",
                    "failedPath": "automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/default/ServiceAccount/prometheus-kube-state-metrics",
                    "deletePath": "automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/prometheus-server/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-server/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-server",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-ingester-headless",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/kubevuln",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/endpointslice-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpointslice-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslice-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-18",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "endpointslice-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[8].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[8].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[8].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[8].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[8].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[8].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "persistent-volume-binder",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[4].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[4].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[7].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[7].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[7].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[7].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[7].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[7].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "persistent-volume-binder",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "persistent-volume-binder",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:persistent-volume-binder/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "persistent-volume-binder",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/endpoint-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpoint-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpoint-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-17",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "endpoint-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/loki-distributed-query-frontend",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/loki-distributed-query-frontend",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-query-frontend",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-query-frontend",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-query-frontend",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/coredns",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:volume-scheduler",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/Deployment/grafana",
        "controls": [
          {
            "controlID": "C-0042",
            "name": "SSH server running inside container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-ssh-to-pod-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/StatefulSet/alertmanager",
        "controls": [
          {
            "controlID": "C-0042",
            "name": "SSH server running inside container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-ssh-to-pod-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/synchronizer",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/legacy-service-account-token-cleaner",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/legacy-service-account-token-cleaner",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/kube-proxy",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/kube-proxy",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-26",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "kube-proxy",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-public/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "bootstrap-signer",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.volumes[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.volumes[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.volumes[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.volumes[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.volumes[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.volumes[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.volumes[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.volumes[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.volumes[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.volumes[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "failedPath": "spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "deletePath": "spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].volumeMounts[2].readOnly",
                      "value": "true"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-controller-manager-docker-desktop",
                    "fixPath": {
                      "path": "spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-13",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-controller-manager-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:certificate-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:daemon-set-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-service-accounts-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "kube-scheduler",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/kubevuln-cronjob-template",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "apps/v1/default/Deployment/operator",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/operator",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/operator",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/operator",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/operator",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/loki-distributed-distributor",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/loki-distributed-distributor",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-distributor",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-distributor",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-distributor",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-server",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/loki-distributed-namespace-only",
        "controls": [
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/alertmanager-headless",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "failedPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "failedPath": "relatedObjects[1].rules[3].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "reviewPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "reviewPath": "relatedObjects[1].rules[3].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "reviewPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-36",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "replication-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-36",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "replication-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "failedPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "failedPath": "relatedObjects[1].rules[3].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "reviewPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "reviewPath": "relatedObjects[1].rules[3].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "reviewPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replication-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replication-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replication-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-36",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "replication-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/tempo-distributor",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/tempo-distributor",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/tempo-distributor",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/tempo-distributor",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/loki-distributed",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-gateway",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/tempo-gossip-ring",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/Service/kube-dns",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/namespace-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/namespace-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-28",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "namespace-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:resourcequota-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-37",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "resourcequota-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-37",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "resourcequota-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/service-account-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:service-account-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-account-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-39",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "service-account-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
          "priorityVector": [
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0045",
                  "category": "Privilege Escalation (Node)",
                  "tags": [
                    "security",
                    "compliance",
                    "devops",
                    "security-impact",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0048",
                  "category": "Privilege Escalation (Node)",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 7.700000000000001,
              "severity": 3
            }
          ],
          "score": 19.800000000000004,
          "severity": 3
        },
        "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "failedPath": "spec.template.spec.volumes[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "deletePath": "spec.template.spec.volumes[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "failedPath": "spec.template.spec.volumes[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "deletePath": "spec.template.spec.volumes[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "failedPath": "spec.template.spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "deletePath": "spec.template.spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].volumeMounts[1].readOnly",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/fluent-bit",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/DaemonSet/node-agent",
          "priorityVector": [
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0046",
                  "category": "Privilege Escalation (Node)",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 7.700000000000001,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0045",
                  "category": "Privilege Escalation (Node)",
                  "tags": [
                    "security",
                    "compliance",
                    "devops",
                    "security-impact",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0048",
                  "category": "Privilege Escalation (Node)",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 7.700000000000001,
              "severity": 3
            }
          ],
          "score": 27.500000000000007,
          "severity": 3
        },
        "resourceID": "apps/v1/default/DaemonSet/node-agent",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.hostPID",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.hostPID",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsUser",
                      "value": "1000"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.volumes[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.volumes[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.volumes[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.volumes[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.volumes[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.volumes[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.volumes[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.volumes[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].securityContext.capabilities.add[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].securityContext.capabilities.add[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].securityContext.capabilities.add[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].securityContext.capabilities.add[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].securityContext.capabilities.add[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].securityContext.capabilities.add[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].securityContext.capabilities.add[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].securityContext.capabilities.add[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].volumeMounts[5].readOnly",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].volumeMounts[4].readOnly",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].volumeMounts[3].readOnly",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].volumeMounts[0].readOnly",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].volumeMounts[2].readOnly",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].volumeMounts[1].readOnly",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.containers[0].securityContext.capabilities.add[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.containers[0].securityContext.capabilities.add[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "failedPath": "spec.template.spec.automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/node-agent",
                    "deletePath": "spec.template.spec.automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-public/ConfigMap/kube-root-ca.crt",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/extension-apiserver-authentication",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslicemirroring-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/alloy",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/tempo-querier",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/tempo-querier",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/tempo-querier",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/tempo-querier",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/StatefulSet/loki-distributed-ingester",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/StatefulSet/loki-distributed-ingester",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/loki-distributed-ingester",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/loki-distributed-ingester",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/loki-distributed-ingester",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/tempo-query-frontend",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/tempo-query-frontend",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/tempo-query-frontend",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/tempo-query-frontend",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage:system:auth-delegator",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-public/RoleBinding/system:controller:bootstrap-signer",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/gateway",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1//Namespace/kube-system",
        "controls": [
          {
            "controlID": "C-0054",
            "name": "Cluster internal networking",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "internal-networking",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-namespaces-1",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Namespace",
                          "name": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-10",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Namespace",
                          "name": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/storage",
          "priorityVector": [
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            }
          ],
          "score": 3.3000000000000003,
          "severity": 1
        },
        "resourceID": "apps/v1/default/Deployment/storage",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/storage",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/storage",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/storage",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/storage",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/storage",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/storage",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/registry-scan-cronjob-template",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/grafana",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-index-gateway-headless",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/StatefulSet/alertmanager",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            }
          ],
          "score": 20.900000000000002,
          "severity": 3
        },
        "resourceID": "apps/v1/default/StatefulSet/alertmanager",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alertmanager",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alertmanager",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alertmanager",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alertmanager",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alertmanager",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alertmanager",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alertmanager",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alertmanager",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alertmanager",
                    "failedPath": "spec.template.spec.automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alertmanager",
                    "deletePath": "spec.template.spec.automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/StatefulSet/alloy",
        "controls": [
          {
            "controlID": "C-0042",
            "name": "SSH server running inside container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-ssh-to-pod-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/loki-distributed-ingress-metrics",
        "controls": [
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/prometheus-exporter",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/prometheus-pushgateway",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/otel-collector",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/kube-dns/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-dns/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-dns",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-34",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "kube-dns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/StatefulSet/alloy",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            }
          ],
          "score": 20.900000000000002,
          "severity": 3
        },
        "resourceID": "apps/v1/default/StatefulSet/alloy",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/alloy",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/loki-distributed-runtime",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/ks-capabilities",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/node-agent",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/deployment-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/deployment-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-15",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "deployment-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/prometheus-server",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/Deployment/loki-distributed-gateway",
        "controls": [
          {
            "controlID": "C-0042",
            "name": "SSH server running inside container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-ssh-to-pod-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/otel-collector",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/otel-collector",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/expand-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/expand-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-21",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "expand-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/pvc-protection-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/pvc-protection-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-34",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "pvc-protection-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
                    "failedPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
                    "failedPath": "relatedObjects[1].rules[3].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
                    "reviewPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
                    "reviewPath": "relatedObjects[1].rules[3].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
                    "reviewPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/node-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:node-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-29",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "node-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-29",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "node-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-account-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-querier",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/tempo-distributor",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/resourcequota-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/resourcequota-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-37",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "resourcequota-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/endpointslicemirroring-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:endpointslicemirroring-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslicemirroring-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-19",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "endpointslicemirroring-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/validatingadmissionpolicy-status-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:validatingadmissionpolicy-status-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:validatingadmissionpolicy-status-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "batch/v1/default/CronJob/kubescape-scheduler",
        "controls": [
          {
            "controlID": "C-0026",
            "name": "Kubernetes CronJob",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-deny-cronjobs",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "batch/v1/default/CronJob/kubescape-scheduler",
                    "fixPath": {
                      "path": "spec.jobTemplate.spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "batch/v1/default/CronJob/kubescape-scheduler",
                    "fixPath": {
                      "path": "spec.jobTemplate.spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "batch/v1/default/CronJob/kubescape-scheduler",
                    "fixPath": {
                      "path": "spec.jobTemplate.spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "batch/v1/default/CronJob/kubescape-scheduler",
                    "fixPath": {
                      "path": "spec.jobTemplate.spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:validatingadmissionpolicy-status-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/prometheus-server",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1/kube-system/Role/kubeadm:nodes-kubeadm-config/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:nodes-kubeadm-config",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "batch/v1/default/CronJob/kubevuln-scheduler",
        "controls": [
          {
            "controlID": "C-0026",
            "name": "Kubernetes CronJob",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-deny-cronjobs",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "batch/v1/default/CronJob/kubevuln-scheduler",
                    "fixPath": {
                      "path": "spec.jobTemplate.spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "batch/v1/default/CronJob/kubevuln-scheduler",
                    "fixPath": {
                      "path": "spec.jobTemplate.spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "batch/v1/default/CronJob/kubevuln-scheduler",
                    "fixPath": {
                      "path": "spec.jobTemplate.spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "batch/v1/default/CronJob/kubevuln-scheduler",
                    "fixPath": {
                      "path": "spec.jobTemplate.spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/alloy",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/tempo",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/bootstrap-signer",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/bootstrap-signer",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "bootstrap-signer",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[1].verbs[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[1].verbs[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1/default/Role/synchronizer/rbac.authorization.k8s.io/v1/default/RoleBinding/synchronizer",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-after-finished-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-after-finished-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-42",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "ttl-after-finished-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-42",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "ttl-after-finished-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
                    "failedPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
                    "failedPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
                    "reviewPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
                    "reviewPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
                    "reviewPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-66",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "User",
                          "name": "system:kube-scheduler"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-14",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "User",
                          "name": "system:kube-scheduler"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            }
          ],
          "score": 20.900000000000002,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-msteams",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "failedPath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "deletePath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "failedPath": "spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "deletePath": "spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "failedPath": "spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "deletePath": "spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].volumeMounts[1].readOnly",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].volumeMounts[0].readOnly",
                      "value": "true"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/etcd-docker-desktop",
                    "fixPath": {
                      "path": "spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-gke-kube-system-resources-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "etcd-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pv-protection-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:monitoring",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/tempo-query-frontend",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/endpointslice-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/endpointslice-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-18",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "endpointslice-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/synchronizer/rbac.authorization.k8s.io/v1//ClusterRole/synchronizer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/synchronizer",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "failedPath": "relatedObjects[1].rules[0].resources[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "reviewPath": "relatedObjects[1].rules[0].resources[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kollector/rbac.authorization.k8s.io/v1//ClusterRole/kollector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kollector",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:basic-user/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:basic-user",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRole/storage-provisioner/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage-provisioner",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-84",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].verbs[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].verbs[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[1].verbs[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[1].verbs[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].verbs[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1/default/Role/operator/rbac.authorization.k8s.io/v1/default/RoleBinding/operator",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/vpnkit-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/vpnkit-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/ttl-after-finished-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/ttl-after-finished-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-42",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "ttl-after-finished-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:authenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:public-info-viewer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:serviceaccounts/rbac.authorization.k8s.io/v1//ClusterRole/system:service-account-issuer-discovery/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:service-account-issuer-discovery",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-node-lease/ConfigMap/kube-root-ca.crt",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ConfigMap/kube-root-ca.crt",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/grafana",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:cloud-provider",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/cluster-admin",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "failedPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "failedPath": "relatedObjects[1].rules[3].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "reviewPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "reviewPath": "relatedObjects[1].rules[3].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "reviewPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-35",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "replicaset-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-35",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "replicaset-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "failedPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "failedPath": "relatedObjects[1].rules[3].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "reviewPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "reviewPath": "relatedObjects[1].rules[3].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "reviewPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:replicaset-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:replicaset-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-35",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "replicaset-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/kubevuln/rbac.authorization.k8s.io/v1//ClusterRole/kubevuln/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubevuln",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].resources[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].resources[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[1].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[1].verbs[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[1].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[1].resources[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[1].verbs[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[1].rules[1].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/operator/rbac.authorization.k8s.io/v1//ClusterRole/operator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/operator",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-scheduler-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-scheduler-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-scheduler-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "failedPath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "deletePath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-scheduler-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-scheduler-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "failedPath": "spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "deletePath": "spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-scheduler-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-scheduler-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-scheduler-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-scheduler-docker-desktop",
                    "fixPath": {
                      "path": "spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-scheduler-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-12",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-scheduler-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/synchronizer",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/grafana-clusterrolebinding",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/grafana",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-node-lease/ServiceAccount/default",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-node-lease/ServiceAccount/default",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-44",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "default",
                          "namespace": "kube-node-lease"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/gateway",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/gateway",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/ks-cloud-config",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-proxier",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/loki-distributed-ingress",
        "controls": [
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/storage",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/prometheus-node-exporter",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/disruption-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:disruption-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:disruption-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "disruption-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[1].rules[5].resources[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[1].rules[5].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[1].rules[5].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[1].rules[5].resources[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[1].rules[5].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[1].rules[5].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[1].rules[9].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[1].rules[9].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[1].rules[9].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[1].rules[9].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[1].rules[9].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[1].rules[9].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[1].rules[9].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[1].rules[9].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-65",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "User",
                          "name": "system:kube-controller-manager"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-15",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "User",
                          "name": "system:kube-controller-manager"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[1].rules[4].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[1].rules[4].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[1].rules[4].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRole/system:kube-controller-manager/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-controller-manager",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-65",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "User",
                          "name": "system:kube-controller-manager"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-system-users-and-groups-15",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "apiVersion": "rbac.authorization.k8s.io",
                          "kind": "User",
                          "name": "system:kube-controller-manager"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:node-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/token-cleaner",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/token-cleaner",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-41",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "token-cleaner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/alertmanager",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/alertmanager",
                    "failedPath": "automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/default/ServiceAccount/alertmanager",
                    "deletePath": "automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/prometheus-pushgateway",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/prometheus-pushgateway",
                    "failedPath": "automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/default/ServiceAccount/prometheus-pushgateway",
                    "deletePath": "automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-public/RoleBinding/kubeadm:bootstrap-signer-clusterinfo",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "rbac.authorization.k8s.io/v1/kube-public/RoleBinding/kubeadm:bootstrap-signer-clusterinfo",
                    "failedPath": "subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "rbac.authorization.k8s.io/v1/kube-public/RoleBinding/kubeadm:bootstrap-signer-clusterinfo",
                    "deletePath": "subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-dns",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/kubescape",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/clusterrole-aggregation-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/clusterrole-aggregation-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-4",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "clusterrole-aggregation-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/certificate-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/certificate-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-5",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "certificate-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-controller-manager/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-controller-manager",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "apps/v1/default/Deployment/synchronizer",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/synchronizer",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/synchronizer",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/synchronizer",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/synchronizer",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/Pod/storage-provisioner",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-11",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-11",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-11",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "failedPath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "failedPath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "deletePath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "deletePath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-11",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-11",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].volumeMounts[0].readOnly",
                      "value": "true"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-11",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-11",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-11",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/storage-provisioner",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-11",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-minikube-kube-system-resources-11",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "storage-provisioner",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            }
          ],
          "score": 20.900000000000002,
          "severity": 3
        },
        "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.privileged",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[1].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/prometheus-server",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            }
          ],
          "score": 20.900000000000002,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "failedPath": "spec.template.spec.automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-pushgateway",
                    "deletePath": "spec.template.spec.automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:kubelet-bootstrap",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ephemeral-volume-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/tempo-ingester",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/disruption-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/disruption-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-16",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "disruption-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/endpointslicemirroring-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/endpointslicemirroring-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-19",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "endpointslicemirroring-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1/kube-system/Role/kube-proxy/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kube-proxy",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/storage/rbac.authorization.k8s.io/v1//ClusterRole/storage/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:kube-scheduler",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/attachdetach-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:attachdetach-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:attachdetach-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-1",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "attachdetach-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/ttl-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ttl-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ttl-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-43",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "ttl-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/prometheus-msteams-card-template",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "apps/v1/kube-system/Deployment/coredns",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/Deployment/coredns",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "apps/v1/kube-system/Deployment/coredns",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-deployments-1",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Deployment",
                          "name": "coredns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-7",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Deployment",
                          "name": "coredns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-deployments-1",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Deployment",
                          "name": "coredns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-7",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Deployment",
                          "name": "coredns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "apps/v1/kube-system/Deployment/coredns",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-deployments-1",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Deployment",
                          "name": "coredns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-7",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Deployment",
                          "name": "coredns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-deployments-1",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Deployment",
                          "name": "coredns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  },
                  {
                    "guid": "",
                    "name": "exclude-eks-resources-7",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Deployment",
                          "name": "coredns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "C-.*"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pod-garbage-collector",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/ttl-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/ttl-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-43",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "ttl-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/persistent-volume-binder",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/persistent-volume-binder",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-31",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "persistent-volume-binder",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/service-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/service-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-40",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "service-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/node-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/node-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-29",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "node-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:bootstrappers:kubeadm:default-node-token/rbac.authorization.k8s.io/v1//ClusterRole/system:certificates.k8s.io:certificatesigningrequests:nodeclient/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-autoapprove-bootstrap",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/route-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:route-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:route-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-service-accounts-9",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "route-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/grafana/rbac.authorization.k8s.io/v1//ClusterRole/grafana-clusterrole/rbac.authorization.k8s.io/v1//ClusterRoleBinding/grafana-clusterrolebinding",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/certificate-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:certificate-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:certificate-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-5",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "certificate-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/prometheus-kube-state-metrics",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/pv-protection-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/pv-protection-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-33",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "pv-protection-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/prometheus-exporter/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-exporter/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-exporter",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/system::leader-locking-kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0260",
                  "category": "Lateral Movement (Network)",
                  "tags": [
                    "security"
                  ]
                }
              ],
              "score": 5.5,
              "severity": 2
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0045",
                  "category": "Privilege Escalation (Node)",
                  "tags": [
                    "security",
                    "compliance",
                    "devops",
                    "security-impact",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0048",
                  "category": "Privilege Escalation (Node)",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 7.700000000000001,
              "severity": 3
            }
          ],
          "score": 42.900000000000006,
          "severity": 3
        },
        "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "failedPath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "failedPath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "deletePath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "deletePath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].volumeMounts[0].readOnly",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/vpnkit-controller",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "failed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/loki-distributed-querier",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/loki-distributed-querier",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-querier",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-querier",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/loki-distributed-querier",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:resourcequota-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:attachdetach-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:route-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/fluent-bit",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:coredns",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/fluent-bit",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/fluent-bit",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "failedPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "failedPath": "relatedObjects[1].rules[3].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "reviewPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "reviewPath": "relatedObjects[1].rules[3].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "reviewPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-24",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "job-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-24",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "job-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "failedPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "failedPath": "relatedObjects[1].rules[3].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "failedPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "reviewPath": "relatedObjects[1].rules[3].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "reviewPath": "relatedObjects[1].rules[3].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "reviewPath": "relatedObjects[1].rules[3].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/job-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:job-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:job-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-24",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "job-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "failedPath": "relatedObjects[1].rules[0].resources[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "failedPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "reviewPath": "relatedObjects[1].rules[0].resources[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1//ClusterRole/kubescape/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubescape",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:disruption-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:horizontal-pod-autoscaler",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::leader-locking-kube-scheduler",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/kubernetes",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/operator",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/node-agent",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/node-agent",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-proxy/rbac.authorization.k8s.io/v1//ClusterRole/system:node-proxier/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:node-proxier",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
                    "failedPath": "relatedObjects[1].rules[0].verbs[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[6]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/kubescape/rbac.authorization.k8s.io/v1/default/Role/kubescape/rbac.authorization.k8s.io/v1/default/RoleBinding/kubescape",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/operator",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/node-agent",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/storage",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/default/ServiceAccount/storage",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/service-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:service-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-kube-system-service-accounts-40",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "service-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-public/ConfigMap/cluster-info",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/grafana",
        "controls": [
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-22",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "generic-garbage-collector",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-22",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "generic-garbage-collector",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-22",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "generic-garbage-collector",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-22",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "generic-garbage-collector",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].verbs[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:generic-garbage-collector/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:generic-garbage-collector",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-22",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "generic-garbage-collector",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
          "priorityVector": [
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0260",
                  "category": "Lateral Movement (Network)",
                  "tags": [
                    "security"
                  ]
                }
              ],
              "score": 5.5,
              "severity": 2
            }
          ],
          "score": 5.5,
          "severity": 2
        },
        "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-pod-kube-apiserver",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-apiserver-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0077"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0017"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0020"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0030"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0034"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0016"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0270"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0271"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0048"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0041"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-pod-kube-apiserver",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-apiserver-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0077"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0017"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0020"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0030"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0034"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0016"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0270"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0271"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0048"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0041"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0067",
            "name": "Audit logs enabled",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "k8s-audit-logs-enabled-native",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.containers[0].command",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "reviewPath": "spec.containers[0].command",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsNonRoot",
                      "value": "true"
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-pod-kube-apiserver",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-apiserver-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0077"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0017"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0020"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0030"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0034"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0016"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0270"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0271"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0048"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0041"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0005",
            "name": "API server insecure port is enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "insecure-port-flag",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.volumes[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.volumes[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.volumes[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.volumes[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.volumes[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.containers[0].volumeMounts[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.volumes[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.containers[0].volumeMounts[4]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-pod-kube-apiserver",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-apiserver-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0077"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0017"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0020"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0030"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0034"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0016"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0270"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0271"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0048"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0041"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-pod-kube-apiserver",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-apiserver-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0077"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0017"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0020"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0030"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0034"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0016"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0270"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0271"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0048"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0041"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0088",
            "name": "RBAC enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rbac-enabled-native",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "deletePath": "spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-pod-kube-apiserver",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-apiserver-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0077"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0017"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0020"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0030"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0034"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0016"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0270"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0271"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0048"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0041"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-pod-kube-apiserver",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-apiserver-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0077"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0017"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0020"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0030"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0034"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0016"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0270"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0271"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0048"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0041"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-pod-kube-apiserver",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-apiserver-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0077"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0017"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0020"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0030"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0034"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0016"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0270"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0271"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0048"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0041"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0068",
            "name": "PSP enabled",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "psp-enabled-native",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "failedPath": "spec.containers[0].command[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "reviewPath": "spec.containers[0].command[5]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "fixPath": {
                      "path": "spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-pod-kube-apiserver",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "Pod",
                          "name": "kube-apiserver-.*",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0077"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0017"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0013"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0020"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0030"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0034"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0016"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0270"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "C-0271"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0048"
                      },
                      {
                        "frameworkName": "",
                        "controlID": "c-0041"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0066",
            "name": "Secret/etcd encryption enabled",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "etcd-encryption-native",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/Pod/kube-apiserver-docker-desktop",
                    "fixPath": {
                      "path": "spec.containers[0].command[29]",
                      "value": "--encryption-provider-config=YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/Deployment/prometheus-msteams",
        "controls": [
          {
            "controlID": "C-0042",
            "name": "SSH server running inside container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-ssh-to-pod-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "networking.k8s.io/v1/default/NetworkPolicy/loki-distributed-egress-dns",
        "controls": [
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/tempo-memcached",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1//ClusterRole/system:volume-scheduler/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:volume-scheduler",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/otel-collector",
          "priorityVector": [
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0017",
                  "category": "Persistence",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 3.3000000000000003,
              "severity": 1
            }
          ],
          "score": 3.3000000000000003,
          "severity": 1
        },
        "resourceID": "apps/v1/default/Deployment/otel-collector",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/otel-collector",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/otel-collector",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem",
                      "value": "true"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/otel-collector",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/otel-collector",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/otel-collector",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/otel-collector",
                    "fixPath": {
                      "path": "spec.template.spec.automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/tempo-runtime",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/tempo-distributor-discovery",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/prometheus-server-headless",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/coredns",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/coredns",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "coredns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "failedPath": "relatedObjects[1].rules[22].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "failedPath": "relatedObjects[1].rules[22].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "failedPath": "relatedObjects[1].rules[22].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "failedPath": "relatedObjects[1].rules[22].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "reviewPath": "relatedObjects[1].rules[22].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "reviewPath": "relatedObjects[1].rules[22].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "reviewPath": "relatedObjects[1].rules[22].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "reviewPath": "relatedObjects[1].rules[22].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/default/ServiceAccount/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRole/prometheus-kube-state-metrics/rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-kube-state-metrics",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/clusterrole-aggregation-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:clusterrole-aggregation-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:clusterrole-aggregation-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-4",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "clusterrole-aggregation-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:legacy-service-account-token-cleaner",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/statefulset-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/statefulset-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-40",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "statefulset-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/ephemeral-volume-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:ephemeral-volume-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:ephemeral-volume-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-20",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "ephemeral-volume-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//User/system:kube-scheduler/rbac.authorization.k8s.io/v1/kube-system/Role/extension-apiserver-authentication-reader/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system::extension-apiserver-authentication-reader",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:service-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:cronjob-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/cronjob-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/cronjob-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-10",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "cronjob-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/horizontal-pod-autoscaler",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/horizontal-pod-autoscaler",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-23",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "horizontal-pod-autoscaler",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/prometheus-exporter",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/generic-garbage-collector",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/generic-garbage-collector",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-22",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "generic-garbage-collector",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/Role/system:controller:bootstrap-signer/rbac.authorization.k8s.io/v1/kube-system/RoleBinding/system:controller:bootstrap-signer",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "bootstrap-signer",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-3",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "bootstrap-signer",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:unauthenticated/rbac.authorization.k8s.io/v1//ClusterRole/system:public-info-viewer/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:public-info-viewer",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-autoapprove-certificate-rotation",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/tempo-config",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:endpointslice-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/tempo-querier",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-memberlist",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-query-frontend",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/alertmanager",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/coredns/rbac.authorization.k8s.io/v1//ClusterRole/system:coredns/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:coredns",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-8",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "coredns",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/prometheus-exporter",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/fluent-bit/rbac.authorization.k8s.io/v1//ClusterRole/fluent-bit/rbac.authorization.k8s.io/v1//ClusterRoleBinding/fluent-bit",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/grafana-dashboards-default",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/kubescape-scheduler",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "apps/v1/default/Deployment/kubescape",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/kubescape",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/kubescape",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/kubescape",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/kubescape",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/fluent-bit",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-compactor",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/root-ca-cert-publisher",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/root-ca-cert-publisher",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-38",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "root-ca-cert-publisher",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/default",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/default",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-14",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "default",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/kube-system/ServiceAccount/service-account-controller",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/v1/kube-system/ServiceAccount/service-account-controller",
                    "fixPath": {
                      "path": "automountServiceAccountToken",
                      "value": "false"
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-39",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "service-account-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
                    "failedPath": "relatedObjects[1].rules[5].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
                    "failedPath": "relatedObjects[1].rules[5].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
                    "failedPath": "relatedObjects[1].rules[5].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
                    "reviewPath": "relatedObjects[1].rules[5].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
                    "reviewPath": "relatedObjects[1].rules[5].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
                    "reviewPath": "relatedObjects[1].rules[5].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/expand-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:expand-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:expand-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-21",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "expand-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-21",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "expand-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/cs-matching-rules",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:node",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/loki-distributed-distributor",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io//Group/system:nodes/rbac.authorization.k8s.io/v1//ClusterRole/system:certificates.k8s.io:certificatesigningrequests:selfnodeclient/rbac.authorization.k8s.io/v1//ClusterRoleBinding/kubeadm:node-autoapprove-certificate-rotation",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/Deployment/prometheus-kube-state-metrics",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            }
          ],
          "score": 17.6,
          "severity": 3
        },
        "resourceID": "apps/v1/default/Deployment/prometheus-kube-state-metrics",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-kube-state-metrics",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-kube-state-metrics",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-kube-state-metrics",
                    "failedPath": "spec.template.spec.automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/prometheus-kube-state-metrics",
                    "deletePath": "spec.template.spec.automountServiceAccountToken",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/StatefulSet/tempo-ingester",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 9.6,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 9.6,
              "severity": 3
            }
          ],
          "score": 19.2,
          "severity": 3
        },
        "resourceID": "apps/v1/default/StatefulSet/tempo-ingester",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/tempo-ingester",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/tempo-ingester",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:clusterrole-aggregation-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:statefulset-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:persistent-volume-binder",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:pvc-protection-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/DaemonSet/fluent-bit",
        "controls": [
          {
            "controlID": "C-0042",
            "name": "SSH server running inside container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-ssh-to-pod-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/tempo-compactor",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/Service/alloy-cluster",
        "controls": [
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/kubescape",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-28",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "namespace-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].verbs[2]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].verbs[3]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-28",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "namespace-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[1].rules[2].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].verbs[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[1].rules[2].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/namespace-controller/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:namespace-controller/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:namespace-controller",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-28",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "namespace-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-28",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "namespace-controller",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/otel-collector-config",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "prioritizedResource": {
          "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
          "priorityVector": [
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0271",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "service-destruction",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0270",
                  "category": "Denial of service",
                  "tags": [
                    "compliance",
                    "devops",
                    "security"
                  ]
                }
              ],
              "score": 8.8,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0041",
                  "category": "Lateral Movement (Network)",
                  "tags": [
                    "security",
                    "compliance"
                  ]
                }
              ],
              "score": 7.700000000000001,
              "severity": 3
            },
            {
              "attackTrackName": "workload-external-track",
              "type": "control",
              "vector": [
                {
                  "controlID": "C-0048",
                  "category": "Privilege Escalation (Node)",
                  "tags": [
                    "security",
                    "compliance",
                    "smartRemediation"
                  ]
                }
              ],
              "score": 7.700000000000001,
              "severity": 3
            }
          ],
          "score": 33.00000000000001,
          "severity": 3
        },
        "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "failedPath": "spec.template.spec.hostPID",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "deletePath": "spec.template.spec.hostPID",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation",
                      "value": "false"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.privileged",
                      "value": "false"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.memory",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "failedPath": "spec.template.spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "deletePath": "spec.template.spec.volumes[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "failedPath": "spec.template.spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "failedPath": "spec.template.spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "deletePath": "spec.template.spec.volumes[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "deletePath": "spec.template.spec.containers[0].volumeMounts[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "failedPath": "spec.template.spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "deletePath": "spec.template.spec.hostNetwork",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/DaemonSet/prometheus-node-exporter",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].resources.limits.cpu",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "apps/v1/default/StatefulSet/kollector",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/kollector",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/StatefulSet/kollector",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/kollector",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/StatefulSet/kollector",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:deployment-controller",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-38",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "root-ca-cert-publisher",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed",
              "subStatus": "w/exceptions"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": "w/exceptions",
                "paths": [
                  {
                    "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
                    "failedPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
                    "failedPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
                    "failedPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
                    "failedPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
                    "failedPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
                    "reviewPath": "relatedObjects[1].rules[0].resources[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
                    "reviewPath": "relatedObjects[1].rules[0].verbs[1]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
                    "reviewPath": "relatedObjects[1].rules[0].apiGroups[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
                    "reviewPath": "relatedObjects[0].subjects[0]",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  },
                  {
                    "resourceID": "/kube-system/ServiceAccount/root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRole/system:controller:root-ca-cert-publisher/rbac.authorization.k8s.io/v1//ClusterRoleBinding/system:controller:root-ca-cert-publisher",
                    "reviewPath": "relatedObjects[0].roleRef.name",
                    "fixPath": {
                      "path": "",
                      "value": ""
                    }
                  }
                ],
                "exception": [
                  {
                    "guid": "",
                    "name": "exclude-aks-kube-system-sa-38",
                    "attributes": {
                      "systemException": true
                    },
                    "policyType": "postureExceptionPolicy",
                    "actions": [
                      "alertOnly"
                    ],
                    "resources": [
                      {
                        "designatorType": "Attributes",
                        "attributes": {
                          "kind": "ServiceAccount",
                          "name": "root-ca-cert-publisher",
                          "namespace": "kube-system"
                        }
                      }
                    ],
                    "posturePolicies": [
                      {
                        "frameworkName": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "rbac.authorization.k8s.io/v1/kube-system/RoleBinding/kubeadm:kubelet-config",
        "controls": [
          {
            "controlID": "C-0262",
            "name": "Anonymous access enabled",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "anonymous-access-enabled",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ServiceAccount/synchronizer",
        "controls": [
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/default/ServiceAccount/storage/rbac.authorization.k8s.io/v1//ClusterRole/system:auth-delegator/rbac.authorization.k8s.io/v1//ClusterRoleBinding/storage:system:auth-delegator",
        "controls": [
          {
            "controlID": "C-0002",
            "name": "Prevent containers from allowing command execution",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exec-into-container-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0031",
            "name": "Delete Kubernetes events",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-delete-k8s-events-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0015",
            "name": "List Kubernetes secrets",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-list-get-secrets-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0187",
            "name": "Minimize wildcard use in Roles and ClusterRoles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0007",
            "name": "Roles with delete capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-excessive-delete-rights-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0053",
            "name": "Access container service account",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "access-container-service-account-v1",
                "status": "failed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0188",
            "name": "Minimize access to create pods",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-create-pod",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-subject-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0265",
            "name": "Authenticated user has sensitive permissions",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "system-authenticated-allowed-to-take-over-cluster",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0037",
            "name": "CoreDNS poisoning",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-update-configmap-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0063",
            "name": "Portforwarding privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-can-portforward-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0035",
            "name": "Administrative Roles",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-list-all-cluster-admins-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/kubescape-cronjob-template",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "/v1/default/ConfigMap/fluent-bit",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-configmap",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      },
      {
        "resourceID": "apps/v1/default/Deployment/kubevuln",
        "controls": [
          {
            "controlID": "C-0012",
            "name": "Applications credentials in configuration files",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "sensitiveKeyNames": [
                    "aws_secret_access_key",
                    "azure_batchai_storage_key",
                    "azure_batch_key",
                    "secret",
                    "key",
                    "password",
                    "pwd",
                    "token",
                    "jwt",
                    "bearer",
                    "credential"
                  ],
                  "sensitiveKeyNamesAllowed": [],
                  "sensitiveValues": [
                    "BEGIN \\w+ PRIVATE KEY",
                    "PRIVATE KEY",
                    "eyJhbGciO",
                    "JWT",
                    "Bearer",
                    "_key_",
                    "_secret_"
                  ],
                  "sensitiveValuesAllowed": []
                },
                "name": "rule-credentials-in-env-var",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0038",
            "name": "Host PID/IPC privileges",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-pid-ipc-privileges",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0016",
            "name": "Allow privilege escalation",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-allow-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0044",
            "name": "Container hostPort",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "container-hostPort",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0271",
            "name": "Ensure memory limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-memory-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0013",
            "name": "Non-root containers",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "non-root-containers",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/kubevuln",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.runAsGroup",
                      "value": "1000"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0048",
            "name": "HostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-any-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0014",
            "name": "Access Kubernetes dashboard",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-access-dashboard-wl-v1",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0017",
            "name": "Immutable container filesystem",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "immutable-container-filesystem",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0046",
            "name": "Insecure capabilities",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "controlConfigurations": {
                  "insecureCapabilities": [
                    "SETPCAP",
                    "NET_ADMIN",
                    "NET_RAW",
                    "SYS_MODULE",
                    "SYS_RAWIO",
                    "SYS_PTRACE",
                    "SYS_ADMIN",
                    "SYS_BOOT",
                    "MAC_OVERRIDE",
                    "MAC_ADMIN",
                    "PERFMON",
                    "ALL",
                    "BPF"
                  ]
                },
                "name": "insecure-capabilities",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0041",
            "name": "HostNetwork access",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "host-network-access",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0045",
            "name": "Writable hostPath mount",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-rw-hostpath",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0030",
            "name": "Ingress and Egress blocked",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ingress-and-egress-blocked",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0055",
            "name": "Linux hardening",
            "status": {
              "status": "failed"
            },
            "rules": [
              {
                "name": "linux-hardening",
                "status": "failed",
                "subStatus": "",
                "paths": [
                  {
                    "resourceID": "apps/v1/default/Deployment/kubevuln",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seccompProfile",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/kubevuln",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.seLinuxOptions",
                      "value": "YOUR_VALUE"
                    }
                  },
                  {
                    "resourceID": "apps/v1/default/Deployment/kubevuln",
                    "fixPath": {
                      "path": "spec.template.spec.containers[0].securityContext.capabilities.drop[0]",
                      "value": "YOUR_VALUE"
                    }
                  }
                ]
              }
            ]
          },
          {
            "controlID": "C-0270",
            "name": "Ensure CPU limits are set",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "resources-cpu-limits",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0256",
            "name": "External facing",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "exposure-to-internet",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0057",
            "name": "Privileged container",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "rule-privilege-escalation",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0020",
            "name": "Mount service principal",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "alert-mount-potential-credentials-paths",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0034",
            "name": "Automatic mapping of service account",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "automount-service-account",
                "status": "passed",
                "subStatus": ""
              }
            ]
          },
          {
            "controlID": "C-0260",
            "name": "Missing network policy",
            "status": {
              "status": "passed"
            },
            "rules": [
              {
                "name": "ensure_network_policy_configured_in_labels",
                "status": "passed",
                "subStatus": ""
              }
            ]
          }
        ]
      }
    ],
    "metadata": {
      "targetMetadata": {
        "clusterContextMetadata": {
          "namespaceToNumberOfResources": {
            "default": 138,
            "kube-node-lease": 2,
            "kube-public": 7,
            "kube-system": 70
          },
          "contextName": "docker-desktop",
          "numberOfWorkerNodes": 1
        }
      },
      "clusterMetadata": {},
      "scanMetadata": {
        "targetType": "Framework",
        "kubescapeVersion": "v3.0.21",
        "formatVersion": "v2",
        "formats": [
          "json"
        ],
        "targetNames": [
          "clusterscan",
          "mitre",
          "nsa"
        ],
        "failThreshold": 100
      }
    },
    "paginationInfo": {
      "chunkNumber": 0,
      "isLastChunk": false
    },
    "customerGUIDGenerated": false
  }